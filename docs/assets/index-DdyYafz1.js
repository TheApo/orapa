(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))r(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const n of s.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&r(n)}).observe(document,{childList:!0,subtree:!0});function t(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(i){if(i.ep)return;i.ep=!0;const s=t(i);fetch(i.href,s)}})();const E=8,L=10;var a=(l=>(l[l.EMPTY=0]="EMPTY",l[l.BLOCK=1]="BLOCK",l[l.TRIANGLE_TL=2]="TRIANGLE_TL",l[l.TRIANGLE_TR=3]="TRIANGLE_TR",l[l.TRIANGLE_BR=4]="TRIANGLE_BR",l[l.TRIANGLE_BL=5]="TRIANGLE_BL",l[l.ABSORB=6]="ABSORB",l))(a||{});const R={NORMAL:"Normal",MITTEL:"Mittel",SCHWER:"Schwer"},f={GELB:"#f1c40f",ROT:"#e74c3c",BLAU:"#3498db",WEISS:"#ecf0f1",TRANSPARENT:"#95a5a6",LILA:"#9b59b6",HIMMELBLAU:"#5dade2",GRUEN:"#2ecc71",PINK:"#f06292",ORANGE:"#e67e22",ZITRONE:"#d4e157",HELLLILA:"#ba68c8",SCHWARZ_GEM:"#2c3a47",SCHWARZ_MIX:"#34495e",HELLGRUEN:"#81c784",HELLORANGE:"#ffb74d",GRAU:"#9e9e9e",ABSORBIERT:"#17202a",INVALID_GEM:"#e74c3c"},M={BLAU:f.BLAU,GELB:f.GELB,ROT:f.ROT,WEISS:f.WEISS,"BLAU,ROT":f.LILA,"BLAU,WEISS":f.HIMMELBLAU,"BLAU,GELB":f.GRUEN,"ROT,WEISS":f.PINK,"GELB,ROT":f.ORANGE,"GELB,WEISS":f.ZITRONE,"BLAU,ROT,WEISS":f.HELLLILA,"BLAU,GELB,ROT":f.SCHWARZ_MIX,"BLAU,GELB,WEISS":f.HELLGRUEN,"GELB,ROT,WEISS":f.HELLORANGE,"BLAU,GELB,ROT,WEISS":f.GRAU},v={BLAU:"Blau",GELB:"Gelb",ROT:"Rot",WEISS:"Weiss","BLAU,ROT":"Lila","BLAU,WEISS":"Himmelblau","BLAU,GELB":"Grün","ROT,WEISS":"Hellrot","GELB,ROT":"Orange","GELB,WEISS":"Hellgelb","BLAU,ROT,WEISS":"Hell-Lila","BLAU,GELB,ROT":"Dunkelgrau","BLAU,GELB,WEISS":"Hellgrün","GELB,ROT,WEISS":"Hell-Orange","BLAU,GELB,ROT,WEISS":"Grau"},b={GELB:{name:"GELB",color:f.GELB,baseGems:["GELB"],gridPattern:[[a.TRIANGLE_BL,a.EMPTY],[a.BLOCK,a.TRIANGLE_BL]]},ROT:{name:"ROT",color:f.ROT,baseGems:["ROT"],gridPattern:[[a.TRIANGLE_BR,a.BLOCK,a.TRIANGLE_TL]]},BLAU:{name:"BLAU",color:f.BLAU,baseGems:["BLAU"],gridPattern:[[a.EMPTY,a.TRIANGLE_BR,a.TRIANGLE_BL,a.EMPTY],[a.TRIANGLE_BR,a.BLOCK,a.BLOCK,a.TRIANGLE_BL]]},WEISS_RAUTE:{name:"WEISS_RAUTE",color:f.WEISS,baseGems:["WEISS"],gridPattern:[[a.TRIANGLE_BR,a.TRIANGLE_BL],[a.TRIANGLE_TR,a.TRIANGLE_TL]]},WEISS_DREIECK:{name:"WEISS_DREIECK",color:f.WEISS,baseGems:["WEISS"],gridPattern:[[a.EMPTY,a.TRIANGLE_BR,a.TRIANGLE_BL,a.EMPTY],[a.TRIANGLE_BR,a.BLOCK,a.BLOCK,a.TRIANGLE_BL]]},TRANSPARENT:{name:"TRANSPARENT",color:f.TRANSPARENT,baseGems:[],gridPattern:[[a.TRIANGLE_BR,a.TRIANGLE_BL]]},SCHWARZ:{name:"SCHWARZ",color:f.SCHWARZ_GEM,baseGems:[],special:"absorbs",gridPattern:[[a.ABSORB,a.ABSORB]]}},B={[R.NORMAL]:["GELB","ROT","BLAU","WEISS_RAUTE","WEISS_DREIECK"],[R.MITTEL]:["GELB","ROT","BLAU","WEISS_RAUTE","WEISS_DREIECK","TRANSPARENT"],[R.SCHWER]:["GELB","ROT","BLAU","WEISS_RAUTE","WEISS_DREIECK","TRANSPARENT","SCHWARZ"]};var y=(l=>(l[l.MAIN_MENU=0]="MAIN_MENU",l[l.DIFFICULTY_SELECT=1]="DIFFICULTY_SELECT",l[l.PLAYING=2]="PLAYING",l[l.GAME_OVER=3]="GAME_OVER",l))(y||{});const h={status:0,difficulty:null,secretGems:[],playerGems:[],log:[],waveCount:0,debugMode:!1};var T=(l=>(l[l.UP=0]="UP",l[l.RIGHT=1]="RIGHT",l[l.DOWN=2]="DOWN",l[l.LEFT=3]="LEFT",l))(T||{});const N={[a.BLOCK]:{0:2,1:3,2:0,3:1},[a.TRIANGLE_TR]:{0:3,1:2,2:0,3:1},[a.TRIANGLE_BL]:{0:2,1:3,2:1,3:0},[a.TRIANGLE_TL]:{0:1,1:3,2:0,3:2},[a.TRIANGLE_BR]:{0:2,1:0,2:3,3:1}},O={[a.EMPTY]:a.EMPTY,[a.BLOCK]:a.BLOCK,[a.ABSORB]:a.ABSORB,[a.TRIANGLE_TL]:a.TRIANGLE_TR,[a.TRIANGLE_TR]:a.TRIANGLE_BR,[a.TRIANGLE_BR]:a.TRIANGLE_BL,[a.TRIANGLE_BL]:a.TRIANGLE_TL};function _(l,e){var t;return l===a.EMPTY?null:((t=N[l])==null?void 0:t[e])??null}function w(l){const e=l.length,t=l[0].length,r=Array.from({length:t},()=>Array(e).fill(a.EMPTY));for(let i=0;i<e;i++)for(let s=0;s<t;s++)r[s][e-1-i]=O[l[i][s]];return r}const W=100;function H(l){const e=parseInt(l.substring(1))-1;switch(l[0]){case"T":return{pos:{x:e,y:-1},dir:T.DOWN};case"B":return{pos:{x:e,y:L},dir:T.UP};case"L":return{pos:{x:-1,y:e},dir:T.RIGHT};case"R":return{pos:{x:E,y:e},dir:T.LEFT};default:return null}}function k(l){return l.y<0?`T${l.x+1}`:l.y>=L?`B${l.x+1}`:l.x<0?`L${l.y+1}`:l.x>=E?`R${l.y+1}`:"Error"}function D(l,e){switch(e){case T.UP:l.y--;break;case T.DOWN:l.y++;break;case T.LEFT:l.x--;break;case T.RIGHT:l.x++;break}}function U(l,e,t){const r=H(t);if(!r)return{exitId:"Error",colors:[],path:[],absorbed:!1};const i={...r.pos};let s=r.dir;const n=[],o=new Set,d=new Set;for(let g=0;g<W;g++){if(D(i,s),n.length===0&&n.push({x:r.pos.x+(r.dir===T.RIGHT?1:r.dir===T.LEFT?0:.5),y:r.pos.y+(r.dir===T.DOWN?1:r.dir===T.UP?0:.5)}),i.x<0||i.x>=E||i.y<0||i.y>=L)return n.push({x:i.x+(s===T.LEFT?1:s===T.RIGHT?0:.5),y:i.y+(s===T.UP?1:s===T.DOWN?0:.5)}),{exitId:k(i),colors:[...o],path:n,absorbed:!1};const c=l[i.y][i.x];if(c===a.EMPTY)continue;n.push({x:i.x+.5,y:i.y+.5});const u=`${i.y},${i.x}`,m=e.get(u);if(m&&!d.has(m.id)){d.add(m.id);const I=b[m.name];I.baseGems&&I.baseGems.forEach(G=>o.add(G))}if(c===a.ABSORB)return{exitId:"Absorbed",colors:[],path:n,absorbed:!0};const p=_(c,s);p!==null&&(s=p)}return{exitId:"Loop?",colors:[...o],path:n,absorbed:!1}}const C={[a.EMPTY]:[!1,!1,!1,!1],[a.BLOCK]:[!0,!0,!0,!0],[a.ABSORB]:[!0,!0,!0,!0],[a.TRIANGLE_TL]:[!0,!1,!1,!0],[a.TRIANGLE_TR]:[!0,!0,!1,!1],[a.TRIANGLE_BR]:[!1,!0,!0,!1],[a.TRIANGLE_BL]:[!1,!1,!0,!0]};class x{constructor(e){this.secretGrid=[],this.secretGemMap=new Map,this.ui=e,this.ui.bindGame(this),this.showMainMenu()}_initSecretGrid(){this.secretGrid=Array.from({length:L},()=>Array(E).fill(a.EMPTY)),this.secretGemMap.clear()}showMainMenu(){h.status=y.MAIN_MENU,this.ui.showScreen("main")}showDifficultySelect(){h.status=y.DIFFICULTY_SELECT,this.ui.showScreen("difficulty")}showEndScreen(e){h.status=y.GAME_OVER,this.ui.showEndScreen(e,h.waveCount,h.secretGems,h.playerGems)}start(e){if(h.difficulty=e,h.status=y.PLAYING,this._initSecretGrid(),h.secretGems=this._placeSecretGems(),h.secretGems.length===0){this.showDifficultySelect();return}h.playerGems=[],h.log=[],h.waveCount=0,h.debugMode=!1,this.ui.setupGameUI(),this.ui.showScreen("game"),this.ui.redrawAll()}giveUp(){this.showEndScreen(!1)}toggleDebugMode(){h.debugMode=!h.debugMode,this.ui.redrawAll()}sendWave(e){if(h.status!==y.PLAYING)return;h.waveCount++;const t=U(this.secretGrid,this.secretGemMap,e),r={waveId:e,result:t,path:t.path};h.log.push(r),this.ui.addLogEntry(r,e),this.ui.updateEmitterState(e,t),this.ui.showWavePath(t)}checkSolution(){const e=Array.from({length:L},()=>Array(E).fill(a.EMPTY)),t=new Map;h.playerGems.forEach(i=>this._paintGemOnGrid(i,e,t));let r=!0;for(let i=0;i<L;i++){for(let s=0;s<E;s++)if(e[i][s]!==this.secretGrid[i][s]){r=!1;break}if(!r)break}this.showEndScreen(r)}addPlayerGem(e,t,r){if(h.playerGems.some(g=>g.name===e))return;const s=b[e];if(!s)return;const n={id:`player_${Date.now()}`,name:e,x:t,y:r,rotation:0,gridPattern:s.gridPattern,isValid:!1},o=n.gridPattern.length,d=n.gridPattern[0].length;n.x=Math.max(0,Math.min(t,E-d)),n.y=Math.max(0,Math.min(r,L-o)),h.playerGems.push(n),this._revalidateAllPlayerGems(),this.updateSolutionButtonState(),this.ui.updateToolbar(),this.ui.redrawAll()}movePlayerGem(e,t,r){const i=h.playerGems.find(s=>s.id===e);if(i){const s=i.gridPattern.length,n=i.gridPattern[0].length;i.x=Math.max(0,Math.min(t,E-n)),i.y=Math.max(0,Math.min(r,L-s)),this._revalidateAllPlayerGems(),this.updateSolutionButtonState(),this.ui.redrawAll()}}removePlayerGem(e){const t=h.playerGems.findIndex(r=>r.id===e);t>-1&&(h.playerGems.splice(t,1),this._revalidateAllPlayerGems(),this.updateSolutionButtonState(),this.ui.updateToolbar(),this.ui.redrawAll())}rotatePlayerGem(e){const t=h.playerGems.find(r=>r.id===e);if(t){t.rotation=(t.rotation+90)%360,t.gridPattern=w(t.gridPattern);const r=t.gridPattern.length,i=t.gridPattern[0].length;t.x=Math.max(0,Math.min(t.x,E-i)),t.y=Math.max(0,Math.min(t.y,L-r)),this._revalidateAllPlayerGems(),this.updateSolutionButtonState(),this.ui.redrawAll()}}canPlaceGem(e){return this._isPlacementValid(e,h.playerGems)}_revalidateAllPlayerGems(){h.playerGems.forEach(e=>{e.isValid=this._isPlacementValid(e,h.playerGems)})}_doGemsCollide(e,t){const r=e.gridPattern[0].length,i=e.gridPattern.length,s=t.gridPattern[0].length,n=t.gridPattern.length;if(e.x+r<t.x||t.x+s<e.x||e.y+i<t.y||t.y+n<e.y)return!1;for(let o=0;o<i;o++)for(let d=0;d<r;d++){const g=e.gridPattern[o][d];if(g===a.EMPTY)continue;const c=e.x+d,u=e.y+o;for(let m=0;m<n;m++)for(let p=0;p<s;p++){const I=t.gridPattern[m][p];if(I===a.EMPTY)continue;const G=t.x+p,S=t.y+m;if(c===G&&u===S)return!0;if(Math.abs(c-G)+Math.abs(u-S)===1){const A=C[g],P=C[I];if(c<G){if(A[1]&&P[3])return!0}else if(c>G){if(A[3]&&P[1])return!0}else if(u<S){if(A[2]&&P[0])return!0}else if(u>S&&A[0]&&P[2])return!0}}}return!1}_isPlacementValid(e,t){const{gridPattern:r,x:i,y:s,id:n}=e,o=r.length,d=r[0].length;if(i<0||s<0||i+d>E||s+o>L)return!1;for(const g of t)if(!(n&&g.id===n)&&this._doGemsCollide(e,g))return!1;return!0}_paintGemOnGrid(e,t,r){const{gridPattern:i,x:s,y:n}=e;for(let o=0;o<i.length;o++)for(let d=0;d<i[o].length;d++){const g=i[o][d];g!==a.EMPTY&&t[n+o]&&t[n+o][s+d]!==void 0&&(t[n+o][s+d]=g,r==null||r.set(`${n+o},${s+d}`,e))}}updateSolutionButtonState(){var i;const e=((i=B[h.difficulty])==null?void 0:i.length)??0,t=h.playerGems.every(s=>s.isValid),r=h.playerGems.length===e;this.ui.checkSolutionBtn.disabled=!(t&&r)}_placeSecretGems(){const e=[],t=B[h.difficulty];let r=0;for(;e.length<t.length&&r<500;){r++,e.length=0;for(const i of t){const s=b[i];let n=!1,o=0;for(;!n&&o<200;){o++;let d=s.gridPattern;const g=Math.floor(Math.random()*4);for(let G=0;G<g;G++)d=w(d);const c=d.length,u=d[0].length;if(E<u||L<c)continue;const m=Math.floor(Math.random()*(E-u+1)),p=Math.floor(Math.random()*(L-c+1)),I={id:`secret_${i}_${e.length}`,name:i,x:m,y:p,rotation:g*90,gridPattern:d};this._isPlacementValid(I,e)&&(e.push(I),n=!0)}if(!n)break}}return e.length!==t.length?(console.error("Failed to place all secret gems!"),alert("Fehler bei der Level-Erstellung. Bitte versuchen Sie es erneut."),[]):(e.forEach(i=>this._paintGemOnGrid(i,this.secretGrid,this.secretGemMap)),console.log("Secret gems placed:",e),e)}}class ${constructor(){this.screens={},this.emitterContainers={},this.draggedItemInfo=null,this.lastValidDropTarget={x:-1,y:-1,isValid:!1},this.cellWidth=0,this.cellHeight=0,this.cacheDOMElements(),this.bindGlobalEvents(),this._populateIntroRules()}bindGame(e){this.game=e}cacheDOMElements(){this.screens.main=document.getElementById("screen-main"),this.screens.difficulty=document.getElementById("screen-difficulty"),this.screens.game=document.getElementById("screen-game"),this.screens.end=document.getElementById("screen-end"),this.btnStartGame=document.getElementById("btn-start-game"),this.introRulesEl=document.getElementById("intro-rules"),this.difficultyOptions=document.getElementById("difficulty-options"),this.btnBackToMain1=document.getElementById("btn-back-to-main-1"),this.boardWrapper=document.getElementById("game-board-wrapper"),this.board=document.getElementById("game-board"),this.emitterContainers.top=this.boardWrapper.querySelector(".emitters-top"),this.emitterContainers.bottom=this.boardWrapper.querySelector(".emitters-bottom"),this.emitterContainers.left=this.boardWrapper.querySelector(".emitters-left"),this.emitterContainers.right=this.boardWrapper.querySelector(".emitters-right"),this.gemCanvas=document.getElementById("gem-canvas"),this.gemCtx=this.gemCanvas.getContext("2d"),this.pathOverlay=document.getElementById("path-overlay"),this.pathCtx=this.pathOverlay.getContext("2d"),this.dragPreviewEl=document.getElementById("drag-preview"),this.dragPreviewCanvas=document.createElement("canvas"),this.dragPreviewEl.appendChild(this.dragPreviewCanvas),this.dragPreviewCtx=this.dragPreviewCanvas.getContext("2d"),this.gemToolbar=document.getElementById("gem-toolbar"),this.logList=document.getElementById("log-list"),this.actionsTabBtn=document.getElementById("actions-tab-btn"),this.logTabBtn=document.getElementById("log-tab-btn"),this.checkSolutionBtn=document.getElementById("check-solution-btn"),this.giveUpBtn=document.getElementById("give-up-btn"),this.endTitle=document.getElementById("end-title"),this.endStats=document.getElementById("end-stats"),this.endSolutionCanvas=document.getElementById("end-solution-canvas"),this.endSolutionCtx=this.endSolutionCanvas.getContext("2d"),this.btnNewLevel=document.getElementById("btn-new-level"),this.btnMenu=document.getElementById("btn-menu")}bindGlobalEvents(){this.btnStartGame.addEventListener("click",()=>this.game.showDifficultySelect()),this.btnNewLevel.addEventListener("click",()=>{h.difficulty&&this.game.start(h.difficulty)}),this.btnMenu.addEventListener("click",()=>this.game.showMainMenu()),this.btnBackToMain1.addEventListener("click",()=>this.game.showMainMenu()),this.actionsTabBtn.addEventListener("click",()=>this.switchTab("actions")),this.logTabBtn.addEventListener("click",()=>this.switchTab("log")),this.checkSolutionBtn.addEventListener("click",()=>this.game.checkSolution()),this.giveUpBtn.addEventListener("click",()=>this.game.giveUp()),document.addEventListener("keydown",e=>{if(e.key==="n"&&(h.status===y.PLAYING||h.status===y.GAME_OVER)){h.difficulty&&this.game.start(h.difficulty);return}h.status===y.PLAYING&&(e.key==="Escape"?this.game.showMainMenu():e.key==="d"&&this.game.toggleDebugMode())}),document.addEventListener("dragstart",e=>this.handleDragStart(e)),document.addEventListener("dragover",e=>this.handleDragOver(e)),document.addEventListener("drop",e=>this.handleDrop(e)),document.addEventListener("dragend",()=>this.handleDragEnd()),this.board.addEventListener("click",e=>this.handleBoardClick(e)),this.boardWrapper.addEventListener("mouseover",e=>this.handleEmitterHover(e)),this.boardWrapper.addEventListener("mouseout",e=>this.handleEmitterMouseOut(e)),this.logList.addEventListener("mousedown",e=>this.handleLogPress(e)),this.logList.addEventListener("mouseup",()=>this.clearPath()),this.logList.addEventListener("mouseleave",()=>this.clearPath()),this.logList.addEventListener("touchstart",e=>this.handleLogPress(e),{passive:!0}),this.logList.addEventListener("touchend",()=>this.clearPath())}setupGameUI(){this.populateEmitters(),this.updateToolbar(),this.logList.innerHTML="",this.clearPath(),this.game.updateSolutionButtonState(),this.switchTab("actions"),new ResizeObserver(()=>this.onBoardResize()).observe(this.board)}showScreen(e){e==="difficulty"&&this.populateDifficultyOptions(),Object.values(this.screens).forEach(t=>t.classList.add("hidden")),this.screens[e].classList.remove("hidden")}populateDifficultyOptions(){this.difficultyOptions.innerHTML="";const e={[R.NORMAL]:"Die Grundlagen. Lerne die farbigen und weissen Steine kennen.",[R.MITTEL]:"Eine neue Herausforderung. Ein transparenter Prisma-Stein lenkt das Licht ab, ohne es zu färben.",[R.SCHWER]:"Expertenmodus. Neben dem transparenten kommt ein schwarzer, Licht absorbierender Stein in Spiel."};Object.values(R).forEach(t=>{const r=document.createElement("button");r.innerHTML=`${t}<div class="difficulty-desc">${e[t]}</div>`,r.onclick=()=>this.game.start(t),this.difficultyOptions.appendChild(r)})}populateEmitters(){Object.values(this.emitterContainers).forEach(e=>e.innerHTML="");for(let e=0;e<E;e++)this.emitterContainers.top.appendChild(this.createEmitter(`T${e+1}`));for(let e=0;e<E;e++)this.emitterContainers.bottom.appendChild(this.createEmitter(`B${e+1}`));for(let e=0;e<L;e++)this.emitterContainers.left.appendChild(this.createEmitter(`L${e+1}`));for(let e=0;e<L;e++)this.emitterContainers.right.appendChild(this.createEmitter(`R${e+1}`))}onBoardResize(){const e=this.board.getBoundingClientRect();if(e.width===0||e.height===0)return;const t=window.devicePixelRatio||1;this.cellWidth=e.width/E,this.cellHeight=e.height/L,[this.pathOverlay,this.gemCanvas].forEach(r=>{r.width=e.width*t,r.height=e.height*t,r.style.width=`${e.width}px`,r.style.height=`${e.height}px`,r.getContext("2d").scale(t,t)}),this.redrawAll()}createEmitter(e){const t=document.createElement("button");return t.className="emitter",t.dataset.id=e,t.textContent=e,t.addEventListener("click",()=>this.game.sendWave(e)),t}_getGemTooltip(e){var r;const t=b[e];if(!t)return"";switch(e){case"TRANSPARENT":return"Reflektiert nur den Lichtstrahl, aber gibt keine weitere Farbe dazu, der Lichtstrahl behält seine aktuelle Farbe";case"SCHWARZ":return"Absorbiert das Licht, wenn er vom Lichtstrahl getroffen wird. Und es kommt kein Licht zurück.";default:if(t.baseGems&&t.baseGems.length>0){const i=t.baseGems[0],s=(r=v[i])==null?void 0:r.toLowerCase();if(s)return`Fügt dem Lichtstrahl '${s}' hinzu, wenn er getroffen wird.`}return`Edelstein ${e}`}}updateToolbar(){if(this.gemToolbar.innerHTML="",!h.difficulty)return;const e=new Set(h.playerGems.map(t=>t.name));B[h.difficulty].forEach(t=>{const r=b[t],i=document.createElement("div");i.className="toolbar-gem",e.has(t)?(i.classList.add("placed"),i.draggable=!1):i.draggable=!0,i.dataset.gemName=t,i.title=this._getGemTooltip(t);const s=document.createElement("canvas");s.className="toolbar-gem-canvas",i.appendChild(s),this.gemToolbar.appendChild(i),setTimeout(()=>this.drawToolbarGem(s,r),0)})}drawToolbarGem(e,t){const r=e.getContext("2d");if(!r)return;const i=window.devicePixelRatio||1;e.width=e.clientWidth*i,e.height=e.clientHeight*i,r.scale(i,i);const s=t.gridPattern,n=s.length,o=s[0].length,d=Math.max(o,n),g=e.clientWidth/d,c=e.clientHeight/d,u=(e.clientWidth-o*g)/2,m=(e.clientHeight-n*c)/2;for(let p=0;p<n;p++)for(let I=0;I<o;I++){const G=s[p][I];G!==a.EMPTY&&this.drawCellShape(r,I*g+u,p*c+m,g,c,G,t.color)}}redrawAll(){this.gemCtx.clearRect(0,0,this.gemCanvas.width,this.gemCanvas.height),this._drawGrid(this.gemCtx),this.board.querySelectorAll(".gem-overlay").forEach(e=>e.remove()),h.status===y.PLAYING&&(h.debugMode?this.drawDebugSolution(this.gemCtx):this.clearPath(),this.drawPlayerGems(this.gemCtx),h.playerGems.forEach(e=>this.addGemOverlay(e)))}drawPlayerGems(e){for(const t of h.playerGems){const{gridPattern:r,x:i,y:s,name:n}=t,o=b[n].color;for(let d=0;d<r.length;d++)for(let g=0;g<r[d].length;g++){const c=r[d][g];c!==a.EMPTY&&this.drawCellShape(e,(i+g)*this.cellWidth,(s+d)*this.cellHeight,this.cellWidth,this.cellHeight,c,o)}}}_drawGrid(e,t,r){const i=t??e.canvas.clientWidth,s=r??e.canvas.clientHeight,n=i/E,o=s/L;e.strokeStyle="rgba(74, 98, 122, 0.5)",e.lineWidth=1,e.beginPath();for(let d=1;d<E;d++)e.moveTo(d*n,0),e.lineTo(d*n,s);for(let d=1;d<L;d++)e.moveTo(0,d*o),e.lineTo(i,d*o);e.stroke()}drawDebugSolution(e){if(!this.game.secretGrid||h.secretGems.length===0)return;const t=this.game.secretGrid;e.save(),e.globalAlpha=.2;for(let r=0;r<L;r++)for(let i=0;i<E;i++){const s=t[r][i];if(s!==a.EMPTY){const n=h.secretGems.find(o=>i>=o.x&&i<o.x+o.gridPattern[0].length&&r>=o.y&&r<o.y+o.gridPattern.length&&o.gridPattern[r-o.y][i-o.x]===s);n&&this.drawCellShape(e,i*this.cellWidth,r*this.cellHeight,this.cellWidth,this.cellHeight,s,b[n.name].color)}}e.restore()}drawCellShape(e,t,r,i,s,n,o,d=!1){switch(e.save(),o===f.TRANSPARENT?(e.fillStyle="transparent",e.strokeStyle="#a4d4e4",e.lineWidth=2):(e.fillStyle=o,e.strokeStyle="rgba(0,0,0,0.4)",e.lineWidth=1),d&&(e.strokeStyle=f.INVALID_GEM,e.lineWidth=2,e.setLineDash([4,4])),e.beginPath(),n){case a.BLOCK:case a.ABSORB:e.rect(t,r,i,s);break;case a.TRIANGLE_TL:e.moveTo(t,r),e.lineTo(t+i,r),e.lineTo(t,r+s),e.closePath();break;case a.TRIANGLE_TR:e.moveTo(t,r),e.lineTo(t+i,r),e.lineTo(t+i,r+s),e.closePath();break;case a.TRIANGLE_BR:e.moveTo(t+i,r),e.lineTo(t+i,r+s),e.lineTo(t,r+s),e.closePath();break;case a.TRIANGLE_BL:e.moveTo(t,r),e.lineTo(t,r+s),e.lineTo(t+i,r+s),e.closePath();break}e.fill(),e.stroke(),e.restore()}addGemOverlay(e){if(!this.board.clientWidth)return;const t=document.createElement("div");t.id=e.id,t.className="gem-overlay",t.draggable=!0;const r=e.gridPattern.length,i=e.gridPattern[0].length;t.style.left=`${e.x*this.cellWidth}px`,t.style.top=`${e.y*this.cellHeight}px`,t.style.width=`${i*this.cellWidth}px`,t.style.height=`${r*this.cellHeight}px`,e.isValid||t.classList.add("invalid-pos"),this.board.appendChild(t)}getPathColor(e){if(e.absorbed)return f.ABSORBIERT;if(e.colors.length===0)return"rgba(236, 240, 241, 0.7)";const t=[...e.colors].sort().join(",");return M[t]||"#ccc"}showWavePath(e){if(!h.debugMode)return;const t=this.getPathColor(e);this.drawPath(e.path,t)}drawPath(e,t){if(this.clearPath(),!(e.length<2)){this.pathCtx.strokeStyle=t,this.pathCtx.lineWidth=3,this.pathCtx.lineCap="round",this.pathCtx.lineJoin="round",this.pathCtx.shadowColor="rgba(0,0,0,0.5)",this.pathCtx.shadowBlur=5,this.pathCtx.beginPath(),this.pathCtx.moveTo(e[0].x*this.cellWidth,e[0].y*this.cellHeight);for(let r=1;r<e.length;r++)this.pathCtx.lineTo(e[r].x*this.cellWidth,e[r].y*this.cellHeight);this.pathCtx.stroke()}}clearPath(){this.pathCtx.clearRect(0,0,this.pathOverlay.width,this.pathOverlay.height)}switchTab(e){document.querySelectorAll(".tab-btn, .tab-panel").forEach(t=>t.classList.remove("active")),document.getElementById(`${e}-tab-btn`).classList.add("active"),document.getElementById(`${e}-panel`).classList.add("active")}updateEmitterState(e,t){const r=n=>{if(!n||n.length<7)return"#ffffff";const o=parseInt(n.slice(1,3),16),d=parseInt(n.slice(3,5),16),g=parseInt(n.slice(5,7),16);return o*.299+d*.587+g*.114>186?"#000000":"#ffffff"},i=this.getPathColor(t),s=this.boardWrapper.querySelector(`.emitter[data-id="${e}"]`);if(s&&(s.classList.add("used"),s.style.backgroundColor=i,s.style.color=r(i)),t.exitId){const n=this.boardWrapper.querySelector(`.emitter[data-id="${t.exitId}"]`);n&&(n.style.backgroundColor=i,n.style.color=r(i))}}addLogEntry(e,t){const r=document.createElement("li");r.dataset.waveId=t;const{result:i}=e,s=`${t} ➔ ${i.exitId}`,n=this.getPathColor(i),o=this._getPathColorName(i);r.innerHTML=`<span>${s}</span>
                        <div class="log-entry-result">
                            <span class="log-color-name">${o}</span>
                            <div class="log-color-box" style="background-color: ${n};"></div>
                        </div>`,this.logList.prepend(r),this.switchTab("log")}showEndScreen(e,t,r,i){this.endTitle.textContent=e?"Gewonnen!":"Verloren!",this.endStats.textContent=e?`Du hast die Mine in ${t} Abfragen gelöst!`:`Du hast ${t} Abfragen gebraucht.`,this.showScreen("end"),requestAnimationFrame(()=>{const s=e?[]:i;this.drawEndScreenSolution(this.endSolutionCtx,r,s)})}drawEndScreenSolution(e,t,r){const i=e.canvas,s=window.devicePixelRatio||1,n=i.getBoundingClientRect();if(n.width===0||n.height===0)return;i.width=n.width*s,i.height=n.height*s,e.scale(s,s),e.clearRect(0,0,n.width,n.height),this._drawGrid(e,n.width,n.height);const o=n.width/E,d=n.height/L;this.drawGemSet(e,t,{cellW:o,cellH:d,opacity:1}),r.length>0&&this.drawGemSet(e,r,{cellW:o,cellH:d,opacity:.55,highlightInvalid:!0})}drawGemSet(e,t,r){e.save(),e.globalAlpha=r.opacity;for(const i of t){const{gridPattern:s,x:n,y:o,name:d}=i,g=b[d].color,c=!!r.highlightInvalid&&!i.isValid;for(let u=0;u<s.length;u++)for(let m=0;m<s[u].length;m++){const p=s[u][m];p!==a.EMPTY&&this.drawCellShape(e,(n+m)*r.cellW,(o+u)*r.cellH,r.cellW,r.cellH,p,g,c)}}e.restore()}handleDragStart(e){const t=e.target;if(!e.dataTransfer||!t.draggable)return;const r=t.closest(".toolbar-gem"),i=t.closest(".gem-overlay");let s;if(r){const c=r.dataset.gemName;s={id:c,name:c,from:"toolbar",gridPattern:b[c].gridPattern,element:r}}else if(i){const c=h.playerGems.find(u=>u.id===i.id);if(!c)return;s={id:c.id,name:c.name,from:"board",gridPattern:c.gridPattern,element:i}}else return;e.dataTransfer.effectAllowed="move",e.dataTransfer.setData("text/plain",s.id),this.draggedItemInfo=s,setTimeout(()=>{s.element.classList.add("dragging")},0),e.dataTransfer.setDragImage(new Image,0,0);const n=s.gridPattern[0].length,o=s.gridPattern.length;this.dragPreviewEl.style.width=`${n*this.cellWidth}px`,this.dragPreviewEl.style.height=`${o*this.cellHeight}px`,this.dragPreviewEl.style.display="block";const d=window.devicePixelRatio||1;this.dragPreviewCanvas.width=n*this.cellWidth*d,this.dragPreviewCanvas.height=o*this.cellHeight*d,this.dragPreviewCtx.scale(d,d);const g=b[s.name];for(let c=0;c<o;c++)for(let u=0;u<n;u++){const m=s.gridPattern[c][u];m!==a.EMPTY&&this.drawCellShape(this.dragPreviewCtx,u*this.cellWidth,c*this.cellHeight,this.cellWidth,this.cellHeight,m,g.color)}}handleDragOver(e){if(!this.draggedItemInfo)return;e.preventDefault();const t=this.board.getBoundingClientRect(),r=e.clientX-t.left,i=e.clientY-t.top,s=this.draggedItemInfo.gridPattern[0].length,n=this.draggedItemInfo.gridPattern.length,o=Math.round(r/this.cellWidth-s/2),d=Math.round(i/this.cellHeight-n/2),g=this.board.offsetLeft+o*this.cellWidth,c=this.board.offsetTop+d*this.cellHeight;this.dragPreviewEl.style.transform=`translate(${g}px, ${c}px)`;const u={...this.draggedItemInfo,x:o,y:d},m=this.game.canPlaceGem(u);this.lastValidDropTarget={x:o,y:d,isValid:m},this.dragPreviewEl.classList.toggle("valid-pos",m),this.dragPreviewEl.classList.toggle("invalid-pos",!m)}handleDrop(e){if(!this.draggedItemInfo)return;e.preventDefault();const t=this.board.getBoundingClientRect();if(e.clientX<t.left||e.clientX>t.right||e.clientY<t.top||e.clientY>t.bottom)this.draggedItemInfo.from==="board"&&this.game.removePlayerGem(this.draggedItemInfo.id);else{const{x:i,y:s}=this.lastValidDropTarget;this.draggedItemInfo.from==="toolbar"?this.game.addPlayerGem(this.draggedItemInfo.name,i,s):this.game.movePlayerGem(this.draggedItemInfo.id,i,s)}this.handleDragEnd()}handleDragEnd(){this.draggedItemInfo&&(this.dragPreviewEl.style.display="none",this.dragPreviewEl.classList.remove("valid-pos","invalid-pos"),this.draggedItemInfo=null,this.redrawAll())}handleBoardClick(e){const t=e.target;if(!(t instanceof Element)||this.draggedItemInfo)return;const r=t.closest(".gem-overlay");r&&this.game.rotatePlayerGem(r.id)}_getPathColorName(e){if(e.absorbed)return"Absorbiert";if(e.colors.length===0)return"Keine Farbe";const t=[...e.colors].sort().join(",");return v[t]||"Unbekannte Mischung"}handleEmitterHover(e){const t=e.target;if(!t.classList.contains("emitter"))return;const r=t.dataset.id;if(!r)return;const i=h.log.find(c=>c.waveId===r||c.result.exitId===r);if(!i)return;const s=this._getPathColorName(i.result),n=i.waveId,o=i.result.exitId,d=this.boardWrapper.querySelector(`.emitter[data-id="${n}"]`),g=this.boardWrapper.querySelector(`.emitter[data-id="${o}"]`);if(d&&g){const c="highlight-pair";d.classList.add(c),g.classList.add(c),d.title=s,g.title=s}}handleEmitterMouseOut(e){e.target.classList.contains("emitter")&&this.boardWrapper.querySelectorAll(".emitter").forEach(r=>{r.classList.remove("highlight-pair"),r.title=""})}handleLogPress(e){const t=e.target;if(!(t instanceof Element))return;const r=t.closest("li");if(!r)return;const i=r.dataset.waveId,s=h.log.find(n=>n.waveId===i);if(s){const n=this.getPathColor(s.result);this.drawPath(s.path,n)}}_populateIntroRules(){this.introRulesEl.innerHTML=`
            <h3>Spielanleitung</h3>
            <p><strong>Ziel:</strong> Finde die Position und Ausrichtung der versteckten Edelsteine.</p>
            <ul>
                <li>Sende Lichtwellen von den Rändern in das Spielfeld.</li>
                <li>Die austretende Farbe und Position verraten, welche Steine getroffen wurden.</li>
                <li>Ziehe Edelsteine aus der Werkzeugleiste auf das Feld. Du kannst sie verschieben und drehen.</li>
                <li>Ein Klick auf einen platzierten Stein dreht ihn um 90°.</li>
                <li>Steine dürfen sich nicht überlappen oder Kante an Kante liegen.</li>
                <li>Drücke 'n' für ein neues Level mit der aktuellen Schwierigkeit.</li>
            </ul>
            <p><strong>Farbmischung:</strong></p>
            <ul>
                <li>Rot + Blau = Lila</li>
                <li>Blau + Gelb = Grün</li>
                <li>Rot + Gelb = Orange</li>
                <li>Jede Farbe + Weiss = Hellere Variante</li>
                <li>Alle 3 Grundfarben = Dunkelgrau</li>
            </ul>
        `}}document.addEventListener("DOMContentLoaded",()=>{const l=new $,e=new x(l);window.game=e});
