(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const r of n.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&i(r)}).observe(document,{childList:!0,subtree:!0});function t(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(s){if(s.ep)return;s.ep=!0;const n=t(s);fetch(s.href,n)}})();const L=8,S=10;var l=(h=>(h[h.EMPTY=0]="EMPTY",h[h.BLOCK=1]="BLOCK",h[h.TRIANGLE_TL=2]="TRIANGLE_TL",h[h.TRIANGLE_TR=3]="TRIANGLE_TR",h[h.TRIANGLE_BR=4]="TRIANGLE_BR",h[h.TRIANGLE_BL=5]="TRIANGLE_BL",h[h.ABSORB=6]="ABSORB",h))(l||{});const T={TRAINING:"TRAINING",NORMAL:"NORMAL",MEDIUM:"MEDIUM",HARD:"HARD",CUSTOM:"CUSTOM"},p={GELB:"#f1c40f",ROT:"#e74c3c",BLAU:"#3498db",WEISS:"#ecf0f1",TRANSPARENT:"#95a5a6",LILA:"#9b59b6",HIMMELBLAU:"#5dade2",GRUEN:"#2ecc71",PINK:"#ff8a80",ORANGE:"#e67e22",ZITRONE:"#ffff8d",HELLLILA:"#ba68c8",SCHWARZ_GEM:"#1d1d1d",SCHWARZ_MIX:"#34495e",HELLGRUEN:"#81c784",HELLORANGE:"#ffb74d",GRAU:"#9e9e9e",ABSORBIERT:"#17202a",INVALID_GEM:"#e74c3c"},B={ROT:{nameKey:"colors.red",color:p.ROT,baseGems:["ROT"]},GELB:{nameKey:"colors.yellow",color:p.GELB,baseGems:["GELB"]},BLAU:{nameKey:"colors.blue",color:p.BLAU,baseGems:["BLAU"]},WEISS:{nameKey:"colors.white",color:p.WEISS,baseGems:["WEISS"]},TRANSPARENT:{nameKey:"colors.transparent",color:p.TRANSPARENT,baseGems:[]},SCHWARZ:{nameKey:"colors.black",color:p.SCHWARZ_GEM,baseGems:[],special:"absorbs"}},z={BLAU:p.BLAU,GELB:p.GELB,ROT:p.ROT,WEISS:p.WEISS,"BLAU,ROT":p.LILA,"BLAU,WEISS":p.HIMMELBLAU,"BLAU,GELB":p.GRUEN,"ROT,WEISS":p.PINK,"GELB,ROT":p.ORANGE,"GELB,WEISS":p.ZITRONE,"BLAU,ROT,WEISS":p.HELLLILA,"BLAU,GELB,ROT":p.SCHWARZ_MIX,"BLAU,GELB,WEISS":p.HELLGRUEN,"GELB,ROT,WEISS":p.HELLORANGE,"BLAU,GELB,ROT,WEISS":p.GRAU},Y={BLAU:"colors.blue",GELB:"colors.yellow",ROT:"colors.red",WEISS:"colors.white",TRANSPARENT:"colors.transparent",SCHWARZ:"colors.black","BLAU,ROT":"colors.purple","BLAU,WEISS":"colors.skyBlue","BLAU,GELB":"colors.green","ROT,WEISS":"colors.lightRed","GELB,ROT":"colors.orange","GELB,WEISS":"colors.lightYellow","BLAU,ROT,WEISS":"colors.lightPurple","BLAU,GELB,ROT":"colors.darkGray","BLAU,GELB,WEISS":"colors.lightGreen","GELB,ROT,WEISS":"colors.lightOrange","BLAU,GELB,ROT,WEISS":"colors.gray"},A={GELB:{name:"GELB",color:p.GELB,baseGems:["GELB"],gridPattern:[[l.TRIANGLE_BL,l.EMPTY],[l.BLOCK,l.TRIANGLE_BL]]},ROT:{name:"ROT",color:p.ROT,baseGems:["ROT"],gridPattern:[[l.TRIANGLE_BR,l.BLOCK,l.TRIANGLE_TL]]},BLAU:{name:"BLAU",color:p.BLAU,baseGems:["BLAU"],gridPattern:[[l.EMPTY,l.TRIANGLE_BR,l.TRIANGLE_BL,l.EMPTY],[l.TRIANGLE_BR,l.BLOCK,l.BLOCK,l.TRIANGLE_BL]]},WEISS_RAUTE:{name:"WEISS_RAUTE",color:p.WEISS,baseGems:["WEISS"],gridPattern:[[l.TRIANGLE_BR,l.TRIANGLE_BL],[l.TRIANGLE_TR,l.TRIANGLE_TL]]},WEISS_DREIECK:{name:"WEISS_DREIECK",color:p.WEISS,baseGems:["WEISS"],gridPattern:[[l.EMPTY,l.TRIANGLE_BR,l.TRIANGLE_BL,l.EMPTY],[l.TRIANGLE_BR,l.BLOCK,l.BLOCK,l.TRIANGLE_BL]]},TRANSPARENT:{name:"TRANSPARENT",color:p.TRANSPARENT,baseGems:[],gridPattern:[[l.TRIANGLE_BR,l.TRIANGLE_BL]]},SCHWARZ:{name:"SCHWARZ",color:p.SCHWARZ_GEM,baseGems:[],special:"absorbs",gridPattern:[[l.ABSORB,l.ABSORB]]}},H={SHAPE_RTRIANGLE:{nameKey:"shapes.rightTriangle",gridPattern:A.GELB.gridPattern},SHAPE_PARALLEL:{nameKey:"shapes.parallelogram",gridPattern:A.ROT.gridPattern},SHAPE_BIG_TRIANGLE:{nameKey:"shapes.bigTriangle",gridPattern:A.BLAU.gridPattern},SHAPE_DIAMOND:{nameKey:"shapes.diamond",gridPattern:A.WEISS_RAUTE.gridPattern},SHAPE_SMALL_TRIANGLE:{nameKey:"shapes.smallTriangle",gridPattern:A.TRANSPARENT.gridPattern},SHAPE_ABSORBER:{nameKey:"shapes.absorber",gridPattern:A.SCHWARZ.gridPattern},SHAPE_L:{nameKey:"shapes.lShape",gridPattern:[[l.TRIANGLE_BR,l.TRIANGLE_BL],[l.BLOCK,l.TRIANGLE_TL]]},SHAPE_T:{nameKey:"shapes.tShape",gridPattern:[[l.TRIANGLE_BR,l.BLOCK,l.TRIANGLE_BL],[l.TRIANGLE_TR,l.BLOCK,l.TRIANGLE_TL]]},SHAPE_SQUARE:{nameKey:"shapes.square",gridPattern:[[l.TRIANGLE_BR,l.BLOCK],[l.BLOCK,l.TRIANGLE_TL]]},SHAPE_BAR:{nameKey:"shapes.bar",gridPattern:[[l.TRIANGLE_BL],[l.BLOCK],[l.TRIANGLE_TL]]},SHAPE_SMALL:{nameKey:"shapes.small",gridPattern:[[l.TRIANGLE_TR,l.TRIANGLE_BL]]},SHAPE_CUSTOM_DESIGN:{nameKey:"shapes.custom",gridPattern:[[l.EMPTY,l.BLOCK,l.EMPTY],[l.BLOCK,l.BLOCK,l.BLOCK],[l.EMPTY,l.BLOCK,l.EMPTY]]}},x={[T.TRAINING]:["GELB","ROT","BLAU","WEISS_RAUTE","WEISS_DREIECK"],[T.NORMAL]:["GELB","ROT","BLAU","WEISS_RAUTE","WEISS_DREIECK"],[T.MEDIUM]:["GELB","ROT","BLAU","WEISS_RAUTE","WEISS_DREIECK","TRANSPARENT"],[T.HARD]:["GELB","ROT","BLAU","WEISS_RAUTE","WEISS_DREIECK","TRANSPARENT","SCHWARZ"]},$={[T.TRAINING]:[{limit:8,textKey:"ratings.training.1"},{limit:10,textKey:"ratings.training.2"},{limit:20,textKey:"ratings.training.3"},{limit:1/0,textKey:"ratings.training.4"}],[T.NORMAL]:[{limit:10,textKey:"ratings.normal.1"},{limit:13,textKey:"ratings.normal.2"},{limit:18,textKey:"ratings.normal.3"},{limit:23,textKey:"ratings.normal.4"},{limit:1/0,textKey:"ratings.normal.5"}],[T.MEDIUM]:[{limit:12,textKey:"ratings.medium.1"},{limit:15,textKey:"ratings.medium.2"},{limit:20,textKey:"ratings.medium.3"},{limit:25,textKey:"ratings.medium.4"},{limit:1/0,textKey:"ratings.medium.5"}],[T.HARD]:[{limit:15,textKey:"ratings.hard.1"},{limit:18,textKey:"ratings.hard.2"},{limit:21,textKey:"ratings.hard.3"},{limit:25,textKey:"ratings.hard.4"},{limit:1/0,textKey:"ratings.hard.5"}],[T.CUSTOM]:[{limit:15,textKey:"ratings.hard.1"},{limit:18,textKey:"ratings.hard.2"},{limit:21,textKey:"ratings.hard.3"},{limit:25,textKey:"ratings.hard.4"},{limit:1/0,textKey:"ratings.hard.5"}]};var v=(h=>(h[h.MAIN_MENU=0]="MAIN_MENU",h[h.DIFFICULTY_SELECT=1]="DIFFICULTY_SELECT",h[h.CUSTOM_CREATOR=2]="CUSTOM_CREATOR",h[h.PLAYING=3]="PLAYING",h[h.GAME_OVER=4]="GAME_OVER",h))(v||{}),E=(h=>(h.WAVE="wave",h.QUERY="query",h))(E||{});const a={status:0,difficulty:null,interactionMode:"wave",secretGems:[],playerGems:[],log:[],waveCount:0,debugMode:!1,showPlayerPathPreview:!1,selectedLogEntryId:null,previewSourceEmitterId:null,activePlayerPath:null,activePlayerResult:null,permanentQueryResults:[],customGemSet:[],customGemDefinitions:{}};var b=(h=>(h[h.UP=0]="UP",h[h.RIGHT=1]="RIGHT",h[h.DOWN=2]="DOWN",h[h.LEFT=3]="LEFT",h))(b||{});const X={[l.BLOCK]:{0:2,1:3,2:0,3:1},[l.TRIANGLE_TR]:{0:3,1:2,2:0,3:1},[l.TRIANGLE_BL]:{0:2,1:3,2:1,3:0},[l.TRIANGLE_TL]:{0:1,1:3,2:0,3:2},[l.TRIANGLE_BR]:{0:2,1:0,2:3,3:1}},Z={[l.EMPTY]:l.EMPTY,[l.BLOCK]:l.BLOCK,[l.ABSORB]:l.ABSORB,[l.TRIANGLE_TL]:l.TRIANGLE_TR,[l.TRIANGLE_TR]:l.TRIANGLE_BR,[l.TRIANGLE_BR]:l.TRIANGLE_BL,[l.TRIANGLE_BL]:l.TRIANGLE_TL},j={[l.EMPTY]:l.EMPTY,[l.BLOCK]:l.BLOCK,[l.ABSORB]:l.ABSORB,[l.TRIANGLE_TL]:l.TRIANGLE_TR,[l.TRIANGLE_TR]:l.TRIANGLE_TL,[l.TRIANGLE_BR]:l.TRIANGLE_BL,[l.TRIANGLE_BL]:l.TRIANGLE_BR};function J(h,e){var t;return h===l.EMPTY?null:((t=X[h])==null?void 0:t[e])??null}function W(h){const e=h.length,t=h[0].length,i=Array.from({length:t},()=>Array(e).fill(l.EMPTY));for(let s=0;s<e;s++)for(let n=0;n<t;n++)i[n][e-1-s]=Z[h[s][n]];return i}function U(h){return h.map(e=>e.map(t=>j[t]).reverse())}function F(h){const e=U(h),t=JSON.stringify(e);let i=h;for(let s=0;s<4;s++){if(JSON.stringify(i)===t)return!1;i=W(i)}return!0}const ee=100;function te(h){const e=parseInt(h.substring(1))-1;switch(h[0]){case"T":return{pos:{x:e,y:-1},dir:b.DOWN};case"B":return{pos:{x:e,y:S},dir:b.UP};case"L":return{pos:{x:-1,y:e},dir:b.RIGHT};case"R":return{pos:{x:L,y:e},dir:b.LEFT};default:return null}}function ie(h){return h.y<0?`T${h.x+1}`:h.y>=S?`B${h.x+1}`:h.x<0?`L${h.y+1}`:h.x>=L?`R${h.y+1}`:"Error"}function se(h,e){switch(e){case b.UP:h.y--;break;case b.DOWN:h.y++;break;case b.LEFT:h.x--;break;case b.RIGHT:h.x++;break}}function M(h,e,t,i){const s=te(t);if(!s)return{exitId:"Error",colors:[],path:[],absorbed:!1};const n={...s.pos};let r=s.dir;const o=[],d=new Set,g=new Set;for(let c=0;c<ee;c++){if(se(n,r),o.length===0&&o.push({x:s.pos.x+(s.dir===b.RIGHT?1:s.dir===b.LEFT?0:.5),y:s.pos.y+(s.dir===b.DOWN?1:s.dir===b.UP?0:.5)}),n.x<0||n.x>=L||n.y<0||n.y>=S)return o.push({x:n.x+(r===b.LEFT?1:r===b.RIGHT?0:.5),y:n.y+(r===b.UP?1:r===b.DOWN?0:.5)}),{exitId:ie(n),colors:[...d],path:o,absorbed:!1};const f=h[n.y][n.x];if(f===l.EMPTY)continue;o.push({x:n.x+.5,y:n.y+.5});const u=`${n.y},${n.x}`,y=e.get(u);if(y&&!g.has(y.id)){g.add(y.id);const w=i.getGemDefinition(y.name);w&&w.baseGems&&w.baseGems.forEach(G=>d.add(G))}if(f===l.ABSORB)return{exitId:"Absorbed",colors:[],path:o,absorbed:!0};const I=J(f,r);I!==null&&(r=I)}return{exitId:"Loop?",colors:[...d],path:o,absorbed:!1}}const V={[l.EMPTY]:[!1,!1,!1,!1],[l.BLOCK]:[!0,!0,!0,!0],[l.ABSORB]:[!0,!0,!0,!0],[l.TRIANGLE_TL]:[!0,!1,!1,!0],[l.TRIANGLE_TR]:[!0,!0,!1,!1],[l.TRIANGLE_BR]:[!1,!0,!0,!1],[l.TRIANGLE_BL]:[!1,!1,!0,!0]};class ne{constructor(e){this.secretGrid=[],this.secretGemMap=new Map,this.ui=e,this.ui.bindGame(this),this.showMainMenu()}_initSecretGrid(){this.secretGrid=Array.from({length:S},()=>Array(L).fill(l.EMPTY)),this.secretGemMap.clear()}showMainMenu(){a.status=v.MAIN_MENU,this.ui.showScreen("main")}showDifficultySelect(){a.status=v.DIFFICULTY_SELECT,this.ui.showScreen("difficulty")}showCustomCreator(){a.status=v.CUSTOM_CREATOR,this.ui.showScreen("custom-creator")}showEndScreen(e){a.status=v.GAME_OVER,this.ui.showEndScreen(e,a.waveCount,a.secretGems,a.playerGems)}start(e){if(a.difficulty=e,a.status=v.PLAYING,a.interactionMode=E.WAVE,this._initSecretGrid(),a.secretGems=this._placeSecretGems(),a.secretGems.length===0){this.showDifficultySelect();return}a.playerGems=[],a.log=[],a.waveCount=0,a.debugMode=!1,a.showPlayerPathPreview=!1,a.selectedLogEntryId=null,a.previewSourceEmitterId=null,a.activePlayerPath=null,a.activePlayerResult=null,a.permanentQueryResults=[],this.ui.setupGameUI(),this.ui.showScreen("game"),this.ui.redrawAll()}giveUp(){this.showEndScreen(!1)}toggleDebugMode(){a.debugMode=!a.debugMode,this.ui.redrawAll()}togglePlayerPathPreview(){a.showPlayerPathPreview=!a.showPlayerPathPreview,this.ui.updatePreviewToggleState(a.showPlayerPathPreview),this.ui.redrawAll()}getGemDefinition(e){const i=a.difficulty===T.CUSTOM?a.customGemDefinitions[e]:A[e];return i||console.error(`Could not find definition for gem: ${e}`),i}sendWave(e){if(a.status!==v.PLAYING||a.interactionMode!==E.WAVE)return;a.waveCount++;const t=M(this.secretGrid,this.secretGemMap,e,this),i=Array.from({length:S},()=>Array(L).fill(l.EMPTY)),s=new Map;a.playerGems.forEach(o=>this._paintGemOnGrid(o,i,s));const n=M(i,s,e,this),r={type:E.WAVE,id:e,result:t,path:t.path,playerPath:n.path,playerResult:n};a.log.push(r),this.ui.addLogEntry(r),this.setSelectedLogEntry(e,e)}queryCell(e,t){if(a.interactionMode!==E.QUERY||e<0||e>=L||t<0||t>=S)return;a.waveCount++;const i=this.secretGemMap.get(`${t},${e}`),s=this.getQueryResult(i);a.permanentQueryResults.some(c=>c.coords.x===e&&c.coords.y===t)||a.permanentQueryResults.push({coords:{x:e,y:t},result:s});const r=new Map;a.playerGems.forEach(c=>this._paintGemOnGrid(c,void 0,r));const o=r.get(`${t},${e}`),d=this.getQueryResult(o),g={type:E.QUERY,id:`query_${e}_${t}_${Date.now()}`,coords:{x:e,y:t},result:s,playerResult:d};a.log.push(g),this.ui.addLogEntry(g),this.setSelectedLogEntry(g.id),this.setInteractionMode(E.WAVE)}getQueryResult(e){if(!e)return{colorNameKey:"log.empty",colorHex:null};const t=this.getGemDefinition(e.name);if(!t)return{colorNameKey:"log.empty",colorHex:null};let i=null;return t.special==="absorbs"?i="SCHWARZ":t.baseGems.length===0?i="TRANSPARENT":i=t.baseGems[0],i&&B[i]?{colorNameKey:B[i].nameKey,colorHex:t.color}:{colorNameKey:"log.empty",colorHex:null}}checkSolution(){const e=Array.from({length:S},()=>Array(L).fill(l.EMPTY)),t=new Map;a.playerGems.forEach(n=>this._paintGemOnGrid(n,e,t));const i=[];for(let n=1;n<=L;n++)i.push(`T${n}`,`B${n}`);for(let n=1;n<=S;n++)i.push(`L${n}`,`R${n}`);let s=!0;for(const n of i){const r=M(this.secretGrid,this.secretGemMap,n,this),o=M(e,t,n,this),d=[...r.colors].sort().join(","),g=[...o.colors].sort().join(",");if(r.exitId!==o.exitId||d!==g){s=!1;break}}this.showEndScreen(s)}addPlayerGem(e,t,i){if(a.playerGems.some(g=>g.name===e))return;const n=this.getGemDefinition(e);if(!n)return;const r={id:`player_${Date.now()}`,name:e,x:t,y:i,rotation:0,isFlipped:!1,isFlippable:F(n.gridPattern),gridPattern:n.gridPattern,isValid:!1},o=r.gridPattern.length,d=r.gridPattern[0].length;r.x=Math.max(0,Math.min(t,L-d)),r.y=Math.max(0,Math.min(i,S-o)),a.playerGems.push(r),this._revalidateAllPlayerGems(),this._updateActivePlayerPathPreview(),this.updateSolutionButtonState(),this.ui.updateToolbar(),this.ui.redrawAll()}movePlayerGem(e,t,i){const s=a.playerGems.find(n=>n.id===e);if(s){const n=s.gridPattern.length,r=s.gridPattern[0].length;s.x=Math.max(0,Math.min(t,L-r)),s.y=Math.max(0,Math.min(i,S-n)),this._revalidateAllPlayerGems(),this._updateActivePlayerPathPreview(),this.updateSolutionButtonState(),this.ui.redrawAll()}}removePlayerGem(e){const t=a.playerGems.findIndex(i=>i.id===e);t>-1&&(a.playerGems.splice(t,1),this._revalidateAllPlayerGems(),this._updateActivePlayerPathPreview(),this.updateSolutionButtonState(),this.ui.updateToolbar(),this.ui.redrawAll())}rotatePlayerGem(e){const t=a.playerGems.find(i=>i.id===e);if(t){const i=t.gridPattern[0].length,s=t.gridPattern.length,n=t.x+i/2,r=t.y+s/2;t.rotation=(t.rotation+90)%360,t.gridPattern=W(t.gridPattern);const o=t.gridPattern[0].length,d=t.gridPattern.length;t.x=Math.round(n-o/2),t.y=Math.round(r-d/2),t.x=Math.max(0,Math.min(t.x,L-o)),t.y=Math.max(0,Math.min(t.y,S-d)),this._revalidateAllPlayerGems(),this._updateActivePlayerPathPreview(),this.updateSolutionButtonState(),this.ui.redrawAll()}}flipPlayerGem(e){const t=a.playerGems.find(i=>i.id===e);t&&t.isFlippable&&(t.isFlipped=!t.isFlipped,t.gridPattern=U(t.gridPattern),this._revalidateAllPlayerGems(),this._updateActivePlayerPathPreview(),this.updateSolutionButtonState(),this.ui.redrawAll())}canPlaceGem(e){return this._isPlacementValid(e,a.playerGems)}setInteractionMode(e){a.interactionMode!==e&&(a.interactionMode=e,this.ui.updateInteractionModeUI(e),this.ui.redrawAll())}setSelectedLogEntry(e,t){if(a.selectedLogEntryId=e,e===null)a.previewSourceEmitterId=null;else{const i=a.log.find(s=>s.id===e);(i==null?void 0:i.type)===E.WAVE?a.previewSourceEmitterId=t||i.id:a.previewSourceEmitterId=null}this._updateActivePlayerPathPreview(),this.ui.handleSelectionChange()}_updateActivePlayerPathPreview(){const e=a.log.find(n=>n.id===a.selectedLogEntryId);if(!a.previewSourceEmitterId||!e||e.type!==E.WAVE){a.activePlayerPath=null,a.activePlayerResult=null;return}const t=Array.from({length:S},()=>Array(L).fill(l.EMPTY)),i=new Map;a.playerGems.forEach(n=>this._paintGemOnGrid(n,t,i));const s=M(t,i,a.previewSourceEmitterId,this);a.activePlayerPath=s.path,a.activePlayerResult=s}_revalidateAllPlayerGems(){a.playerGems.forEach(e=>{e.isValid=this._isPlacementValid(e,a.playerGems)})}_doGemsCollide(e,t){const i=e.gridPattern.length,s=e.gridPattern[0].length,n=t.gridPattern.length,r=t.gridPattern[0].length,o=this.getGemDefinition(e.name),d=this.getGemDefinition(t.name),g=(o==null?void 0:o.special)==="absorbs"||(d==null?void 0:d.special)==="absorbs";for(let c=0;c<i;c++)for(let f=0;f<s;f++){const u=e.gridPattern[c][f];if(u===l.EMPTY)continue;const y=e.x+f,I=e.y+c;for(let w=0;w<n;w++)for(let G=0;G<r;G++){const C=t.gridPattern[w][G];if(C===l.EMPTY)continue;const P=t.x+G,K=t.y+w,O=Math.abs(y-P),D=Math.abs(I-K);if(g){if(O<=1&&D<=1)return!0}else{if(O===0&&D===0)return!0;if(O+D===1){const k=V[u],_=V[C];if(y<P){if(k[1]&&_[3])return!0}else if(y>P){if(k[3]&&_[1])return!0}else if(I<K){if(k[2]&&_[0])return!0}else if(k[0]&&_[2])return!0}}}}return!1}_isPlacementValid(e,t){const{gridPattern:i,x:s,y:n,id:r}=e,o=i.length,d=i[0].length;if(s<0||n<0||s+d>L||n+o>S)return!1;for(const g of t)if(!(r&&g.id===r)&&this._doGemsCollide(e,g))return!1;return!0}_paintGemOnGrid(e,t,i){const{gridPattern:s,x:n,y:r}=e;for(let o=0;o<s.length;o++)for(let d=0;d<s[o].length;d++){const g=s[o][d];g!==l.EMPTY&&(t&&t[r+o]&&t[r+o][n+d]!==void 0&&(t[r+o][n+d]=g),i&&i.set(`${r+o},${n+d}`,e))}}updateSolutionButtonState(){var n;const t=a.difficulty===T.CUSTOM?a.customGemSet.length:((n=x[a.difficulty])==null?void 0:n.length)??0,i=a.playerGems.every(r=>r.isValid),s=a.playerGems.length===t;this.ui.checkSolutionBtn.disabled=!(i&&s)}_placeSecretGems(){const e=[],i=a.difficulty===T.CUSTOM?a.customGemSet:x[a.difficulty];if(!i||i.length===0)return console.error("Gem set is empty for difficulty:",a.difficulty),[];let s=0;for(;e.length<i.length&&s<500;){s++,e.length=0;for(const n of i){const r=this.getGemDefinition(n);if(!r)continue;let o=!1,d=0;for(;!o&&d<200;){d++;const g=F(r.gridPattern),c=g&&Math.random()<.5;let f=r.gridPattern;c&&(f=U(f));const u=Math.floor(Math.random()*4);for(let P=0;P<u;P++)f=W(f);const y=f.length,I=f[0].length;if(L<I||S<y)continue;const w=Math.floor(Math.random()*(L-I+1)),G=Math.floor(Math.random()*(S-y+1)),C={id:`secret_${n}_${e.length}`,name:n,x:w,y:G,rotation:u*90,isFlipped:c,isFlippable:g,gridPattern:f};this._isPlacementValid(C,e)&&(e.push(C),o=!0)}if(!o)break}}return e.length!==i.length?(console.error("Failed to place all secret gems!"),alert("Fehler bei der Level-Erstellung. Bitte versuchen Sie es erneut."),[]):(e.forEach(n=>this._paintGemOnGrid(n,this.secretGrid,this.secretGemMap)),console.log("Secret gems placed:",e),e)}}const q={de:{lang:{name:"Deutsch",flag:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 5 3"><path d="M0 0h5v3H0z"/><path d="M0 1h5v2H0z" fill="#D00"/><path d="M0 2h5v1H0z" fill="#FFCE00"/></svg>',switch:"Sprache wechseln"},mainMenu:{startGame:"Spiel starten"},difficulty:{title:"Schwierigkeitsgrad",TRAINING:"Training",TRAINING_desc:"Ideal zum Lernen des Spiels, mit dem Verlauf der Lichtstrahlen.",NORMAL:"Normal",NORMAL_desc:"Die Grundlagen. Lerne die farbigen und weissen Steine kennen.",MEDIUM:"Mittel",MEDIUM_desc:"Eine neue Herausforderung. Ein transparenter Prisma-Stein lenkt das Licht ab, ohne es zu färben.",HARD:"Schwer",HARD_desc:"Expertenmodus. Neben dem transparenten kommt ein schwarzer, Licht absorbierender Stein in Spiel.",CUSTOM:"Eigenes Level",CUSTOM_desc:"Wähle deine eigenen Steine und erstelle eine neue Herausforderung."},customCreator:{title:"Eigenes Level erstellen",selectColor:"1. Farbe wählen",selectShape:"2. Form wählen",addGem:"Edelstein hinzufügen +",levelSet:"Level-Set (deine Auswahl)",startLevel:"Level starten",alert:{selectColorAndShape:"Bitte wähle zuerst eine Farbe und eine Form aus."}},customDesigner:{title:"Eigene Form entwerfen",instruction:"Klicke auf die Zellen, um ihren Typ zu ändern (Leer, Block, Diagonale). Entwerfe einen Edelstein innerhalb des 4x4-Rasters.",preview:"Vorschau (optimierte Grösse):",finish:"Design fertigstellen"},gameScreen:{tabs:{actions:"Aktionen",logbook:"Logbuch",rules:"Regeln"},interactionMode:"Aktionsmodus:",modeWave:"Strahl senden",modeQuery:"Feld abfragen",availableGems:"Verfügbare Edelsteine:",showPath:"Aktuellen Lichtweg anzeigen (F)"},endScreen:{winTitle:"Gewonnen!",lossTitle:"Verloren!",stats:"Du hast die Mine in {{count}} Abfragen gelöst.",retry:"Bitte versuche es erneut.",solutionLabel:{correct:"Korrekte Lösung:",alternative:"Alternative Lösung gefunden! Deine Lösung (transparent):",yourInput:"Deine Eingabe (über der korrekten Lösung):"},ratingLegendTitle:"Bewertung für {{difficulty}}",ratingLegend:{upTo:"bis {{end}} Abfragen",range:"{{start}} - {{end}} Abfragen",moreThan:"mehr als {{start}} Abfragen"}},buttons:{back:"Zurück",newLevel:"Neues Level",menu:"Menü",submitSolution:"Lösung einreichen",giveUp:"Aufgeben",remove:"Entfernen"},rules:{title:"Spielanleitung",objectiveTitle:"Ziel:",objective:"Finde die Position und Ausrichtung der versteckten Edelsteine.",item1:"Du hast zwei Methoden, um Informationen zu sammeln:",item2:"<strong>Strahl senden:</strong> Sende eine Lichtwelle von einem Emitter am Rand. Die austretende Farbe und Position verraten, welche Steine auf dem Weg getroffen wurden.",item3:"<strong>Feld abfragen:</strong> Frage ein einzelnes Feld direkt ab. Dies verrät dir die Grundfarbe des Steins in diesem Feld (oder ob es leer ist), aber nicht seine Form.",item4:"Ziehe Edelsteine aus der Werkzeugleiste auf das Feld. Du kannst sie verschieben und drehen.",item5:"Ein Klick auf einen platzierten Stein dreht ihn um 90°, ein langes Drücken spiegelt ihn (falls möglich).",item6:"Steine dürfen sich nicht überlappen oder Kante an Kante liegen.",item7:"Drücke 'n' für ein neues Level oder 'esc' um zum Menü zurückzukehren.",colorMixingTitle:"Farbmischung",colorMixingDesc:"Wenn ein Lichtstrahl mehrere farbige Steine durchquert, mischen sich ihre Farben:",basicRules:"Spielmethoden",panel:{item1:"<strong>Strahl senden:</strong> Klicke auf einen Emitter am Rand, um eine Lichtwelle zu senden. Dies gibt dir Hinweise auf den Pfad und die getroffenen Farben.",item2:"<strong>Feld abfragen:</strong> Wechsle den Aktionsmodus und klicke auf ein Feld, um dessen Grundfarbe zu erfahren.",item3:"Ziehe die Edelsteine auf das Feld, um die Lösung nachzubauen.",item4:"Klicke auf einen platzierten Stein, um ihn zu drehen. Langes Drücken spiegelt ihn.",item5:"Steine dürfen sich nicht überlappen oder Kante an Kante liegen."}},tooltips:{absorbs:"Absorbiert Licht.",reflectsOnly:"Reflektiert nur, färbt nicht.",addsColor:"Fügt Farbe '{{color}}' hinzu."},colors:{red:"Rot",yellow:"Gelb",blue:"Blau",white:"Weiss",transparent:"Transparent",black:"Schwarz",purple:"Lila",skyBlue:"Himmelblau",green:"Grün",lightRed:"Hellrot",orange:"Orange",lightYellow:"Hellgelb",lightPurple:"Hell-Lila",darkGray:"Dunkelgrau",lightGreen:"Hellgrün",lightOrange:"Hell-Orange",gray:"Grau"},shapes:{rightTriangle:"Rechtwinkliges Dreieck",parallelogram:"Parallelogramm",bigTriangle:"Grosses Dreieck",diamond:"Raute",smallTriangle:"Kleines Dreieck",absorber:"Absorber",lShape:"L-Form",tShape:"T-Form",square:"Quadrat",bar:"Stab",small:"Klein",custom:"Eigene Form"},log:{absorbed:"Absorbiert",noColor:"Keine Farbe",unknownMix:"Unbekannte Mischung",query:"Abfrage ({{x}},{{y}})",empty:"Leer"},validation:{exactOneRed:"Benötigt: <strong>genau 1 roten</strong> Stein",exactOneYellow:"Benötigt: <strong>genau 1 gelben</strong> Stein",exactOneBlue:"Benötigt: <strong>genau 1 blauen</strong> Stein",atLeastOneWhite:"Benötigt: <strong>mindestens 1 weissen</strong> Stein",maxTwoWhite:"Erlaubt: <strong>maximal 2 weisse</strong> Steine",maxTwoTransparent:"Erlaubt: <strong>maximal 2 transparente</strong> Steine",maxOneBlack:"Erlaubt: <strong>maximal 1 schwarzen</strong> Stein",levelIsValid:"Level ist valide"},ratings:{training:{1:"Sehr gut",2:"Gut",3:"Normal",4:"Verbesserungsfähig"},normal:{1:"Ein wahrer Experte bei der Edelsteinsuche",2:"Ein Profi, dem kaum einer was vormacht",3:"Guter Edelsteinsucher",4:"Juhu, alle Edelsteine gefunden!",5:"Immerhin alle Edelsteine gefunden."},medium:{1:"Meisterlich! Kaum eine Abfrage zu viel.",2:"Sehr beeindruckend! Du kennst dich aus.",3:"Starke Leistung! Du hast den Dreh raus.",4:"Gut gemacht! Alle Schätze geborgen.",5:"Geduld und Spucke führen zum Ziel!"},hard:{1:"Legendär! Eine Leistung für die Geschichtsbücher.",2:"Herausragend! Selbst Experten staunen.",3:"Experten-Niveau! Du hast es wirklich drauf.",4:"Ein hartes Stück Arbeit, aber erfolgreich!",5:"Puh, das war knapp, aber gewonnen!"}}},en:{lang:{name:"English",flag:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 60 30"><clipPath id="a"><path d="M0 0v30h60V0z"/></clipPath><clipPath id="b"><path d="M30 15h30v15H30zM0 0v15h30V0z"/></clipPath><g clip-path="url(#a)"><path d="M0 0v30h60V0z" fill="#012169"/><path d="M0 0l60 30m-60 0L60 0" stroke="#fff" stroke-width="6"/><path d="M0 0l60 30m-60 0L60 0" clip-path="url(#b)" stroke="#C8102E" stroke-width="4"/><path d="M0 15h60M30 0v30" stroke="#fff" stroke-width="10"/><path d="M0 15h60M30 0v30" stroke="#C8102E" stroke-width="6"/></g></svg>',switch:"Change language"},mainMenu:{startGame:"Start Game"},difficulty:{title:"Difficulty",TRAINING:"Training",TRAINING_desc:"Ideal for learning the game, shows the path of light rays.",NORMAL:"Normal",NORMAL_desc:"The basics. Get to know the colored and white gems.",MEDIUM:"Medium",MEDIUM_desc:"A new challenge. A transparent prism gem deflects light without coloring it.",HARD:"Hard",HARD_desc:"Expert mode. In addition to the transparent gem, a black, light-absorbing gem comes into play.",CUSTOM:"Custom Level",CUSTOM_desc:"Choose your own gems and create a new challenge."},customCreator:{title:"Create Custom Level",selectColor:"1. Select Color",selectShape:"2. Select Shape",addGem:"Add Gem +",levelSet:"Level Set (Your Selection)",startLevel:"Start Level",alert:{selectColorAndShape:"Please select a color and a shape first."}},customDesigner:{title:"Design Custom Shape",instruction:"Click on the cells to change their type (Empty, Block, Diagonal). Design a gem within the 4x4 grid.",preview:"Preview (cropped size):",finish:"Finish Design"},gameScreen:{tabs:{actions:"Actions",logbook:"Logbook",rules:"Rules"},interactionMode:"Action Mode:",modeWave:"Send Ray",modeQuery:"Query Cell",availableGems:"Available Gems:",showPath:"Show current light path (F)"},endScreen:{winTitle:"You Win!",lossTitle:"You Lose!",stats:"You solved the mine in {{count}} queries.",retry:"Please try again.",solutionLabel:{correct:"Correct Solution:",alternative:"Alternative solution found! Your solution (transparent):",yourInput:"Your input (over the correct solution):"},ratingLegendTitle:"Rating for {{difficulty}}",ratingLegend:{upTo:"up to {{end}} queries",range:"{{start}} - {{end}} queries",moreThan:"more than {{start}} queries"}},buttons:{back:"Back",newLevel:"New Level",menu:"Menu",submitSolution:"Submit Solution",giveUp:"Give Up",remove:"Remove"},rules:{title:"How to Play",objectiveTitle:"Goal:",objective:"Find the position and orientation of the hidden gems.",item1:"You have two methods to gather information:",item2:"<strong>Send Ray:</strong> Send a light wave from an emitter on the edge. The exiting color and position reveal which gems were hit along the path.",item3:"<strong>Query Cell:</strong> Directly query a single cell. This tells you the base color of the gem in that cell (or if it's empty), but not its shape.",item4:"Drag gems from the toolbar onto the board. You can move and rotate them.",item5:"Clicking on a placed gem rotates it by 90°. A long press flips it (if possible).",item6:"Gems cannot overlap or be edge-to-edge.",item7:"Press 'n' for a new level or 'esc' to return to the menu.",colorMixingTitle:"Color Mixing",colorMixingDesc:"When a light beam passes through multiple colored gems, their colors mix:",basicRules:"Game Methods",panel:{item1:"<strong>Send Ray:</strong> Click an emitter on the edge to send a light wave. This gives clues about the path and colors hit.",item2:"<strong>Query Cell:</strong> Switch the action mode and click a cell to learn its base color.",item3:"Drag the gems onto the board to replicate the solution.",item4:"Click on a placed gem to rotate it. A long press flips it.",item5:"Gems cannot overlap or be edge-to-edge."}},tooltips:{absorbs:"Absorbs light.",reflectsOnly:"Only reflects, does not color.",addsColor:"Adds '{{color}}' color."},colors:{red:"Red",yellow:"Yellow",blue:"Blue",white:"White",transparent:"Transparent",black:"Black",purple:"Purple",skyBlue:"Sky Blue",green:"Green",lightRed:"Light Red",orange:"Orange",lightYellow:"Light Yellow",lightPurple:"Light Purple",darkGray:"Dark Gray",lightGreen:"Light Green",lightOrange:"Light Orange",gray:"Gray"},shapes:{rightTriangle:"Right Triangle",parallelogram:"Parallelogram",bigTriangle:"Large Triangle",diamond:"Diamond",smallTriangle:"Small Triangle",absorber:"Absorber",lShape:"L-Shape",tShape:"T-Shape",square:"Square",bar:"Bar",small:"Small",custom:"Custom Shape"},log:{absorbed:"Absorbed",noColor:"No Color",unknownMix:"Unknown Mix",query:"Query ({{x}},{{y}})",empty:"Empty"},validation:{exactOneRed:"Requires: <strong>exactly 1 red</strong> gem",exactOneYellow:"Requires: <strong>exactly 1 yellow</strong> gem",exactOneBlue:"Requires: <strong>exactly 1 blue</strong> gem",atLeastOneWhite:"Requires: <strong>at least 1 white</strong> gem",maxTwoWhite:"Allowed: <strong>maximum of 2 white</strong> gems",maxTwoTransparent:"Allowed: <strong>maximum of 2 transparent</strong> gems",maxOneBlack:"Allowed: <strong>maximum of 1 black</strong> gem",levelIsValid:"Level is valid"},ratings:{training:{1:"Very good",2:"Good",3:"Average",4:"Needs improvement"},normal:{1:"A true gem-finding expert",2:"A pro who can't be fooled",3:"Good gem hunter",4:"Yay, all gems found!",5:"At least all gems were found."},medium:{1:"Masterful! Hardly a query wasted.",2:"Very impressive! You know your stuff.",3:"Strong performance! You've got the hang of it.",4:"Well done! All treasures recovered.",5:"Patience and persistence lead to success!"},hard:{1:"Legendary! A performance for the history books.",2:"Outstanding! Even experts are amazed.",3:"Expert level! You've really got it.",4:"A tough job, but successful!",5:"Phew, that was close, but you won!"}}}};function re(){const h=localStorage.getItem("orapa-lang");return h==="de"||h==="en"?h:navigator.language.slice(0,2).toLowerCase()==="de"?"de":"en"}let R=re();const Q=[];function ae(h){Q.push(h)}function oe(){Q.forEach(h=>h()),document.documentElement.lang=R}function le(h){h!==R&&(R=h,localStorage.setItem("orapa-lang",h),oe())}function de(){return R}function m(h,e){const t=h.split(".");let i=q[R];for(const s of t)if(i=i==null?void 0:i[s],i===void 0)break;if(i===void 0&&R!=="de"){let s=q.de;for(const n of t)if(s=s==null?void 0:s[n],s===void 0)return h;i=s}else if(i===void 0)return h;return typeof i!="string"?h:(e&&Object.entries(e).forEach(([s,n])=>{const r=new RegExp(`{{${s}}}`,"g");i=i.replace(r,String(n))}),i)}document.documentElement.lang=R;class N{constructor(e,t){this.state="normal",this.isUsed=!1,this.usedColor=null,this.cornerRadius=4,this.id=e,this.label=t,this.rect={x:0,y:0,width:0,height:0}}updateRect(e,t,i){this.rect.width=e,this.rect.height=t;const s=parseInt(this.id.substring(1))-1;switch(this.id[0]){case"T":this.rect.x=(s+1)*(e+i),this.rect.y=0;break;case"B":this.rect.x=(s+1)*(e+i),this.rect.y=(S+1)*(t+i);break;case"L":this.rect.x=0,this.rect.y=(s+1)*(t+i);break;case"R":this.rect.x=(L+1)*(e+i),this.rect.y=(s+1)*(t+i);break}}isInside(e,t){return e>=this.rect.x&&e<=this.rect.x+this.rect.width&&t>=this.rect.y&&t<=this.rect.y+this.rect.height}draw(e,t=!1){e.save();const i=this.isUsed&&this.usedColor?this.usedColor:"#4a627a";e.beginPath();const s=new Path2D;s.roundRect(this.rect.x,this.rect.y,this.rect.width,this.rect.height,this.cornerRadius),e.fillStyle=i,e.fill(s),t?(e.strokeStyle="#f1c40f",e.lineWidth=3,e.shadowColor="#f1c40f",e.shadowBlur=8,e.stroke(s),e.shadowColor="transparent",e.shadowBlur=0):this.state==="focused"&&(e.strokeStyle="#3498db",e.lineWidth=2,e.stroke(s));const r=(o=>{if(!o)return"#ecf0f1";let d=0,g=0,c=0;try{if(o.startsWith("#")){let u=o.substring(1);if(u.length===3&&(u=u.split("").map(y=>y+y).join("")),u.length!==6)return"#ecf0f1";d=parseInt(u.substring(0,2),16),g=parseInt(u.substring(2,4),16),c=parseInt(u.substring(4,6),16)}else if(o.startsWith("rgb")){const u=o.substring(o.indexOf("(")+1,o.lastIndexOf(")")).split(/,\s*/);d=parseInt(u[0]),g=parseInt(u[1]),c=parseInt(u[2])}else return"#ecf0f1"}catch{return"#ecf0f1"}return isNaN(d)||isNaN(g)||isNaN(c)?"#ecf0f1":(d*299+g*587+c*114)/1e3>=149?"#2c3e50":"#ecf0f1"})(i);e.fillStyle=r,e.font=`bold ${this.rect.height*.45}px -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif`,e.textAlign="center",e.textBaseline="middle",e.fillText(this.label,this.rect.x+this.rect.width/2,this.rect.y+this.rect.height/2),e.restore()}}class ce{constructor(e,t){this.cellWidth=0,this.cellHeight=0,this.gap=1,this.emitters=[],this.game=e,this.ui=t,this.boardWrapper=document.getElementById("game-board-wrapper"),this.gemCanvas=document.getElementById("gem-canvas"),this.gemCtx=this.gemCanvas.getContext("2d"),this.pathOverlay=document.getElementById("path-overlay"),this.pathCtx=this.pathOverlay.getContext("2d"),this.endSolutionCanvas=document.getElementById("end-solution-canvas"),this.endSolutionCtx=this.endSolutionCanvas.getContext("2d"),new ResizeObserver(()=>this.handleResize()).observe(this.boardWrapper)}connectInputHandler(e){this.inputHandler=e}handleResize(){const e=this.boardWrapper.getBoundingClientRect();if(e.width===0||e.height===0)return;const t=L+2,i=S+2;this.cellWidth=(e.width-(t-1)*this.gap)/t,this.cellHeight=(e.height-(i-1)*this.gap)/i;const s=window.devicePixelRatio||1;[this.pathOverlay,this.gemCanvas].forEach(n=>{n.width=e.width*s,n.height=e.height*s,n.style.width=`${e.width}px`,n.style.height=`${e.height}px`,n.getContext("2d").scale(s,s)}),this.emitters.forEach(n=>n.updateRect(this.cellWidth,this.cellHeight,this.gap)),this.redrawAll()}setupEmitters(){this.emitters=[];for(let e=0;e<L;e++)this.emitters.push(new N(`T${e+1}`,`T${e+1}`));for(let e=0;e<L;e++)this.emitters.push(new N(`B${e+1}`,`B${e+1}`));for(let e=0;e<S;e++)this.emitters.push(new N(`L${e+1}`,`L${e+1}`));for(let e=0;e<S;e++)this.emitters.push(new N(`R${e+1}`,`R${e+1}`))}updateEmitterFromLog(e){const t=this.getPathColor(e.result),i=this.emitters.find(s=>s.id===e.id);if(i&&(i.isUsed=!0,i.usedColor=t),e.result.exitId&&e.result.exitId!=="Loop?"){const s=this.emitters.find(n=>n.id===e.result.exitId);s&&(s.isUsed=!0,s.usedColor=t)}}redrawAll(){this.gemCanvas.width===0||!this.inputHandler||(this._clearCanvas(this.gemCtx),this.clearPath(),this._drawBoardBackgroundAndGrid(this.gemCtx),this._drawPermanentQueryFills(this.gemCtx),a.debugMode&&this.drawDebugSolution(this.gemCtx),this.drawPlayerGems(this.gemCtx),this._drawPermanentQueryConflictBorders(this.gemCtx),this.inputHandler.isDragging&&this.inputHandler.draggedItemInfo&&this.drawDragPreview(this.gemCtx),this.drawEmitters(this.gemCtx),this._drawPaths(this.pathCtx),this._drawHoverEffects(this.pathCtx),this._drawTooltips(this.pathCtx))}drawEmitters(e){const t=a.selectedLogEntryId?a.log.find(i=>i.id===a.selectedLogEntryId):null;this.emitters.forEach(i=>{var n;let s=!1;t&&t.type===E.WAVE&&(s=i.id===t.id||i.id===t.result.exitId),i.state=i.id===((n=this.inputHandler)==null?void 0:n.focusedEmitterId)?"focused":"normal",i.draw(e,s)})}_drawPaths(e){const t=a.selectedLogEntryId?a.log.find(i=>i.id===a.selectedLogEntryId):null;if(t&&t.type===E.WAVE&&(a.difficulty==="TRAINING"||a.debugMode)&&t.path){const s=this.getPathColor(t.result);this.drawPath(e,t.path,s,!1)}if(a.showPlayerPathPreview&&a.activePlayerPath&&a.activePlayerResult){const i=this.getPathColor(a.activePlayerResult);this.drawPath(e,a.activePlayerPath,i,!0)}}_drawHoverEffects(e){var t;(t=this.inputHandler)!=null&&t.hoveredGridCell&&a.interactionMode===E.QUERY&&!this.inputHandler.isDragging&&this._drawQueryHover(e)}_drawTooltips(e){const t=a.selectedLogEntryId?a.log.find(i=>i.id===a.selectedLogEntryId):null;(t==null?void 0:t.type)===E.WAVE?this._drawSelectedWaveTooltip(e):(t==null?void 0:t.type)===E.QUERY&&this._drawSelectedQueryHighlight(e)}_drawBoardBackgroundAndGrid(e){e.save();const t=getComputedStyle(document.documentElement).getPropertyValue("--surface-color"),i=getComputedStyle(document.documentElement).getPropertyValue("--border-color");e.fillStyle=t,e.fillRect(0,0,e.canvas.width/(window.devicePixelRatio||1),e.canvas.height/(window.devicePixelRatio||1)),e.fillStyle=i,e.fillRect(this.cellWidth+this.gap/2,this.cellHeight+this.gap/2,L*this.cellWidth+(L+1)*this.gap,S*this.cellHeight+(S+1)*this.gap),e.fillStyle=t,e.fillRect(this.cellWidth+this.gap,this.cellHeight+this.gap,L*this.cellWidth+(L-1)*this.gap,S*this.cellHeight+(S-1)*this.gap),e.strokeStyle=i,e.lineWidth=this.gap,e.beginPath();for(let s=1;s<L;s++){const n=(s+1)*(this.cellWidth+this.gap)-this.gap/2;e.moveTo(n,this.cellHeight+this.gap),e.lineTo(n,(S+1)*(this.cellHeight+this.gap))}for(let s=1;s<S;s++){const n=(s+1)*(this.cellHeight+this.gap)-this.gap/2;e.moveTo(this.cellWidth+this.gap,n),e.lineTo((L+1)*(this.cellWidth+this.gap),n)}e.stroke(),e.restore()}_drawPermanentQueryFills(e){if(a.permanentQueryResults.length===0)return;const t=this.inputHandler.getPlayerGemMap();e.save(),e.globalAlpha=.5;for(const i of a.permanentQueryResults){const{coords:s,result:n}=i;if(!t.get(`${s.y},${s.x}`)){const o=this._gridToCanvasCoords(s.x,s.y);n.colorHex?(e.fillStyle=n.colorHex,this.isTransparentColor(n.colorHex)&&(e.fillStyle="rgba(164, 212, 228, 0.5)")):e.fillStyle="rgba(127, 140, 141, 0.35)",e.fillRect(o.x,o.y,this.cellWidth,this.cellHeight)}}e.restore()}_drawPermanentQueryConflictBorders(e){if(a.permanentQueryResults.length===0)return;const t=this.inputHandler.getPlayerGemMap();e.save();for(const i of a.permanentQueryResults){const{coords:s,result:n}=i,r=t.get(`${s.y},${s.x}`);if(r&&this.game.getQueryResult(r).colorNameKey!==n.colorNameKey){const d=this._gridToCanvasCoords(s.x,s.y);e.strokeStyle=n.colorHex||"white",e.lineWidth=3,e.globalAlpha=1,e.shadowColor="black",e.shadowBlur=6,e.strokeRect(d.x+1.5,d.y+1.5,this.cellWidth-3,this.cellHeight-3)}}e.restore()}drawPlayerGems(e){var t,i,s;for(const n of a.playerGems){if((t=this.inputHandler)!=null&&t.isDragging&&((i=this.inputHandler.draggedItemInfo)==null?void 0:i.from)==="board"&&this.inputHandler.draggedItemInfo.id===n.id)continue;const r=this.game.getGemDefinition(n.name);if(!r)continue;let o=!1;this.inputHandler&&!this.inputHandler.isDragging&&a.interactionMode===E.WAVE&&(o=((s=this.inputHandler.getGemAtCanvasPos(this.inputHandler.dragPos.x,this.inputHandler.dragPos.y))==null?void 0:s.id)===n.id),this.drawGem(e,n,r.color,!n.isValid,o)}}drawDebugSolution(e){if(!(!this.game.secretGrid||a.secretGems.length===0)){e.save(),e.globalAlpha=.2;for(const t of a.secretGems){const i=this.game.getGemDefinition(t.name);i&&this.drawGem(e,t,i.color)}e.restore()}}drawDragPreview(e){var d;if(!((d=this.inputHandler)!=null&&d.draggedItemInfo)||!this.inputHandler)return;const{gridPattern:t,name:i}=this.inputHandler.draggedItemInfo,s=this.game.getGemDefinition(i);if(!s)return;const{x:n,y:r,isValid:o}=this.inputHandler.lastValidDropTarget;e.save(),e.globalAlpha=.7,this.drawGem(e,{x:n,y:r,gridPattern:t},s.color,!o),e.restore()}drawGem(e,t,i,s=!1,n=!1){const{gridPattern:r,x:o,y:d}=t;for(let g=0;g<r.length;g++)for(let c=0;c<r[g].length;c++)if(r[g][c]!==l.EMPTY){const f=this._gridToCanvasCoords(o+c,d+g);this.drawCellShape(e,f.x,f.y,this.cellWidth,this.cellHeight,r[g][c],i,s,n)}}drawCellShape(e,t,i,s,n,r,o,d=!1,g=!1){e.save(),this.isTransparentColor(o)?(e.fillStyle="rgba(164, 212, 228, 0.3)",e.strokeStyle="#a4d4e4",e.lineWidth=2):o===p.SCHWARZ_GEM?(e.fillStyle=o,e.strokeStyle="#555",e.lineWidth=1):(e.fillStyle=o,e.strokeStyle="rgba(0,0,0,0.4)",e.lineWidth=1),g&&!d&&(e.shadowColor="white",e.shadowBlur=10),d&&(e.fillStyle="rgba(231, 76, 60, 0.5)",e.strokeStyle=p.INVALID_GEM,e.lineWidth=2,g&&(e.shadowColor="white",e.shadowBlur=10)),e.beginPath();const c=new Path2D;switch(r){case l.BLOCK:case l.ABSORB:c.rect(t,i,s,n);break;case l.TRIANGLE_TL:c.moveTo(t,i),c.lineTo(t+s,i),c.lineTo(t,i+n),c.closePath();break;case l.TRIANGLE_TR:c.moveTo(t,i),c.lineTo(t+s,i),c.lineTo(t+s,i+n),c.closePath();break;case l.TRIANGLE_BR:c.moveTo(t+s,i),c.lineTo(t+s,i+n),c.lineTo(t,i+n),c.closePath();break;case l.TRIANGLE_BL:c.moveTo(t,i),c.lineTo(t,i+n),c.lineTo(t+s,i+n),c.closePath();break}e.fill(c),e.stroke(c),e.restore()}drawPath(e,t,i,s=!1){if(t.length<2)return;e.save(),e.strokeStyle=i,e.lineWidth=3,e.lineCap="round",e.lineJoin="round",e.shadowColor="rgba(0,0,0,0.5)",e.shadowBlur=5,s&&(e.globalAlpha=.6,e.setLineDash([8,6])),e.beginPath();const n=this.cellWidth+this.gap,r=this.cellHeight+this.gap,o=this.cellWidth+this.gap,d=this.cellHeight+this.gap,g=c=>({x:n+c.x*o,y:r+c.y*d});e.moveTo(g(t[0]).x,g(t[0]).y);for(let c=1;c<t.length;c++)e.lineTo(g(t[c]).x,g(t[c]).y);e.stroke(),e.restore()}_clearCanvas(e){e.save(),e.setTransform(1,0,0,1,0,0),e.clearRect(0,0,e.canvas.width,e.canvas.height),e.restore()}clearPath(){this._clearCanvas(this.pathCtx)}getPathColor(e){if(e.absorbed)return p.ABSORBIERT;if(e.colors.length===0)return"rgba(236, 240, 241, 0.7)";const t=[...e.colors].sort().join(",");return z[t]||"#ccc"}_gridToCanvasCoords(e,t){return{x:(e+1)*(this.cellWidth+this.gap),y:(t+1)*(this.cellHeight+this.gap)}}_canvasToGridCoords(e,t){return{x:Math.floor(e/(this.cellWidth+this.gap))-1,y:Math.floor(t/(this.cellHeight+this.gap))-1}}drawToolbarGem(e,t){const i=e.getContext("2d");if(!i)return;const s=window.devicePixelRatio||1,n=e.getBoundingClientRect();if(n.width===0||n.height===0)return;e.width=n.width*s,e.height=n.height*s,i.scale(s,s),i.clearRect(0,0,n.width,n.height);const r=t.gridPattern,o=r.length,d=r[0].length,c=Math.min(n.width/d,n.height/o),f=d*c,u=o*c,y=(n.width-f)/2,I=(n.height-u)/2,w=t.color||"#bdc3c7";for(let G=0;G<o;G++)for(let C=0;C<d;C++)r[G][C]!==l.EMPTY&&this.drawCellShape(i,C*c+y,G*c+I,c,c,r[G][C],w)}drawEndScreenSolution(e,t){const i=this.endSolutionCanvas,s=this.endSolutionCtx,n=window.devicePixelRatio||1;i.width=this.gemCanvas.width,i.height=this.gemCanvas.height,i.style.width=this.gemCanvas.style.width,i.style.height=this.gemCanvas.style.height,s.setTransform(1,0,0,1,0,0),s.clearRect(0,0,i.width,i.height),s.scale(n,n);const r=(o,d,g,c)=>{o.save(),o.globalAlpha=g;for(const f of d){const u=this.game.getGemDefinition(f.name);u&&this.drawGem(o,f,u.color,c?!f.isValid:!1)}o.restore()};this._drawBoardBackgroundAndGrid(s),this.emitters.forEach(o=>o.draw(s,!1)),r(s,e,1,!1),t.length>0&&r(s,t,.55,!0)}_drawSelectedWaveTooltip(e){if(!this.inputHandler)return;const t=a.log.find(o=>o.id===a.selectedLogEntryId);if(!t||t.type!==E.WAVE)return;const i=a.previewSourceEmitterId||t.id,s=this.emitters.find(o=>o.id===i);if(!s)return;const n=this.ui.getPathColorName(t.result),r=i===t.id?`${t.id} ➔ ${n} ➔ ${t.result.exitId}`:`${t.result.exitId} ➔ ${n} ➔ ${t.id}`;this.drawTooltip(e,r,s.rect)}drawTooltip(e,t,i){e.save();const s=this.cellHeight*.35;e.font=`bold ${s}px -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif`,e.textBaseline="middle";const n=e.measureText(t),r={x:8,y:5},o=n.width+r.x*2,d=s+r.y*2,g=5,c=this.gemCanvas.width/(window.devicePixelRatio||1),f=this.gemCanvas.height/(window.devicePixelRatio||1);let u=0,y=0;y=i.y+i.height+g,u=i.x+i.width/2-o/2,y+d>f&&(y=i.y-d-g,y<0&&(u=i.x+i.width+g,y=i.y+i.height/2-d/2,u+o>c&&(u=i.x-o-g))),u<0&&(u=0),u+o>c&&(u=c-o),y<0&&(y=0),y+d>f&&(y=f-d),e.fillStyle="black",e.beginPath(),e.roundRect(u,y,o,d,6),e.fill(),e.fillStyle="white",e.textAlign="center",e.fillText(t,u+o/2,y+d/2),e.restore()}_drawSelectedQueryHighlight(e){const t=a.log.find(r=>r.id===a.selectedLogEntryId);if(!t||t.type!==E.QUERY)return;const{coords:i,result:s}=t,n=this._gridToCanvasCoords(i.x,i.y);e.save(),e.globalAlpha=.5,s.colorHex?(e.fillStyle=s.colorHex,this.isTransparentColor(s.colorHex)&&(e.fillStyle="rgba(164, 212, 228, 0.5)",e.strokeStyle="#a4d4e4",e.lineWidth=2,e.strokeRect(n.x,n.y,this.cellWidth,this.cellHeight))):e.fillStyle="rgba(255, 255, 255, 0.2)",e.fillRect(n.x,n.y,this.cellWidth,this.cellHeight),e.restore()}_drawQueryHover(e){var n;if(!((n=this.inputHandler)!=null&&n.hoveredGridCell))return;const{x:t,y:i}=this.inputHandler.hoveredGridCell,s=this._gridToCanvasCoords(t,i);e.save(),e.strokeStyle="rgba(255, 255, 255, 0.8)",e.lineWidth=2,e.globalAlpha=.7,e.strokeRect(s.x,s.y,this.cellWidth,this.cellHeight),e.restore()}isTransparentColor(e){return e===p.TRANSPARENT}getBaseColorHex(e){var t;return((t=B[e])==null?void 0:t.color)||"#000"}getBaseColorNameKey(e){var t;return((t=B[e])==null?void 0:t.nameKey)||""}}class he{constructor(e,t){this.dragStartInfo=null,this.isDragging=!1,this.draggedItemInfo=null,this.dragPos={x:0,y:0},this.lastValidDropTarget={x:-1,y:-1,isValid:!1},this.hoveredGridCell=null,this.focusedEmitterId=null,this.longPressTimeout=null,this.longPressTriggered=!1,this.game=e,this.ui=t,this.gemCanvas=document.getElementById("gem-canvas"),this.logList=document.getElementById("log-list"),this.bindEvents()}connectRenderer(e){this.renderer=e}bindEvents(){document.addEventListener("click",e=>this.handleGlobalClick(e)),this.logList.addEventListener("click",e=>this.handleLogClick(e)),this.gemCanvas.addEventListener("keydown",e=>this.handleCanvasKeyDown(e)),this.gemCanvas.addEventListener("mousemove",e=>this.handleCanvasHover(e.clientX,e.clientY)),this.gemCanvas.addEventListener("mouseleave",()=>this.handleCanvasMouseLeave()),document.addEventListener("mousedown",e=>this.handlePointerDown(e)),document.addEventListener("touchstart",e=>this.handlePointerDown(e),{passive:!1}),document.addEventListener("mousemove",e=>this.handlePointerMove(e)),document.addEventListener("touchmove",e=>this.handlePointerMove(e),{passive:!1}),document.addEventListener("mouseup",e=>this.handlePointerUp(e)),document.addEventListener("touchend",e=>this.handlePointerUp(e))}getPointerCoordinates(e){return e instanceof MouseEvent?{clientX:e.clientX,clientY:e.clientY}:e.changedTouches&&e.changedTouches.length>0?{clientX:e.changedTouches[0].clientX,clientY:e.changedTouches[0].clientY}:null}handleGlobalClick(e){if(!a.selectedLogEntryId)return;const t=e.target;t.closest("#gem-canvas")||t.closest("#log-list li")||t.closest(".preview-toggle-wrapper")||this.game.setSelectedLogEntry(null)}handleLogClick(e){const t=e.target.closest("li");if(t&&t.dataset.logId){const i=t.dataset.logId;if(a.selectedLogEntryId===i)this.game.setSelectedLogEntry(null);else{const s=a.log.find(r=>r.id===i),n=(s==null?void 0:s.type)===E.WAVE?s.id:void 0;this.game.setSelectedLogEntry(i,n)}}}handleCanvasHover(e,t){if(this.isDragging||!this.renderer)return;const i=this.gemCanvas.getBoundingClientRect(),s=e-i.left,n=t-i.top;if(this.dragPos={x:s,y:n},a.interactionMode===E.QUERY){const r=this.renderer._canvasToGridCoords(s,n),o=r.x>=0&&r.x<L&&r.y>=0&&r.y<S;this.gemCanvas.style.cursor=o?"crosshair":"default",this.hoveredGridCell=o?r:null}else{this.hoveredGridCell=null;const r=this.getGemAtCanvasPos(s,n),o=this.renderer.emitters.find(d=>d.isInside(s,n));this.gemCanvas.style.cursor=r||o?"pointer":"default"}this.ui.redrawAll()}handleCanvasMouseLeave(){this.dragPos={x:-1,y:-1},this.hoveredGridCell=null,this.gemCanvas.style.cursor="default",this.ui.redrawAll()}handlePointerDown(e){if(e instanceof MouseEvent&&e.button!==0)return;const t=this.getPointerCoordinates(e);if(!t)return;const{clientX:i,clientY:s}=t,n=e.target,r=n.closest(".toolbar-gem:not(.placed)"),o=n.closest("#gem-canvas");e instanceof TouchEvent&&(o||r)&&e.preventDefault();let d=null;if(r){const g=r.getBoundingClientRect(),c=r.dataset.gemName,f=this.ui.getGemDefinition(c);f&&(d={name:c,from:"toolbar",gridPattern:f.gridPattern,element:r,offsetX:i-g.left,offsetY:s-g.top})}else if(o&&a.interactionMode===E.WAVE&&this.renderer){const g=this.gemCanvas.getBoundingClientRect(),c=i-g.left,f=s-g.top,u=this.getGemAtCanvasPos(c,f);if(u){const y=this.renderer._canvasToGridCoords(c,f);d={id:u.id,name:u.name,from:"board",gridPattern:u.gridPattern,offsetX:(y.x-u.x)*this.renderer.cellWidth,offsetY:(y.y-u.y)*this.renderer.cellHeight},u.isFlippable&&(this.longPressTimeout=window.setTimeout(()=>{this.game.flipPlayerGem(u.id),this.longPressTriggered=!0,this.dragStartInfo=null,this.isDragging=!1},400))}}(o||r)&&(this.dragStartInfo={item:d,startX:i,startY:s})}handlePointerMove(e){const t=this.getPointerCoordinates(e);if(!t)return;const{clientX:i,clientY:s}=t;if(this.dragStartInfo){e instanceof TouchEvent&&e.preventDefault();const n=i-this.dragStartInfo.startX,r=s-this.dragStartInfo.startY;if(!this.isDragging&&Math.sqrt(n*n+r*r)>10&&(this.longPressTimeout&&(clearTimeout(this.longPressTimeout),this.longPressTimeout=null),this.dragStartInfo.item?(this.isDragging=!0,this.draggedItemInfo=this.dragStartInfo.item,this.gemCanvas.style.cursor="grabbing",this.draggedItemInfo.element&&this.draggedItemInfo.element.classList.add("dragging")):this.dragStartInfo=null),this.isDragging){const o=this.gemCanvas.getBoundingClientRect();this.dragPos={x:i-o.left,y:s-o.top};const{gridPattern:d,name:g,id:c}=this.draggedItemInfo,f=d[0].length,u=d.length,y=Math.round(this.renderer._canvasToGridCoords(this.dragPos.x,this.dragPos.y).x-f/2+.5),I=Math.round(this.renderer._canvasToGridCoords(this.dragPos.y,this.dragPos.y).y-u/2+.5),w={id:c,name:g,x:y,y:I,gridPattern:d};this.lastValidDropTarget.isValid=this.game.canPlaceGem(w),this.lastValidDropTarget.x=y,this.lastValidDropTarget.y=I,this.ui.redrawAll()}}else e.target.closest("#gem-canvas")?this.handleCanvasHover(i,s):this.handleCanvasMouseLeave()}handlePointerUp(e){var i;if(this.longPressTimeout&&clearTimeout(this.longPressTimeout),this.longPressTriggered){this.longPressTriggered=!1,this.dragStartInfo=null,this.isDragging=!1,this.ui.redrawAll();return}const t=this.getPointerCoordinates(e);if(!t||!this.renderer){this.dragStartInfo=null,this.isDragging=!1;return}if(this.isDragging&&this.draggedItemInfo){const s=this.gemCanvas.getBoundingClientRect();if(t.clientX>=s.left&&t.clientX<=s.right&&t.clientY>=s.top&&t.clientY<=s.bottom){const{x:r,y:o}=this.lastValidDropTarget;this.draggedItemInfo.from==="toolbar"?this.game.addPlayerGem(this.draggedItemInfo.name,r,o):this.draggedItemInfo.id&&this.game.movePlayerGem(this.draggedItemInfo.id,r,o)}else this.draggedItemInfo.from==="board"&&this.draggedItemInfo.id&&this.game.removePlayerGem(this.draggedItemInfo.id)}else this.dragStartInfo&&e.target.closest("#gem-canvas")&&this.handleCanvasTap(t.clientX,t.clientY);(i=this.draggedItemInfo)!=null&&i.element&&this.draggedItemInfo.element.classList.remove("dragging"),this.dragStartInfo=null,this.isDragging=!1,this.draggedItemInfo=null,this.gemCanvas.style.cursor="default",this.ui.redrawAll(),this.ui.updateToolbar()}handleCanvasTap(e,t){var r,o;if(!this.renderer)return;const i=this.gemCanvas.getBoundingClientRect(),s=e-i.left,n=t-i.top;if(a.interactionMode===E.WAVE){const d=this.renderer.emitters.find(g=>g.isInside(s,n));if(d)if(!d.isUsed)this.game.sendWave(d.id);else{const g=a.log.find(c=>c.type===E.WAVE&&(c.id===d.id||c.result.exitId===d.id));g?this.game.setSelectedLogEntry(a.selectedLogEntryId===g.id&&a.previewSourceEmitterId===d.id?null:g.id,d.id):this.game.setSelectedLogEntry(null)}else{const g=this.getGemAtCanvasPos(s,n);g&&((o=(r=this.dragStartInfo)==null?void 0:r.item)==null?void 0:o.id)===g.id?(this.game.setSelectedLogEntry(null),this.game.rotatePlayerGem(g.id)):this.game.setSelectedLogEntry(null)}}else{const d=this.renderer._canvasToGridCoords(s,n);d.x>=0&&d.x<L&&d.y>=0&&d.y<S?this.game.queryCell(d.x,d.y):this.game.setSelectedLogEntry(null)}}handleCanvasKeyDown(e){if(a.interactionMode!==E.WAVE||!this.renderer||!["ArrowUp","ArrowDown","ArrowLeft","ArrowRight","Enter"," "].includes(e.key))return;e.preventDefault();const t=this.renderer.emitters;if(e.key==="Enter"||e.key===" "){if(this.focusedEmitterId){const n=t.find(r=>r.id===this.focusedEmitterId);if(n&&!n.isUsed)this.game.sendWave(this.focusedEmitterId);else if(n!=null&&n.isUsed){const r=a.log.find(o=>o.type===E.WAVE&&(o.id===n.id||o.result.exitId===n.id));r&&this.game.setSelectedLogEntry(a.selectedLogEntryId===r.id&&a.previewSourceEmitterId===n.id?null:r.id,n.id)}}this.ui.redrawAll(),this.ui.updateLogHighlight();return}!this.focusedEmitterId&&t.length>0&&(this.focusedEmitterId=t[0].id);const i=t.findIndex(n=>n.id===this.focusedEmitterId);if(i===-1)return;let s=-1;switch(e.key){case"ArrowRight":s=(i+1)%t.length;break;case"ArrowLeft":s=(i-1+t.length)%t.length;break;case"ArrowUp":s=(i-1+t.length)%t.length;break;case"ArrowDown":s=(i+1)%t.length;break}s!==-1&&(this.focusedEmitterId=t[s].id,this.ui.redrawAll())}getGemAtCanvasPos(e,t){if(!this.renderer||e<0||t<0)return null;const{x:i,y:s}=this.renderer._canvasToGridCoords(e,t);for(let n=a.playerGems.length-1;n>=0;n--){const r=a.playerGems[n],o=r.gridPattern.length,d=r.gridPattern[0].length;if(i>=r.x&&i<r.x+d&&s>=r.y&&s<r.y+o&&r.gridPattern[s-r.y][i-r.x]!==l.EMPTY)return r}return null}getPlayerGemMap(){const e=new Map;for(const t of a.playerGems)for(let i=0;i<t.gridPattern.length;i++)for(let s=0;s<t.gridPattern[i].length;s++)t.gridPattern[i][s]!==l.EMPTY&&e.set(`${t.y+i},${t.x+s}`,t);return e}}class ge{constructor(e,t){this.state={selectedColorKey:null,selectedShapeKey:null,gems:[],designerGridState:[],customDesignedShape:null},this.game=e,this.renderer=t,this.customColorSelector=document.getElementById("custom-color-selector"),this.customShapeSelector=document.getElementById("custom-shape-selector"),this.btnAddCustomGem=document.getElementById("btn-add-custom-gem"),this.customGemList=document.getElementById("custom-gem-list"),this.customValidationFeedback=document.getElementById("custom-validation-feedback"),this.btnStartCustomLevel=document.getElementById("btn-start-custom-level"),this.designerModal=document.getElementById("custom-shape-designer-modal"),this.designerGrid=document.getElementById("designer-grid"),this.designerPreviewCanvas=document.getElementById("designer-preview-canvas"),this.btnFinishDesign=document.getElementById("btn-finish-design"),this.btnCancelDesign=document.getElementById("btn-cancel-design"),this.btnAddCustomGem.addEventListener("click",()=>this.handleAddCustomGem()),this.btnStartCustomLevel.addEventListener("click",()=>this.handleStartCustomLevel()),this.btnFinishDesign.addEventListener("click",()=>this.handleFinishDesign()),this.btnCancelDesign.addEventListener("click",()=>this.closeDesigner())}setup(){const t=a.customGemSet.length>0&&Object.keys(a.customGemDefinitions).length>0?a.customGemSet.map(i=>a.customGemDefinitions[i]).filter(Boolean):[];this.state={selectedColorKey:null,selectedShapeKey:null,gems:t,designerGridState:Array.from({length:4},()=>Array(4).fill(l.EMPTY)),customDesignedShape:null},this.populateSelectors(),this.updateCustomGemList(),this.validateCustomSet()}populateSelectors(){this.customColorSelector.innerHTML="",Object.entries(B).forEach(([e,t])=>{const i=document.createElement("div");i.className="color-choice",i.dataset.colorKey=e,i.style.backgroundColor=t.color,this.renderer.isTransparentColor(t.color)&&(i.style.border=`2px solid ${p.TRANSPARENT}`,i.style.backgroundColor="rgba(164, 212, 228, 0.3)"),i.title=m(t.nameKey),i.onclick=()=>{this.state.selectedColorKey=e,this.customColorSelector.querySelectorAll(".color-choice").forEach(s=>s.classList.remove("selected")),i.classList.add("selected")},this.customColorSelector.appendChild(i)}),this.customShapeSelector.innerHTML="",Object.entries(H).forEach(([e,t])=>{const i=document.createElement("div");i.className="shape-choice",i.dataset.shapeKey=e,i.title=m(t.nameKey);const s=document.createElement("canvas");i.appendChild(s),e==="SHAPE_CUSTOM_DESIGN"?i.onclick=()=>this.openDesigner():i.onclick=()=>{this.state.selectedShapeKey=e,this.customShapeSelector.querySelectorAll(".shape-choice").forEach(n=>n.classList.remove("selected")),i.classList.add("selected")},this.customShapeSelector.appendChild(i),setTimeout(()=>this.renderer.drawToolbarGem(s,{...t,color:p.BLAU}),0)})}openDesigner(){this.designerModal.classList.remove("hidden"),this.designerGrid.innerHTML="";for(let e=0;e<4;e++)for(let t=0;t<4;t++){const i=document.createElement("div");i.className="designer-cell",i.dataset.row=e.toString(),i.dataset.col=t.toString();const s=document.createElement("canvas");i.appendChild(s),i.onclick=()=>this.handleDesignerCellClick(e,t),this.designerGrid.appendChild(i)}this.updateDesignerGridCanvases(),this.updateDesignerPreview()}closeDesigner(){this.designerModal.classList.add("hidden")}handleDesignerCellClick(e,t){const s=(this.state.designerGridState[e][t]+1)%6;this.state.designerGridState[e][t]=s;const n=this.designerGrid.querySelector(`[data-row='${e}'][data-col='${t}'] canvas`);n&&this.drawDesignerCell(n,s),this.updateDesignerPreview()}updateDesignerGridCanvases(){for(let e=0;e<4;e++)for(let t=0;t<4;t++){const i=this.designerGrid.querySelector(`[data-row='${e}'][data-col='${t}'] canvas`);i&&this.drawDesignerCell(i,this.state.designerGridState[e][t])}}drawDesignerCell(e,t){const i=e.getContext("2d");if(!i)return;const s=window.devicePixelRatio||1,n=e.getBoundingClientRect();if(n.width!==0&&(e.width=n.width*s,e.height=n.height*s,i.scale(s,s),i.clearRect(0,0,n.width,n.height),t!==l.EMPTY)){i.fillStyle=p.BLAU,i.strokeStyle="rgba(0,0,0,0.4)",i.lineWidth=1,i.beginPath();const r=new Path2D,o=n.width,d=n.height,g=0,c=0;switch(t){case l.BLOCK:r.rect(g,c,o,d);break;case l.TRIANGLE_TL:r.moveTo(g,c),r.lineTo(g+o,c),r.lineTo(g,c+d),r.closePath();break;case l.TRIANGLE_TR:r.moveTo(g,c),r.lineTo(g+o,c),r.lineTo(g+o,c+d),r.closePath();break;case l.TRIANGLE_BR:r.moveTo(g+o,c),r.lineTo(g+o,c+d),r.lineTo(g,c+d),r.closePath();break;case l.TRIANGLE_BL:r.moveTo(g,c),r.lineTo(g,c+d),r.lineTo(g+o,c+d),r.closePath();break}i.fill(r),i.stroke(r)}}cropPattern(e){let t=e.length,i=-1,s=e[0].length,n=-1;for(let r=0;r<e.length;r++)for(let o=0;o<e[r].length;o++)e[r][o]!==l.EMPTY&&(t=Math.min(t,r),i=Math.max(i,r),s=Math.min(s,o),n=Math.max(n,o));return i===-1?[[l.EMPTY]]:e.slice(t,i+1).map(r=>r.slice(s,n+1))}updateDesignerPreview(){const e=this.cropPattern(this.state.designerGridState);this.renderer.drawToolbarGem(this.designerPreviewCanvas,{gridPattern:e,color:p.BLAU})}handleFinishDesign(){const e=this.cropPattern(this.state.designerGridState);if(e.length===1&&e[0].length===1&&e[0][0]===l.EMPTY)return;this.state.customDesignedShape={gridPattern:e},this.state.selectedShapeKey="SHAPE_CUSTOM_DESIGN",this.customShapeSelector.querySelectorAll(".shape-choice").forEach(i=>i.classList.remove("selected"));const t=this.customShapeSelector.querySelector("[data-shape-key='SHAPE_CUSTOM_DESIGN']");if(t){t.classList.add("selected");const i=t.querySelector("canvas");i&&this.renderer.drawToolbarGem(i,{gridPattern:e,color:p.BLAU})}this.closeDesigner()}handleAddCustomGem(){const{selectedColorKey:e,selectedShapeKey:t}=this.state;if(!e||!t){alert(m("customCreator.alert.selectColorAndShape"));return}const i=t==="SHAPE_CUSTOM_DESIGN"&&this.state.customDesignedShape?{...this.state.customDesignedShape,nameKey:H.SHAPE_CUSTOM_DESIGN.nameKey}:H[t];if(!i||!i.gridPattern)return;const s=B[e],n=e==="SCHWARZ"?i.gridPattern.map(d=>d.map(g=>g!==l.EMPTY?l.ABSORB:l.EMPTY)):i.gridPattern,r=`CUSTOM_${e}_${t}_${Date.now()}`,o={...s,...i,gridPattern:n,name:r,originalColorKey:e};this.state.gems.push(o),this.updateCustomGemList(),this.validateCustomSet()}updateCustomGemList(){this.customGemList.innerHTML="",this.state.gems.forEach((e,t)=>{const i=document.createElement("div");i.className="custom-gem-item";const s=document.createElement("canvas");i.appendChild(s);const n=document.createElement("button");n.className="delete-gem-btn",n.innerHTML="&times;",n.title=m("buttons.remove"),n.onclick=()=>{this.state.gems.splice(t,1),this.updateCustomGemList(),this.validateCustomSet()},i.appendChild(n),this.customGemList.appendChild(i),setTimeout(()=>this.renderer.drawToolbarGem(s,e),0)})}validateCustomSet(){const e=this.state.gems.reduce((s,n)=>(s[n.originalColorKey]=(s[n.originalColorKey]||0)+1,s),{}),i=[{condition:(e.ROT??0)===1,errorKey:"validation.exactOneRed"},{condition:(e.GELB??0)===1,errorKey:"validation.exactOneYellow"},{condition:(e.BLAU??0)===1,errorKey:"validation.exactOneBlue"},{condition:(e.WEISS??0)>=1,errorKey:"validation.atLeastOneWhite"},{condition:(e.WEISS??0)<=2,errorKey:"validation.maxTwoWhite"},{condition:(e.TRANSPARENT??0)<=2,errorKey:"validation.maxTwoTransparent"},{condition:(e.SCHWARZ??0)<=1,errorKey:"validation.maxOneBlack"}].find(s=>!s.condition);i?(this.customValidationFeedback.innerHTML=`<div class="invalid">❌ ${m(i.errorKey)}</div>`,this.btnStartCustomLevel.disabled=!0):(this.customValidationFeedback.innerHTML=`<div class="valid">✅ ${m("validation.levelIsValid")}</div>`,this.btnStartCustomLevel.disabled=this.state.gems.length===0)}handleStartCustomLevel(){this.btnStartCustomLevel.disabled||(a.customGemSet=this.state.gems.map(e=>e.name),a.customGemDefinitions=Object.fromEntries(this.state.gems.map(e=>[e.name,e])),this.game.start(T.CUSTOM))}}class ue{constructor(){this.screens={},this.cacheDOMElements(),this.bindGlobalEvents(),ae(()=>this.updateUIText())}bindGame(e){this.game=e,this.renderer=new ce(this.game,this),this.inputHandler=new he(this.game,this),this.customCreatorUI=new ge(this.game,this.renderer),this.renderer.connectInputHandler(this.inputHandler),this.inputHandler.connectRenderer(this.renderer),this.updateUIText()}cacheDOMElements(){this.screens.main=document.getElementById("screen-main"),this.screens.difficulty=document.getElementById("screen-difficulty"),this.screens["custom-creator"]=document.getElementById("screen-custom-creator"),this.screens.game=document.getElementById("screen-game"),this.screens.end=document.getElementById("screen-end"),this.langSwitcher=document.getElementById("lang-switcher"),this.btnStartGame=document.getElementById("btn-start-game"),this.introRulesEl=document.getElementById("intro-rules"),this.difficultyOptions=document.getElementById("difficulty-options"),this.btnBackToMain1=document.getElementById("btn-back-to-main-1"),this.btnBackToDifficulty=document.getElementById("btn-back-to-difficulty"),this.gemToolbar=document.getElementById("gem-toolbar"),this.logList=document.getElementById("log-list"),this.actionsTabBtn=document.getElementById("actions-tab-btn"),this.logTabBtn=document.getElementById("log-tab-btn"),this.rulesTabBtn=document.getElementById("rules-tab-btn"),this.rulesPanel=document.getElementById("rules-panel"),this.checkSolutionBtn=document.getElementById("check-solution-btn"),this.giveUpBtn=document.getElementById("give-up-btn"),this.previewToggle=document.getElementById("preview-toggle"),this.modeWaveBtn=document.getElementById("mode-wave-btn"),this.modeQueryBtn=document.getElementById("mode-query-btn"),this.endTitle=document.getElementById("end-title"),this.endRating=document.getElementById("end-rating"),this.endStats=document.getElementById("end-stats"),this.endRetryMessage=document.getElementById("end-retry-message"),this.endSolutionLabel=document.getElementById("end-solution-label"),this.endRatingLegend=document.getElementById("end-rating-legend"),this.btnNewLevel=document.getElementById("btn-new-level"),this.btnMenu=document.getElementById("btn-menu")}bindGlobalEvents(){this.langSwitcher.addEventListener("click",()=>{const e=de()==="de"?"en":"de";le(e)}),this.btnStartGame.addEventListener("click",()=>this.game.showDifficultySelect()),this.btnNewLevel.addEventListener("click",()=>{a.difficulty&&this.game.start(a.difficulty)}),this.btnMenu.addEventListener("click",()=>this.game.showMainMenu()),this.btnBackToMain1.addEventListener("click",()=>this.game.showMainMenu()),this.btnBackToDifficulty.addEventListener("click",()=>this.game.showDifficultySelect()),this.actionsTabBtn.addEventListener("click",()=>this.switchTab("actions")),this.logTabBtn.addEventListener("click",()=>this.switchTab("log")),this.rulesTabBtn.addEventListener("click",()=>this.switchTab("rules")),this.checkSolutionBtn.addEventListener("click",()=>this.game.checkSolution()),this.giveUpBtn.addEventListener("click",()=>this.game.giveUp()),this.previewToggle.addEventListener("change",()=>this.game.togglePlayerPathPreview()),this.modeWaveBtn.addEventListener("click",()=>this.game.setInteractionMode(E.WAVE)),this.modeQueryBtn.addEventListener("click",()=>this.game.setInteractionMode(E.QUERY)),document.addEventListener("keydown",e=>{if(e.key==="n"&&(a.status===v.PLAYING||a.status===v.GAME_OVER)){a.difficulty&&this.game.start(a.difficulty);return}if(e.key==="Escape"&&(a.status===v.PLAYING||a.status===v.GAME_OVER||a.status===v.CUSTOM_CREATOR||a.status===v.DIFFICULTY_SELECT)){this.game.showMainMenu();return}a.status===v.PLAYING&&(e.key==="d"&&this.game.toggleDebugMode(),e.key==="f"&&this.game.togglePlayerPathPreview())}),this.logList.addEventListener("animationend",()=>{this.logList.classList.remove("flash")})}updateUIText(){this.langSwitcher.innerHTML=m("lang.flag"),this.langSwitcher.title=m("lang.switch"),document.querySelectorAll("[data-i18n-key]").forEach(e=>{const t=e.dataset.i18nKey,i=e.dataset.i18nAttr||"textContent";e[i]=m(t)}),a.status===v.MAIN_MENU&&this._populateIntroRules(),a.status===v.DIFFICULTY_SELECT&&this.populateDifficultyOptions(),a.status===v.CUSTOM_CREATOR&&this.customCreatorUI.setup(),a.status===v.PLAYING&&(this._populateRulesPanel(),this.updateToolbar(),this.updateLogTabCounter(),this.redrawAll())}setupGameUI(){this._populateRulesPanel(),this.switchTab("actions"),this.updateInteractionModeUI(a.interactionMode),this.renderer.setupEmitters(),this.updateToolbar(),this.logList.innerHTML="",this.updateLogTabCounter(),this.renderer.clearPath(),this.game.updateSolutionButtonState(),this.updatePreviewToggleState(a.showPlayerPathPreview),this.renderer.handleResize()}showScreen(e){if(e==="difficulty"&&this.populateDifficultyOptions(),e==="custom-creator"&&this.customCreatorUI.setup(),Object.values(this.screens).forEach(t=>t.classList.add("hidden")),this.screens[e].classList.remove("hidden"),e==="game"){const t=document.getElementById("gem-canvas");t==null||t.focus()}}populateDifficultyOptions(){this.difficultyOptions.innerHTML="",[T.TRAINING,T.NORMAL,T.MEDIUM,T.HARD].forEach(t=>{const i=document.createElement("button");i.innerHTML=`${m("difficulty."+t)}<div class="difficulty-desc">${m("difficulty."+t+"_desc")}</div>`,i.onclick=()=>this.game.start(t),this.difficultyOptions.appendChild(i)});const e=document.createElement("button");e.innerHTML=`${m("difficulty.CUSTOM")}<div class="difficulty-desc">${m("difficulty.CUSTOM_desc")}</div>`,e.onclick=()=>this.game.showCustomCreator(),this.difficultyOptions.appendChild(e)}updateInteractionModeUI(e){e===E.WAVE?(this.modeWaveBtn.classList.add("active"),this.modeQueryBtn.classList.remove("active")):(this.modeWaveBtn.classList.remove("active"),this.modeQueryBtn.classList.add("active"))}getGemDefinition(e){return a.difficulty===T.CUSTOM?a.customGemDefinitions[e]:A[e]}getGemTooltip(e){const t=this.getGemDefinition(e);if(!t)return"";if(t.special==="absorbs")return m("tooltips.absorbs");if(t.baseGems.length===0)return m("tooltips.reflectsOnly");const i=t.baseGems[0],s=this.renderer.getBaseColorNameKey(i),n=m(s).toLowerCase();return m("tooltips.addsColor",{color:n})}updateToolbar(){if(this.gemToolbar.innerHTML="",!a.difficulty)return;const t=a.difficulty===T.CUSTOM?a.customGemSet:x[a.difficulty];if(!t)return;const i=new Set(a.playerGems.map(s=>s.name));t.forEach(s=>{const n=this.getGemDefinition(s);if(!n)return;const r=document.createElement("div");r.className="toolbar-gem",i.has(s)&&r.classList.add("placed"),r.dataset.gemName=s,r.title=this.getGemTooltip(s);const o=document.createElement("canvas");o.className="toolbar-gem-canvas",r.appendChild(o),this.gemToolbar.appendChild(r),setTimeout(()=>this.renderer.drawToolbarGem(o,n),0)})}handleSelectionChange(){this.redrawAll(),this.updateLogHighlight()}redrawAll(){this.renderer&&this.renderer.redrawAll()}switchTab(e){document.querySelectorAll(".tab-btn, .tab-panel").forEach(t=>t.classList.remove("active")),document.getElementById(`${e}-tab-btn`).classList.add("active"),document.getElementById(`${e}-panel`).classList.add("active")}addLogEntry(e){const t=document.createElement("li");if(t.dataset.logId=e.id,e.type===E.WAVE){this.renderer.updateEmitterFromLog(e);const{result:i}=e,s=`${e.id} ➔ ${i.exitId}`,n=this.renderer.getPathColor(i),r=this.getPathColorName(i);t.innerHTML=`<span>${s}</span><div class="log-entry-result"><span class="log-color-name">${r}</span><div class="log-color-box" style="background-color: ${n};"></div></div>`}else{const{coords:i,result:s}=e,n=s.colorHex||"transparent",r=s.colorNameKey?m(s.colorNameKey):m("log.empty"),o=m("log.query",{x:i.x+1,y:i.y+1}),d=`background-color: ${n};`+(this.renderer.isTransparentColor(n)?"border-color: #a4d4e4;":"");t.innerHTML=`<span>${o}</span><div class="log-entry-result"><span class="log-color-name">${r}</span><div class="log-color-box" style="${d}"></div></div>`}this.logList.prepend(t),this.updateLogTabCounter()}updateLogTabCounter(){const e=a.log.length,t=m("gameScreen.tabs.logbook");e>0?this.logTabBtn.textContent=`${t} (${e})`:this.logTabBtn.textContent=t}areGemSetsIdentical(e,t){if(e.length!==t.length)return!1;const i=r=>`${r.name},${r.x},${r.y},${JSON.stringify(r.gridPattern)}`,s=new Set(e.map(i)),n=new Set(t.map(i));if(s.size!==n.size)return!1;for(const r of s)if(!n.has(r))return!1;return!0}showEndScreen(e,t,i,s){this.endTitle.classList.remove("win","loss"),this.endRetryMessage.textContent="",this.endRating.textContent="",this.endRatingLegend.innerHTML="",this.endRating.style.display="none",this.endRatingLegend.style.display="none";let n=[];if(e){this.endTitle.textContent=m("endScreen.winTitle"),this.endTitle.classList.add("win"),this.endStats.textContent=m("endScreen.stats",{count:t}),this.areGemSetsIdentical(i,s)?(this.endSolutionLabel.textContent=m("endScreen.solutionLabel.correct"),n=[]):(this.endSolutionLabel.textContent=m("endScreen.solutionLabel.alternative"),n=s);const o=a.difficulty;if(o&&$[o]){const d=$[o];let g="";for(const c of d)if(t<=c.limit){g=m(c.textKey);break}if(g){this.endRating.textContent=g,this.endRating.style.display="block",this.endRatingLegend.style.display="block";let c=`<h5>${m("endScreen.ratingLegendTitle",{difficulty:m("difficulty."+o)})}</h5><ul>`,f=0;d.forEach(u=>{const y=f===0?"endScreen.ratingLegend.upTo":u.limit===1/0?"endScreen.ratingLegend.moreThan":"endScreen.ratingLegend.range",I=m(y,{start:f+1,end:u.limit});c+=`<li><strong>${m(u.textKey)}:</strong> ${I}</li>`,f=u.limit}),c+="</ul>",this.endRatingLegend.innerHTML=c}}}else this.endTitle.textContent=m("endScreen.lossTitle"),this.endTitle.classList.add("loss"),this.endStats.textContent=m("endScreen.stats",{count:t}),this.endRetryMessage.textContent=m("endScreen.retry"),this.endSolutionLabel.textContent=m("endScreen.solutionLabel.yourInput"),n=s;this.showScreen("end"),requestAnimationFrame(()=>{this.renderer.drawEndScreenSolution(i,n)})}updatePreviewToggleState(e){this.previewToggle.checked=e}updateLogHighlight(){this.logList.querySelectorAll("li").forEach(e=>{const t=e;t.dataset.logId===a.selectedLogEntryId?(t.classList.add("selected"),t.scrollIntoView({behavior:"smooth",block:"nearest"})):t.classList.remove("selected")})}getPathColorName(e){if(e.absorbed)return m("log.absorbed");if(e.colors.length===0)return m("log.noColor");const t=[...e.colors].sort().join(","),i=Y[t];return m(i||"log.unknownMix")}createColorMixEntry(e){const t=z[e],i=e.split(","),s=document.createElement("div");s.className="color-mix-entry";let n="";i.forEach((o,d)=>{const g=this.renderer.getBaseColorHex(o);n+=`<div class="color-mix-box" style="background-color: ${g}"></div>`,d<i.length-1&&(n+="<span>+</span>")});const r=m(Y[e]||"log.unknownMix");return n+=`<span>=</span> <div class="color-mix-box" style="background-color: ${t}"></div> <span>${r}</span>`,s.innerHTML=n,s}populateColorMixColumns(e){if(!e||!this.renderer)return;e.innerHTML="";const t=document.createElement("div");t.className="color-mix-column";const i=document.createElement("div");i.className="color-mix-column";const s=["BLAU,ROT","BLAU,GELB","GELB,ROT","BLAU,ROT,WEISS","BLAU,GELB,WEISS","BLAU,GELB,ROT,WEISS"],n=["BLAU,WEISS","ROT,WEISS","GELB,WEISS","BLAU,GELB,ROT","GELB,ROT,WEISS"];s.forEach(r=>t.appendChild(this.createColorMixEntry(r))),n.forEach(r=>i.appendChild(this.createColorMixEntry(r))),e.appendChild(t),e.appendChild(i)}_populateIntroRules(){this.introRulesEl.innerHTML=`
            <h3 data-i18n-key="rules.title"></h3>
            <p><strong data-i18n-key="rules.objectiveTitle"></strong> <span data-i18n-key="rules.objective"></span></p>
            <ul>
                <li>
                    <span data-i18n-key="rules.item1"></span>
                    <ul>
                        <li data-i18n-key="rules.item2"></li>
                        <li data-i18n-key="rules.item3"></li>
                    </ul>
                </li>
                <li data-i18n-key="rules.item4"></li>
                <li data-i18n-key="rules.item5"></li>
                <li data-i18n-key="rules.item6"></li>
                <li data-i18n-key="rules.item7"></li>
            </ul>
            <h4 data-i18n-key="rules.colorMixingTitle"></h4>
            <p data-i18n-key="rules.colorMixingDesc"></p>
            <div class="color-mix-container"></div>
        `,this.introRulesEl.querySelectorAll("[data-i18n-key]").forEach(t=>{const i=t.dataset.i18nKey;i.startsWith("rules.item")?t.innerHTML=m(i):t.textContent=m(i)});const e=this.introRulesEl.querySelector(".color-mix-container");this.populateColorMixColumns(e)}_populateRulesPanel(){this.rulesPanel.innerHTML=`
            <h4 data-i18n-key="rules.basicRules"></h4>
            <ul>
                <li data-i18n-key="rules.panel.item1"></li>
                <li data-i18n-key="rules.panel.item2"></li>
                <li data-i18n-key="rules.panel.item3"></li>
                <li data-i18n-key="rules.panel.item4"></li>
                <li data-i18n-key="rules.panel.item5"></li>
            </ul>
            <h4 data-i18n-key="rules.colorMixingTitle"></h4>
            <p data-i18n-key="rules.colorMixingDesc"></p>
            <div class="color-mix-container"></div>
        `,this.rulesPanel.querySelectorAll("[data-i18n-key]").forEach(t=>{const i=t.dataset.i18nKey;i.startsWith("rules.panel.item")?t.innerHTML=m(i):t.textContent=m(i)});const e=this.rulesPanel.querySelector(".color-mix-container");this.populateColorMixColumns(e)}}document.addEventListener("DOMContentLoaded",()=>{const h=new ue,e=new ne(h);window.game=e});
