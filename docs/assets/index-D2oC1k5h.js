(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const r of s.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&n(r)}).observe(document,{childList:!0,subtree:!0});function t(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(i){if(i.ep)return;i.ep=!0;const s=t(i);fetch(i.href,s)}})();const L=8,y=10;var d=(g=>(g[g.EMPTY=0]="EMPTY",g[g.BLOCK=1]="BLOCK",g[g.TRIANGLE_TL=2]="TRIANGLE_TL",g[g.TRIANGLE_TR=3]="TRIANGLE_TR",g[g.TRIANGLE_BR=4]="TRIANGLE_BR",g[g.TRIANGLE_BL=5]="TRIANGLE_BL",g[g.ABSORB=6]="ABSORB",g))(d||{});const A={TRAINING:"Training",NORMAL:"Normal",MITTEL:"Mittel",SCHWER:"Schwer"},v={GELB:"#f1c40f",ROT:"#e74c3c",BLAU:"#3498db",WEISS:"#ecf0f1",TRANSPARENT:"#95a5a6",LILA:"#9b59b6",HIMMELBLAU:"#5dade2",GRUEN:"#2ecc71",PINK:"#ff8a80",ORANGE:"#e67e22",ZITRONE:"#ffff8d",HELLLILA:"#ba68c8",SCHWARZ_GEM:"#1d1d1d",SCHWARZ_MIX:"#34495e",HELLGRUEN:"#81c784",HELLORANGE:"#ffb74d",GRAU:"#9e9e9e",ABSORBIERT:"#17202a",correct:"#4caf50",INVALID_GEM:"#e74c3c"},H={BLAU:v.BLAU,GELB:v.GELB,ROT:v.ROT,WEISS:v.WEISS,"BLAU,ROT":v.LILA,"BLAU,WEISS":v.HIMMELBLAU,"BLAU,GELB":v.GRUEN,"ROT,WEISS":v.PINK,"GELB,ROT":v.ORANGE,"GELB,WEISS":v.ZITRONE,"BLAU,ROT,WEISS":v.HELLLILA,"BLAU,GELB,ROT":v.SCHWARZ_MIX,"BLAU,GELB,WEISS":v.HELLGRUEN,"GELB,ROT,WEISS":v.HELLORANGE,"BLAU,GELB,ROT,WEISS":v.GRAU},W={BLAU:"Blau",GELB:"Gelb",ROT:"Rot",WEISS:"Weiss","BLAU,ROT":"Lila","BLAU,WEISS":"Himmelblau","BLAU,GELB":"Grün","ROT,WEISS":"Hellrot","GELB,ROT":"Orange","GELB,WEISS":"Hellgelb","BLAU,ROT,WEISS":"Hell-Lila","BLAU,GELB,ROT":"Dunkelgrau","BLAU,GELB,WEISS":"Hellgrün","GELB,ROT,WEISS":"Hell-Orange","BLAU,GELB,ROT,WEISS":"Grau"},b={GELB:{name:"GELB",color:v.GELB,baseGems:["GELB"],gridPattern:[[d.TRIANGLE_BL,d.EMPTY],[d.BLOCK,d.TRIANGLE_BL]]},ROT:{name:"ROT",color:v.ROT,baseGems:["ROT"],gridPattern:[[d.TRIANGLE_BR,d.BLOCK,d.TRIANGLE_TL]]},BLAU:{name:"BLAU",color:v.BLAU,baseGems:["BLAU"],gridPattern:[[d.EMPTY,d.TRIANGLE_BR,d.TRIANGLE_BL,d.EMPTY],[d.TRIANGLE_BR,d.BLOCK,d.BLOCK,d.TRIANGLE_BL]]},WEISS_RAUTE:{name:"WEISS_RAUTE",color:v.WEISS,baseGems:["WEISS"],gridPattern:[[d.TRIANGLE_BR,d.TRIANGLE_BL],[d.TRIANGLE_TR,d.TRIANGLE_TL]]},WEISS_DREIECK:{name:"WEISS_DREIECK",color:v.WEISS,baseGems:["WEISS"],gridPattern:[[d.EMPTY,d.TRIANGLE_BR,d.TRIANGLE_BL,d.EMPTY],[d.TRIANGLE_BR,d.BLOCK,d.BLOCK,d.TRIANGLE_BL]]},TRANSPARENT:{name:"TRANSPARENT",color:v.TRANSPARENT,baseGems:[],gridPattern:[[d.TRIANGLE_BR,d.TRIANGLE_BL]]},SCHWARZ:{name:"SCHWARZ",color:v.SCHWARZ_GEM,baseGems:[],special:"absorbs",gridPattern:[[d.ABSORB,d.ABSORB]]}},O={[A.TRAINING]:["GELB","ROT","BLAU","WEISS_RAUTE","WEISS_DREIECK"],[A.NORMAL]:["GELB","ROT","BLAU","WEISS_RAUTE","WEISS_DREIECK"],[A.MITTEL]:["GELB","ROT","BLAU","WEISS_RAUTE","WEISS_DREIECK","TRANSPARENT"],[A.SCHWER]:["GELB","ROT","BLAU","WEISS_RAUTE","WEISS_DREIECK","TRANSPARENT","SCHWARZ"]};var G=(g=>(g[g.MAIN_MENU=0]="MAIN_MENU",g[g.DIFFICULTY_SELECT=1]="DIFFICULTY_SELECT",g[g.PLAYING=2]="PLAYING",g[g.GAME_OVER=3]="GAME_OVER",g))(G||{});const o={status:0,difficulty:null,secretGems:[],playerGems:[],log:[],waveCount:0,debugMode:!1,showPlayerPathPreview:!1,selectedLogEntryWaveId:null,previewSourceEmitterId:null,activePlayerPath:null,activePlayerResult:null};var w=(g=>(g[g.UP=0]="UP",g[g.RIGHT=1]="RIGHT",g[g.DOWN=2]="DOWN",g[g.LEFT=3]="LEFT",g))(w||{});const K={[d.BLOCK]:{0:2,1:3,2:0,3:1},[d.TRIANGLE_TR]:{0:3,1:2,2:0,3:1},[d.TRIANGLE_BL]:{0:2,1:3,2:1,3:0},[d.TRIANGLE_TL]:{0:1,1:3,2:0,3:2},[d.TRIANGLE_BR]:{0:2,1:0,2:3,3:1}},V={[d.EMPTY]:d.EMPTY,[d.BLOCK]:d.BLOCK,[d.ABSORB]:d.ABSORB,[d.TRIANGLE_TL]:d.TRIANGLE_TR,[d.TRIANGLE_TR]:d.TRIANGLE_BR,[d.TRIANGLE_BR]:d.TRIANGLE_BL,[d.TRIANGLE_BL]:d.TRIANGLE_TL};function X(g,e){var t;return g===d.EMPTY?null:((t=K[g])==null?void 0:t[e])??null}function D(g){const e=g.length,t=g[0].length,n=Array.from({length:t},()=>Array(e).fill(d.EMPTY));for(let i=0;i<e;i++)for(let s=0;s<t;s++)n[s][e-1-i]=V[g[i][s]];return n}const z=100;function Z(g){const e=parseInt(g.substring(1))-1;switch(g[0]){case"T":return{pos:{x:e,y:-1},dir:w.DOWN};case"B":return{pos:{x:e,y},dir:w.UP};case"L":return{pos:{x:-1,y:e},dir:w.RIGHT};case"R":return{pos:{x:L,y:e},dir:w.LEFT};default:return null}}function q(g){return g.y<0?`T${g.x+1}`:g.y>=y?`B${g.x+1}`:g.x<0?`L${g.y+1}`:g.x>=L?`R${g.y+1}`:"Error"}function j(g,e){switch(e){case w.UP:g.y--;break;case w.DOWN:g.y++;break;case w.LEFT:g.x--;break;case w.RIGHT:g.x++;break}}function N(g,e,t){const n=Z(t);if(!n)return{exitId:"Error",colors:[],path:[],absorbed:!1};const i={...n.pos};let s=n.dir;const r=[],l=new Set,a=new Set;for(let h=0;h<z;h++){if(j(i,s),r.length===0&&r.push({x:n.pos.x+(n.dir===w.RIGHT?1:n.dir===w.LEFT?0:.5),y:n.pos.y+(n.dir===w.DOWN?1:n.dir===w.UP?0:.5)}),i.x<0||i.x>=L||i.y<0||i.y>=y)return r.push({x:i.x+(s===w.LEFT?1:s===w.RIGHT?0:.5),y:i.y+(s===w.UP?1:s===w.DOWN?0:.5)}),{exitId:q(i),colors:[...l],path:r,absorbed:!1};const c=g[i.y][i.x];if(c===d.EMPTY)continue;r.push({x:i.x+.5,y:i.y+.5});const u=`${i.y},${i.x}`,f=e.get(u);if(f&&!a.has(f.id)){a.add(f.id);const p=b[f.name];p.baseGems&&p.baseGems.forEach(E=>l.add(E))}if(c===d.ABSORB)return{exitId:"Absorbed",colors:[],path:r,absorbed:!0};const m=X(c,s);m!==null&&(s=m)}return{exitId:"Loop?",colors:[...l],path:r,absorbed:!1}}const U={[d.EMPTY]:[!1,!1,!1,!1],[d.BLOCK]:[!0,!0,!0,!0],[d.ABSORB]:[!0,!0,!0,!0],[d.TRIANGLE_TL]:[!0,!1,!1,!0],[d.TRIANGLE_TR]:[!0,!0,!1,!1],[d.TRIANGLE_BR]:[!1,!0,!0,!1],[d.TRIANGLE_BL]:[!1,!1,!0,!0]};class J{constructor(e){this.secretGrid=[],this.secretGemMap=new Map,this.ui=e,this.ui.bindGame(this),this.showMainMenu()}_initSecretGrid(){this.secretGrid=Array.from({length:y},()=>Array(L).fill(d.EMPTY)),this.secretGemMap.clear()}showMainMenu(){o.status=G.MAIN_MENU,this.ui.showScreen("main")}showDifficultySelect(){o.status=G.DIFFICULTY_SELECT,this.ui.showScreen("difficulty")}showEndScreen(e){o.status=G.GAME_OVER,this.ui.showEndScreen(e,o.waveCount,o.secretGems,o.playerGems)}start(e){if(o.difficulty=e,o.status=G.PLAYING,this._initSecretGrid(),o.secretGems=this._placeSecretGems(),o.secretGems.length===0){this.showDifficultySelect();return}o.playerGems=[],o.log=[],o.waveCount=0,o.debugMode=!1,o.showPlayerPathPreview=!1,o.selectedLogEntryWaveId=null,o.previewSourceEmitterId=null,o.activePlayerPath=null,o.activePlayerResult=null,this.ui.setupGameUI(),this.ui.showScreen("game"),this.ui.redrawAll()}giveUp(){this.showEndScreen(!1)}toggleDebugMode(){o.debugMode=!o.debugMode,this.ui.redrawAll()}togglePlayerPathPreview(){o.showPlayerPathPreview=!o.showPlayerPathPreview,this.ui.updatePreviewToggleState(o.showPlayerPathPreview),this.ui.redrawAll()}sendWave(e){if(o.status!==G.PLAYING)return;o.waveCount++;const t=N(this.secretGrid,this.secretGemMap,e),n=Array.from({length:y},()=>Array(L).fill(d.EMPTY)),i=new Map;o.playerGems.forEach(l=>this._paintGemOnGrid(l,n,i));const s=N(n,i,e),r={waveId:e,result:t,path:t.path,playerPath:s.path,playerResult:s};o.log.push(r),this.ui.addLogEntry(r,e),this.setSelectedWave(e,e)}checkSolution(){const e=Array.from({length:y},()=>Array(L).fill(d.EMPTY)),t=new Map;o.playerGems.forEach(i=>this._paintGemOnGrid(i,e,t));let n=!0;for(let i=0;i<y;i++){for(let s=0;s<L;s++)if(e[i][s]!==this.secretGrid[i][s]){n=!1;break}if(!n)break}this.showEndScreen(n)}addPlayerGem(e,t,n){if(o.playerGems.some(h=>h.name===e))return;const s=b[e];if(!s)return;const r={id:`player_${Date.now()}`,name:e,x:t,y:n,rotation:0,gridPattern:s.gridPattern,isValid:!1},l=r.gridPattern.length,a=r.gridPattern[0].length;r.x=Math.max(0,Math.min(t,L-a)),r.y=Math.max(0,Math.min(n,y-l)),o.playerGems.push(r),this._revalidateAllPlayerGems(),this._updateActivePlayerPathPreview(),this.updateSolutionButtonState(),this.ui.updateToolbar(),this.ui.redrawAll()}movePlayerGem(e,t,n){const i=o.playerGems.find(s=>s.id===e);if(i){const s=i.gridPattern.length,r=i.gridPattern[0].length;i.x=Math.max(0,Math.min(t,L-r)),i.y=Math.max(0,Math.min(n,y-s)),this._revalidateAllPlayerGems(),this._updateActivePlayerPathPreview(),this.updateSolutionButtonState(),this.ui.redrawAll()}}removePlayerGem(e){const t=o.playerGems.findIndex(n=>n.id===e);t>-1&&(o.playerGems.splice(t,1),this._revalidateAllPlayerGems(),this._updateActivePlayerPathPreview(),this.updateSolutionButtonState(),this.ui.updateToolbar(),this.ui.redrawAll())}rotatePlayerGem(e){const t=o.playerGems.find(n=>n.id===e);if(t){const n=t.gridPattern[0].length,i=t.gridPattern.length,s=t.x+n/2,r=t.y+i/2;t.rotation=(t.rotation+90)%360,t.gridPattern=D(t.gridPattern);const l=t.gridPattern[0].length,a=t.gridPattern.length;t.x=Math.round(s-l/2),t.y=Math.round(r-a/2),t.x=Math.max(0,Math.min(t.x,L-l)),t.y=Math.max(0,Math.min(t.y,y-a)),this._revalidateAllPlayerGems(),this._updateActivePlayerPathPreview(),this.updateSolutionButtonState(),this.ui.redrawAll()}}canPlaceGem(e){return this._isPlacementValid(e,o.playerGems)}setSelectedWave(e,t){o.selectedLogEntryWaveId=e,o.previewSourceEmitterId=t,this._updateActivePlayerPathPreview(),this.ui.handleSelectionChange()}_updateActivePlayerPathPreview(){if(!o.previewSourceEmitterId){o.activePlayerPath=null,o.activePlayerResult=null;return}const e=Array.from({length:y},()=>Array(L).fill(d.EMPTY)),t=new Map;o.playerGems.forEach(i=>this._paintGemOnGrid(i,e,t));const n=N(e,t,o.previewSourceEmitterId);o.activePlayerPath=n.path,o.activePlayerResult=n}_revalidateAllPlayerGems(){o.playerGems.forEach(e=>{e.isValid=this._isPlacementValid(e,o.playerGems)})}_doGemsCollide(e,t){const n=e.gridPattern[0].length,i=e.gridPattern.length,s=t.gridPattern[0].length,r=t.gridPattern.length;if(e.x+n<t.x||t.x+s<e.x||e.y+i<t.y||t.y+r<e.y)return!1;for(let l=0;l<i;l++)for(let a=0;a<n;a++){const h=e.gridPattern[l][a];if(h===d.EMPTY)continue;const c=e.x+a,u=e.y+l;for(let f=0;f<r;f++)for(let m=0;m<s;m++){const p=t.gridPattern[f][m];if(p===d.EMPTY)continue;const E=t.x+m,I=t.y+f;if(c===E&&u===I)return!0;if(Math.abs(c-E)+Math.abs(u-I)===1){const S=U[h],R=U[p];if(c<E){if(S[1]&&R[3])return!0}else if(c>E){if(S[3]&&R[1])return!0}else if(u<I){if(S[2]&&R[0])return!0}else if(u>I&&S[0]&&R[2])return!0}}}return!1}_isPlacementValid(e,t){const{gridPattern:n,x:i,y:s,id:r}=e,l=n.length,a=n[0].length;if(i<0||s<0||i+a>L||s+l>y)return!1;for(const h of t)if(!(r&&h.id===r)&&this._doGemsCollide(e,h))return!1;return!0}_paintGemOnGrid(e,t,n){const{gridPattern:i,x:s,y:r}=e;for(let l=0;l<i.length;l++)for(let a=0;a<i[l].length;a++){const h=i[l][a];h!==d.EMPTY&&t[r+l]&&t[r+l][s+a]!==void 0&&(t[r+l][s+a]=h,n==null||n.set(`${r+l},${s+a}`,e))}}updateSolutionButtonState(){var i;const e=((i=O[o.difficulty])==null?void 0:i.length)??0,t=o.playerGems.every(s=>s.isValid),n=o.playerGems.length===e;this.ui.checkSolutionBtn.disabled=!(t&&n)}_placeSecretGems(){const e=[],t=O[o.difficulty];let n=0;for(;e.length<t.length&&n<500;){n++,e.length=0;for(const i of t){const s=b[i];let r=!1,l=0;for(;!r&&l<200;){l++;let a=s.gridPattern;const h=Math.floor(Math.random()*4);for(let E=0;E<h;E++)a=D(a);const c=a.length,u=a[0].length;if(L<u||y<c)continue;const f=Math.floor(Math.random()*(L-u+1)),m=Math.floor(Math.random()*(y-c+1)),p={id:`secret_${i}_${e.length}`,name:i,x:f,y:m,rotation:h*90,gridPattern:a};this._isPlacementValid(p,e)&&(e.push(p),r=!0)}if(!r)break}}return e.length!==t.length?(console.error("Failed to place all secret gems!"),alert("Fehler bei der Level-Erstellung. Bitte versuchen Sie es erneut."),[]):(e.forEach(i=>this._paintGemOnGrid(i,this.secretGrid,this.secretGemMap)),console.log("Secret gems placed:",e),e)}}class _{constructor(e,t){this.state="normal",this.isUsed=!1,this.usedColor=null,this.cornerRadius=4,this.id=e,this.label=t,this.rect={x:0,y:0,width:0,height:0}}isInside(e,t){return e>=this.rect.x&&e<=this.rect.x+this.rect.width&&t>=this.rect.y&&t<=this.rect.y+this.rect.height}draw(e,t=!1){e.save();const n=this.isUsed&&this.usedColor?this.usedColor:"#4a627a";e.beginPath();const i=new Path2D;i.roundRect(this.rect.x,this.rect.y,this.rect.width,this.rect.height,this.cornerRadius),e.fillStyle=n,e.fill(i),t?(e.strokeStyle="#f1c40f",e.lineWidth=3,e.shadowColor="#f1c40f",e.shadowBlur=8,e.stroke(i),e.shadowColor="transparent",e.shadowBlur=0):this.state==="focused"&&(e.strokeStyle="#3498db",e.lineWidth=2,e.stroke(i));const r=(l=>{if(!l||l.length<7)return"#ecf0f1";try{const a=parseInt(l.slice(1,3),16),h=parseInt(l.slice(3,5),16),c=parseInt(l.slice(5,7),16);return a*.299+h*.587+c*.114>186?"#2c3e50":"#ecf0f1"}catch{return"#ecf0f1"}})(n);e.fillStyle=r,e.font=`bold ${this.rect.height*.45}px -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif`,e.textAlign="center",e.textBaseline="middle",e.fillText(this.label,this.rect.x+this.rect.width/2,this.rect.y+this.rect.height/2),e.restore()}}class Q{constructor(){this.screens={},this.emitters=[],this.focusedEmitterId=null,this.dragStartInfo=null,this.isDragging=!1,this.draggedItemInfo=null,this.dragPos={x:0,y:0},this.lastValidDropTarget={x:-1,y:-1,isValid:!1},this.cellWidth=0,this.cellHeight=0,this.gap=1,this.cacheDOMElements(),this.bindGlobalEvents(),this._populateIntroRules()}bindGame(e){this.game=e}cacheDOMElements(){this.screens.main=document.getElementById("screen-main"),this.screens.difficulty=document.getElementById("screen-difficulty"),this.screens.game=document.getElementById("screen-game"),this.screens.end=document.getElementById("screen-end"),this.btnStartGame=document.getElementById("btn-start-game"),this.introRulesEl=document.getElementById("intro-rules"),this.difficultyOptions=document.getElementById("difficulty-options"),this.btnBackToMain1=document.getElementById("btn-back-to-main-1"),this.boardWrapper=document.getElementById("game-board-wrapper"),this.gemCanvas=document.getElementById("gem-canvas"),this.gemCtx=this.gemCanvas.getContext("2d"),this.pathOverlay=document.getElementById("path-overlay"),this.pathCtx=this.pathOverlay.getContext("2d"),this.gemToolbar=document.getElementById("gem-toolbar"),this.logList=document.getElementById("log-list"),this.actionsTabBtn=document.getElementById("actions-tab-btn"),this.logTabBtn=document.getElementById("log-tab-btn"),this.rulesTabBtn=document.getElementById("rules-tab-btn"),this.rulesPanel=document.getElementById("rules-panel"),this.checkSolutionBtn=document.getElementById("check-solution-btn"),this.giveUpBtn=document.getElementById("give-up-btn"),this.previewToggle=document.getElementById("preview-toggle"),this.endTitle=document.getElementById("end-title"),this.endStats=document.getElementById("end-stats"),this.endRetryMessage=document.getElementById("end-retry-message"),this.endSolutionCanvas=document.getElementById("end-solution-canvas"),this.endSolutionCtx=this.endSolutionCanvas.getContext("2d"),this.endSolutionLabel=document.getElementById("end-solution-label"),this.btnNewLevel=document.getElementById("btn-new-level"),this.btnMenu=document.getElementById("btn-menu")}bindGlobalEvents(){this.btnStartGame.addEventListener("click",()=>this.game.showDifficultySelect()),this.btnNewLevel.addEventListener("click",()=>{o.difficulty&&this.game.start(o.difficulty)}),this.btnMenu.addEventListener("click",()=>this.game.showMainMenu()),this.btnBackToMain1.addEventListener("click",()=>this.game.showMainMenu()),this.actionsTabBtn.addEventListener("click",()=>this.switchTab("actions")),this.logTabBtn.addEventListener("click",()=>this.switchTab("log")),this.rulesTabBtn.addEventListener("click",()=>this.switchTab("rules")),this.checkSolutionBtn.addEventListener("click",()=>this.game.checkSolution()),this.giveUpBtn.addEventListener("click",()=>this.game.giveUp()),this.previewToggle.addEventListener("change",()=>this.game.togglePlayerPathPreview()),this.gemCanvas.addEventListener("keydown",e=>this.handleCanvasKeyDown(e)),document.addEventListener("keydown",e=>{if(e.key==="n"&&(o.status===G.PLAYING||o.status===G.GAME_OVER)){o.difficulty&&this.game.start(o.difficulty);return}if(e.key==="Escape"&&(o.status===G.PLAYING||o.status===G.GAME_OVER)){this.game.showMainMenu();return}o.status===G.PLAYING&&(e.key==="d"&&this.game.toggleDebugMode(),e.key==="f"&&this.game.togglePlayerPathPreview())}),document.addEventListener("click",e=>this.handleGlobalClick(e)),this.logList.addEventListener("click",e=>this.handleLogClick(e)),document.addEventListener("mousedown",e=>this.handlePointerDown(e)),document.addEventListener("touchstart",e=>this.handlePointerDown(e),{passive:!1}),document.addEventListener("mousemove",e=>this.handlePointerMove(e)),document.addEventListener("touchmove",e=>this.handlePointerMove(e),{passive:!1}),document.addEventListener("mouseup",e=>this.handlePointerUp(e)),document.addEventListener("touchend",e=>this.handlePointerUp(e)),this.logList.addEventListener("animationend",()=>{this.logList.classList.remove("flash")})}handleGlobalClick(e){if(!o.selectedLogEntryWaveId)return;const t=e.target;t.closest("#gem-canvas")||t.closest("#log-list li")||t.closest(".preview-toggle-wrapper")||this.game.setSelectedWave(null,null)}setupGameUI(){this._populateRulesPanel(),this.switchTab("actions"),this._createEmitterObjects(),this.updateToolbar(),this.logList.innerHTML="",this.updateLogTabCounter(),this.clearPath(),this.game.updateSolutionButtonState(),this.updatePreviewToggleState(o.showPlayerPathPreview),new ResizeObserver(()=>this.onBoardResize()).observe(this.boardWrapper),this.onBoardResize()}showScreen(e){e==="difficulty"&&this.populateDifficultyOptions(),Object.values(this.screens).forEach(t=>t.classList.add("hidden")),this.screens[e].classList.remove("hidden"),e==="game"&&this.gemCanvas.focus()}populateDifficultyOptions(){this.difficultyOptions.innerHTML="";const e={[A.TRAINING]:"Ideal zum Lernen des Spiels, mit dem Verlauf der Lichtstrahlen.",[A.NORMAL]:"Die Grundlagen. Lerne die farbigen und weissen Steine kennen.",[A.MITTEL]:"Eine neue Herausforderung. Ein transparenter Prisma-Stein lenkt das Licht ab, ohne es zu färben.",[A.SCHWER]:"Expertenmodus. Neben dem transparenten kommt ein schwarzer, Licht absorbierender Stein in Spiel."};Object.values(A).forEach(t=>{const n=document.createElement("button");n.innerHTML=`${t}<div class="difficulty-desc">${e[t]}</div>`,n.onclick=()=>this.game.start(t),this.difficultyOptions.appendChild(n)})}_createEmitterObjects(){this.emitters=[];for(let e=0;e<L;e++)this.emitters.push(new _(`T${e+1}`,`T${e+1}`));for(let e=0;e<L;e++)this.emitters.push(new _(`B${e+1}`,`B${e+1}`));for(let e=0;e<y;e++)this.emitters.push(new _(`L${e+1}`,`L${e+1}`));for(let e=0;e<y;e++)this.emitters.push(new _(`R${e+1}`,`R${e+1}`));this.emitters.length>0&&(this.focusedEmitterId=this.emitters[0].id)}onBoardResize(){const e=this.boardWrapper.getBoundingClientRect();if(e.width===0||e.height===0)return;const t=L+2,n=y+2;this.cellWidth=(e.width-(t-1)*this.gap)/t,this.cellHeight=(e.height-(n-1)*this.gap)/n;const i=window.devicePixelRatio||1;[this.pathOverlay,this.gemCanvas].forEach(s=>{s.width=e.width*i,s.height=e.height*i,s.style.width=`${e.width}px`,s.style.height=`${e.height}px`,s.getContext("2d").scale(i,i)}),this.emitters.forEach(s=>{const r=s.id,l=parseInt(r.substring(1))-1;let a=0,h=0;switch(r[0]){case"T":a=l+1,h=0;break;case"B":a=l+1,h=n-1;break;case"L":a=0,h=l+1;break;case"R":a=t-1,h=l+1;break}s.rect.x=a*(this.cellWidth+this.gap),s.rect.y=h*(this.cellHeight+this.gap),s.rect.width=this.cellWidth,s.rect.height=this.cellHeight}),this.redrawAll()}_getGemTooltip(e){var n;const t=b[e];if(!t)return"";switch(e){case"TRANSPARENT":return"Reflektiert nur, färbt nicht.";case"SCHWARZ":return"Absorbiert Licht.";default:if(t.baseGems&&t.baseGems.length>0){const i=t.baseGems[0];return`Fügt Farbe '${(n=W[i])==null?void 0:n.toLowerCase()}' hinzu.`}return`Edelstein ${e}`}}updateToolbar(){if(this.gemToolbar.innerHTML="",!o.difficulty)return;const e=new Set(o.playerGems.map(t=>t.name));O[o.difficulty].forEach(t=>{const n=b[t],i=document.createElement("div");i.className="toolbar-gem",e.has(t)&&i.classList.add("placed"),i.dataset.gemName=t,i.title=this._getGemTooltip(t);const s=document.createElement("canvas");s.className="toolbar-gem-canvas",i.appendChild(s),this.gemToolbar.appendChild(i),setTimeout(()=>this.drawToolbarGem(s,n),0)})}drawToolbarGem(e,t){const n=e.getContext("2d");if(!n)return;const i=window.devicePixelRatio||1,s=e.getBoundingClientRect();if(s.width===0||s.height===0)return;e.width=s.width*i,e.height=s.height*i,n.scale(i,i);const r=t.gridPattern,l=r.length,a=r[0].length,h=Math.max(a,l),c=s.width/h,u=s.height/h,f=(s.width-a*c)/2,m=(s.height-l*u)/2;for(let p=0;p<l;p++)for(let E=0;E<a;E++){const I=r[p][E];I!==d.EMPTY&&this.drawCellShape(n,E*c+f,p*u+m,c,u,I,t.color)}}handleSelectionChange(){this.redrawAll(),this.updateLogHighlight()}redrawAll(){if(this.gemCanvas.width===0)return;const e=this.gemCtx;e.clearRect(0,0,this.gemCanvas.width,this.gemCanvas.height),this._drawBoardBackgroundAndGrid(e);const t=o.selectedLogEntryWaveId?o.log.find(n=>n.waveId===o.selectedLogEntryWaveId):null;if(this.emitters.forEach(n=>{let i=!1;t&&(i=n.id===t.waveId||n.id===t.result.exitId),n.draw(e,i)}),this.clearPath(),t&&(o.difficulty===A.TRAINING||o.debugMode)&&t.path){const i=this.getPathColor(t.result);this.drawPath(t.path,i,!1)}if(o.showPlayerPathPreview&&o.activePlayerPath&&o.activePlayerResult){const n=this.getPathColor(o.activePlayerResult);this.drawPath(o.activePlayerPath,n,!0)}o.status===G.PLAYING&&(o.debugMode&&this.drawDebugSolution(e),this.drawPlayerGems(e),this._drawSelectedWaveTooltip(e),this.isDragging&&this.draggedItemInfo&&this.drawDragPreview(e))}drawDragPreview(e){if(!this.draggedItemInfo)return;const{gridPattern:t,name:n,id:i}=this.draggedItemInfo,s=b[n],r=t[0].length,l=t.length,a=this.dragPos.x/(this.cellWidth+this.gap)-1-r/2+.5,h=this.dragPos.y/(this.cellHeight+this.gap)-1-l/2+.5,c=Math.round(a),u=Math.round(h),f={id:i,x:c,y:u,gridPattern:t};this.lastValidDropTarget.isValid=this.game.canPlaceGem(f),this.lastValidDropTarget.x=c,this.lastValidDropTarget.y=u,e.save(),e.globalAlpha=.7;for(let m=0;m<l;m++)for(let p=0;p<r;p++)if(t[m][p]!==d.EMPTY){const E=this._gridToCanvasCoords(c+p,u+m);this.drawCellShape(e,E.x,E.y,this.cellWidth,this.cellHeight,t[m][p],s.color,!this.lastValidDropTarget.isValid)}e.restore()}drawPlayerGems(e){var t,n;for(const i of o.playerGems){if(this.isDragging&&((t=this.draggedItemInfo)==null?void 0:t.from)==="board"&&this.draggedItemInfo.id===i.id)continue;const{gridPattern:s,x:r,y:l,name:a}=i,h=b[a].color,c=!i.isValid;let u=!1;this.isDragging||(u=((n=this.getGemAtCanvasPos(this.dragPos.x,this.dragPos.y))==null?void 0:n.id)===i.id);for(let f=0;f<s.length;f++)for(let m=0;m<s[f].length;m++){const p=s[f][m];if(p!==d.EMPTY){const E=this._gridToCanvasCoords(r+m,l+f);this.drawCellShape(e,E.x,E.y,this.cellWidth,this.cellHeight,p,h,c,u)}}}}_drawBoardBackgroundAndGrid(e){e.save();const t=getComputedStyle(document.documentElement).getPropertyValue("--surface-color"),n=getComputedStyle(document.documentElement).getPropertyValue("--border-color");e.fillStyle=t,e.fillRect(0,0,e.canvas.width,e.canvas.height),e.fillStyle=n,e.fillRect(this.cellWidth+this.gap/2,this.cellHeight+this.gap/2,L*this.cellWidth+(L+1)*this.gap,y*this.cellHeight+(y+1)*this.gap),e.fillStyle=t,e.fillRect(this.cellWidth+this.gap,this.cellHeight+this.gap,L*this.cellWidth+(L-1)*this.gap,y*this.cellHeight+(y-1)*this.gap),e.strokeStyle=n,e.lineWidth=this.gap,e.beginPath();for(let i=1;i<L;i++){const s=(i+1)*(this.cellWidth+this.gap)-this.gap/2;e.moveTo(s,this.cellHeight+this.gap),e.lineTo(s,(y+1)*(this.cellHeight+this.gap))}for(let i=1;i<y;i++){const s=(i+1)*(this.cellHeight+this.gap)-this.gap/2;e.moveTo(this.cellWidth+this.gap,s),e.lineTo((L+1)*(this.cellWidth+this.gap),s)}e.stroke(),e.restore()}drawDebugSolution(e){if(!(!this.game.secretGrid||o.secretGems.length===0)){e.save();for(const t of o.secretGems){const{gridPattern:n,x:i,y:s,name:r}=t,l=b[r].color;e.globalAlpha=.2;for(let a=0;a<n.length;a++)for(let h=0;h<n[a].length;h++){const c=n[a][h];if(c!==d.EMPTY){const u=this._gridToCanvasCoords(i+h,s+a);this.drawCellShape(e,u.x,u.y,this.cellWidth,this.cellHeight,c,l)}}}e.restore()}}drawCellShape(e,t,n,i,s,r,l,a=!1,h=!1){e.save(),l===v.TRANSPARENT?(e.fillStyle="rgba(164, 212, 228, 0.3)",e.strokeStyle="#a4d4e4",e.lineWidth=2):l===v.SCHWARZ_GEM?(e.fillStyle=l,e.strokeStyle="#555",e.lineWidth=1):(e.fillStyle=l,e.strokeStyle="rgba(0,0,0,0.4)",e.lineWidth=1),a&&(e.fillStyle="rgba(231, 76, 60, 0.5)",e.strokeStyle=v.INVALID_GEM,e.lineWidth=2),h&&!a&&(e.shadowColor="white",e.shadowBlur=10),e.beginPath();const c=new Path2D;switch(r){case d.BLOCK:case d.ABSORB:c.rect(t,n,i,s);break;case d.TRIANGLE_TL:c.moveTo(t,n),c.lineTo(t+i,n),c.lineTo(t,n+s),c.closePath();break;case d.TRIANGLE_TR:c.moveTo(t,n),c.lineTo(t+i,n),c.lineTo(t+i,n+s),c.closePath();break;case d.TRIANGLE_BR:c.moveTo(t+i,n),c.lineTo(t+i,n+s),c.lineTo(t,n+s),c.closePath();break;case d.TRIANGLE_BL:c.moveTo(t,n),c.lineTo(t,n+s),c.lineTo(t+i,n+s),c.closePath();break}e.fill(c),e.stroke(c),e.restore()}_gridToCanvasCoords(e,t){return{x:(e+1)*(this.cellWidth+this.gap),y:(t+1)*(this.cellHeight+this.gap)}}_canvasToGridCoords(e,t){return{x:Math.floor(e/(this.cellWidth+this.gap))-1,y:Math.floor(t/(this.cellHeight+this.gap))-1}}getPathColor(e){if(e.absorbed)return v.ABSORBIERT;if(e.colors.length===0)return"rgba(236, 240, 241, 0.7)";const t=[...e.colors].sort().join(",");return H[t]||"#ccc"}drawPath(e,t,n=!1){if(e.length<2)return;const i=this.pathCtx;i.save(),i.strokeStyle=t,i.lineWidth=3,i.lineCap="round",i.lineJoin="round",i.shadowColor="rgba(0,0,0,0.5)",i.shadowBlur=5,n&&(i.globalAlpha=.6,i.setLineDash([8,6])),i.beginPath();const s=this.cellWidth+this.gap,r=this.cellHeight+this.gap,l=this.cellWidth+this.gap,a=this.cellHeight+this.gap,h=u=>{const f=s+u.x*l,m=r+u.y*a;return{x:f,y:m}},c=h(e[0]);i.moveTo(c.x,c.y);for(let u=1;u<e.length;u++)i.lineTo(h(e[u]).x,h(e[u]).y);i.stroke(),i.restore()}clearPath(){this.pathCtx.clearRect(0,0,this.pathOverlay.width,this.pathOverlay.height)}switchTab(e){document.querySelectorAll(".tab-btn, .tab-panel").forEach(t=>t.classList.remove("active")),document.getElementById(`${e}-tab-btn`).classList.add("active"),document.getElementById(`${e}-panel`).classList.add("active")}addLogEntry(e,t){const n=document.createElement("li");n.dataset.waveId=t;const{result:i}=e,s=`${t} ➔ ${i.exitId}`,r=this.getPathColor(i),l=this._getPathColorName(i);n.innerHTML=`<span>${s}</span><div class="log-entry-result"><span class="log-color-name">${l}</span><div class="log-color-box" style="background-color: ${r};"></div></div>`,this.logList.prepend(n),this.updateLogTabCounter();const a=this.emitters.find(h=>h.id===t);if(a&&(a.isUsed=!0,a.usedColor=r),i.exitId&&i.exitId!=="Loop?"){const h=this.emitters.find(c=>c.id===i.exitId);h&&(h.isUsed=!0,h.usedColor=r)}}updateLogTabCounter(){const e=o.log.length;e>0?this.logTabBtn.textContent=`Logbuch (${e})`:this.logTabBtn.textContent="Logbuch"}showEndScreen(e,t,n,i){this.endTitle.classList.remove("win","loss"),this.endRetryMessage.textContent="",e?(this.endTitle.textContent="Gewonnen!",this.endTitle.classList.add("win"),this.endStats.textContent=`Du hast die Mine in ${t} Abfragen gelöst!`,this.endSolutionLabel.textContent="Korrekte Lösung:"):(this.endTitle.textContent="Verloren!",this.endTitle.classList.add("loss"),this.endStats.textContent=`Du hast ${t} Abfragen gebraucht.`,this.endRetryMessage.textContent="Bitte versuche es erneut.",this.endSolutionLabel.textContent="Deine Eingabe (über der korrekten Lösung):"),this.showScreen("end"),requestAnimationFrame(()=>{const s=e?[]:i;this.drawEndScreenSolution(this.endSolutionCtx,n,s,this.emitters)})}drawEndScreenSolution(e,t,n,i){const s=e.canvas,r=window.devicePixelRatio||1,l=s.getBoundingClientRect();if(l.width===0||l.height===0)return;s.width=l.width*r,s.height=l.height*r,e.scale(r,r),e.clearRect(0,0,l.width,l.height);const a=1,h=L+2,c=y+2,u=(l.width-(h-1)*a)/h,f=(l.height-(c-1)*a)/c,m=(I,S,R)=>{e.save(),e.globalAlpha=S;for(const T of I){const P=b[T.name].color,C=R?!T.isValid:!1;for(let M=0;M<T.gridPattern.length;M++)for(let B=0;B<T.gridPattern[M].length;B++){const k=T.gridPattern[M][B];if(k!==d.EMPTY){const x=T.x+B,Y=T.y+M,$=(x+1)*(u+a),F=(Y+1)*(f+a);this.drawCellShape(e,$,F,u,f,k,P,C)}}}e.restore()};e.save();const p=getComputedStyle(document.documentElement).getPropertyValue("--surface-color"),E=getComputedStyle(document.documentElement).getPropertyValue("--border-color");e.fillStyle=p,e.fillRect(0,0,l.width,l.height),e.fillStyle=E,e.fillRect(u+a/2,f+a/2,L*u+(L+1)*a,y*f+(y+1)*a),e.fillStyle=p,e.fillRect(u+a,f+a,L*(u+a)-a,y*(f+a)-a),e.strokeStyle=E,e.lineWidth=a,e.beginPath();for(let I=1;I<L;I++){const S=(I+1)*(u+a)-a/2;e.moveTo(S,f+a),e.lineTo(S,(y+1)*(f+a))}for(let I=1;I<y;I++){const S=(I+1)*(f+a)-a/2;e.moveTo(u+a,S),e.lineTo((L+1)*(u+a),S)}e.stroke(),e.restore(),i.forEach(I=>{const S=I.id,R=parseInt(S.substring(1))-1;let T=0,P=0;switch(S[0]){case"T":T=R+1,P=0;break;case"B":T=R+1,P=c-1;break;case"L":T=0,P=R+1;break;case"R":T=h-1,P=R+1;break}const C=Object.assign(new _(I.id,I.label),I);C.rect={x:T*(u+a),y:P*(f+a),width:u,height:f},C.state="normal",C.draw(e,!1)}),m(t,1,!1),n.length>0&&m(n,.55,!0)}handleLogClick(e){const t=e.target.closest("li");if(t&&t.dataset.waveId){const n=t.dataset.waveId;o.selectedLogEntryWaveId===n?this.game.setSelectedWave(null,null):this.game.setSelectedWave(n,n)}}handleCanvasHover(e,t){if(this.isDragging)return;const n=this.gemCanvas.getBoundingClientRect(),i=e-n.left,s=t-n.top;this.dragPos={x:i,y:s},this.redrawAll()}handleCanvasMouseLeave(){this.dragPos={x:-1,y:-1},this.redrawAll()}updatePreviewToggleState(e){this.previewToggle.checked=e}updateLogHighlight(){this.logList.querySelectorAll("li").forEach(e=>{const t=e;t.dataset.waveId===o.selectedLogEntryWaveId?(t.classList.add("selected"),t.scrollIntoView({behavior:"smooth",block:"nearest"})):t.classList.remove("selected")})}handleCanvasKeyDown(e){if(!["ArrowUp","ArrowDown","ArrowLeft","ArrowRight","Enter"," "].includes(e.key))return;e.preventDefault();const t=this.emitters.find(s=>s.id===this.focusedEmitterId);if(t&&(t.state="normal"),e.key==="Enter"||e.key===" "){if(this.focusedEmitterId){const s=this.emitters.find(r=>r.id===this.focusedEmitterId);if(s&&!s.isUsed)this.game.sendWave(this.focusedEmitterId);else if(s!=null&&s.isUsed){const r=o.log.find(l=>l.waveId===s.id||l.result.exitId===s.id);r&&(o.selectedLogEntryWaveId===r.waveId&&o.previewSourceEmitterId===s.id?this.game.setSelectedWave(null,null):this.game.setSelectedWave(r.waveId,s.id))}}t&&(t.state="focused"),this.redrawAll(),this.updateLogHighlight();return}const n=this.emitters.findIndex(s=>s.id===this.focusedEmitterId);if(n===-1)return;let i=-1;switch(e.key){case"ArrowRight":i=(n+1)%this.emitters.length;break;case"ArrowLeft":i=(n-1+this.emitters.length)%this.emitters.length;break;case"ArrowUp":i=(n-1+this.emitters.length)%this.emitters.length;break;case"ArrowDown":i=(n+1)%this.emitters.length;break}if(i!==-1){this.focusedEmitterId=this.emitters[i].id;const s=this.emitters[i];s&&(s.state="focused"),this.redrawAll()}}getPointerCoordinates(e){return e instanceof MouseEvent?{clientX:e.clientX,clientY:e.clientY}:e.changedTouches&&e.changedTouches.length>0?{clientX:e.changedTouches[0].clientX,clientY:e.changedTouches[0].clientY}:null}handlePointerDown(e){if(e instanceof MouseEvent&&e.button!==0)return;const t=this.getPointerCoordinates(e);if(!t)return;const{clientX:n,clientY:i}=t,s=e.target,r=s.closest(".toolbar-gem:not(.placed)"),l=s.closest("#gem-canvas");e instanceof TouchEvent&&(l||r)&&e.preventDefault();let a=null,h=0,c=0;if(r){const u=r.getBoundingClientRect();h=n-u.left,c=i-u.top;const f=r.dataset.gemName;a={name:f,from:"toolbar",gridPattern:b[f].gridPattern,element:r,offsetX:h,offsetY:c}}else if(l){const u=this.gemCanvas.getBoundingClientRect(),f=n-u.left,m=i-u.top,p=this.getGemAtCanvasPos(f,m);if(p){const E=this._canvasToGridCoords(f,m);a={id:p.id,name:p.name,from:"board",gridPattern:p.gridPattern,offsetX:(E.x-p.x)*this.cellWidth,offsetY:(E.y-p.y)*this.cellHeight}}}a&&(this.dragStartInfo={item:a,startX:n,startY:i})}handlePointerMove(e){const t=this.getPointerCoordinates(e);if(!t)return;const{clientX:n,clientY:i}=t;if(this.dragStartInfo){if(e instanceof TouchEvent&&e.preventDefault(),!this.isDragging){const s=n-this.dragStartInfo.startX,r=i-this.dragStartInfo.startY;Math.sqrt(s*s+r*r)>5&&(this.isDragging=!0,this.draggedItemInfo=this.dragStartInfo.item,this.draggedItemInfo.element&&this.draggedItemInfo.element.classList.add("dragging"))}if(this.isDragging){const s=this.gemCanvas.getBoundingClientRect();this.dragPos={x:n-s.left,y:i-s.top},this.redrawAll()}}else e.target===this.gemCanvas?this.handleCanvasHover(n,i):this.handleCanvasMouseLeave()}handlePointerUp(e){var r;const t=this.getPointerCoordinates(e);if(!t)return;const{clientX:n,clientY:i}=t;if(this.isDragging&&this.draggedItemInfo){const l=this.gemCanvas.getBoundingClientRect();if(n>=l.left&&n<=l.right&&i>=l.top&&i<=l.bottom){const{x:h,y:c}=this.lastValidDropTarget,{gridPattern:u}=this.draggedItemInfo,f=u[0].length,m=u.length;h>=0&&c>=0&&h+f<=L&&c+m<=y&&(this.draggedItemInfo.from==="toolbar"?this.game.addPlayerGem(this.draggedItemInfo.name,h,c):this.draggedItemInfo.id&&this.game.movePlayerGem(this.draggedItemInfo.id,h,c))}else this.draggedItemInfo.from==="board"&&this.draggedItemInfo.id&&this.game.removePlayerGem(this.draggedItemInfo.id)}else if(e.target.closest("#gem-canvas")){const a=this.gemCanvas.getBoundingClientRect(),h=n-a.left,c=i-a.top,u=this.emitters.find(f=>f.isInside(h,c));if(u)if(!u.isUsed)this.game.sendWave(u.id);else{const f=o.log.find(m=>m.waveId===u.id||m.result.exitId===u.id);f?o.selectedLogEntryWaveId===f.waveId&&o.previewSourceEmitterId===u.id?this.game.setSelectedWave(null,null):this.game.setSelectedWave(f.waveId,u.id):this.game.setSelectedWave(null,null)}else{const f=this.getGemAtCanvasPos(h,c);f?(this.game.setSelectedWave(null,null),this.game.rotatePlayerGem(f.id)):this.game.setSelectedWave(null,null)}}(r=this.dragStartInfo)!=null&&r.item.element&&this.dragStartInfo.item.element.classList.remove("dragging"),this.dragStartInfo=null,this.isDragging=!1,this.draggedItemInfo=null,this.redrawAll(),this.updateToolbar()}getGemAtCanvasPos(e,t){if(e<0||t<0)return null;const{x:n,y:i}=this._canvasToGridCoords(e,t);for(let s=o.playerGems.length-1;s>=0;s--){const r=o.playerGems[s],l=r.gridPattern.length,a=r.gridPattern[0].length;if(n>=r.x&&n<r.x+a&&i>=r.y&&i<r.y+l&&r.gridPattern[i-r.y][n-r.x]!==d.EMPTY)return r}return null}_getPathColorName(e){if(e.absorbed)return"Absorbiert";if(e.colors.length===0)return"Keine Farbe";const t=[...e.colors].sort().join(",");return W[t]||"Unbekannte Mischung"}_createColorMixEntry(e){const t=H[e],n=e.split(","),i=document.createElement("div");i.className="color-mix-entry";let s="";n.forEach((l,a)=>{const h=v[l];s+=`<div class="color-mix-box" style="background-color: ${h}"></div>`,a<n.length-1&&(s+="<span>+</span>")});const r=W[e]||"Mischung";return s+=`<span>=</span> <div class="color-mix-box" style="background-color: ${t}"></div> <span>${r}</span>`,i.innerHTML=s,i}_populateColorMixColumns(e){if(!e)return;const t=document.createElement("div");t.className="color-mix-column";const n=document.createElement("div");n.className="color-mix-column";const i=["BLAU,ROT","BLAU,GELB","GELB,ROT","BLAU,ROT,WEISS","BLAU,GELB,WEISS","BLAU,GELB,ROT,WEISS"],s=["BLAU,WEISS","ROT,WEISS","GELB,WEISS","BLAU,GELB,ROT","GELB,ROT,WEISS"];i.forEach(r=>t.appendChild(this._createColorMixEntry(r))),s.forEach(r=>n.appendChild(this._createColorMixEntry(r))),e.appendChild(t),e.appendChild(n)}_populateIntroRules(){this.introRulesEl.innerHTML=`
            <h3>Spielanleitung</h3>
            <p><strong>Ziel:</strong> Finde die Position und Ausrichtung der versteckten Edelsteine.</p>
            <ul>
                <li>Sende Lichtwellen von den Rändern in das Spielfeld.</li>
                <li>Die austretende Farbe und Position verraten, welche Steine getroffen wurden.</li>
                <li>Ziehe Edelsteine aus der Werkzeugleiste auf das Feld. Du kannst sie verschieben und drehen.</li>
                <li>Ein Klick auf einen platzierten Stein dreht ihn um 90°.</li>
                <li>Steine dürfen sich nicht überlappen oder Kante an Kante liegen.</li>
                <li>Drücke <strong>'n'</strong> für ein neues Level oder <strong>'esc'</strong> um zum Menü zurückzukehren.</li>
            </ul>
            <h4>Farbmischung</h4>
            <p>Wenn ein Lichtstrahl mehrere farbige Steine durchquert, mischen sich ihre Farben:</p>
            <div class="color-mix-container"></div>
        `;const e=this.introRulesEl.querySelector(".color-mix-container");this._populateColorMixColumns(e)}_populateRulesPanel(){this.rulesPanel.innerHTML=`
            <h4>Grundregeln</h4>
            <ul>
                <li><strong>Ziel:</strong> Finde die Position und Ausrichtung der versteckten Edelsteine.</li>
                <li>Sende Lichtwellen, um zu sehen, wo sie austreten und welche Farbe sie haben.</li>
                <li>Ziehe die Edelsteine auf das Feld, um die Lösung nachzubauen.</li>
                <li>Klicke auf einen platzierten Stein, um ihn zu <strong>drehen</strong>.</li>
                <li>Steine dürfen sich nicht überlappen oder Kante an Kante liegen.</li>
            </ul>
            <h4>Farbmischung</h4>
            <p>Wenn ein Lichtstrahl mehrere farbige Steine durchquert, mischen sich ihre Farben:</p>
            <div class="color-mix-container"></div>
        `;const e=this.rulesPanel.querySelector(".color-mix-container");this._populateColorMixColumns(e)}_drawSelectedWaveTooltip(e){if(!o.selectedLogEntryWaveId)return;const t=o.log.find(B=>B.waveId===o.selectedLogEntryWaveId);if(!t)return;const n=o.previewSourceEmitterId||t.waveId,i=this.emitters.find(B=>B.id===n);if(!i)return;const s=t.waveId,r=t.result.exitId,l=this._getPathColorName(t.result),a=n===s?`${s} ➔ ${l} ➔ ${r}`:`${r} ➔ ${l} ➔ ${s}`;e.save();const h=this.cellHeight*.35;e.font=`bold ${h}px -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif`,e.textBaseline="middle";const c=e.measureText(a),u={x:8,y:5},f=c.width+u.x*2,m=h+u.y*2,p=6,E=i.rect,I=5,S=this.gemCanvas.width/(window.devicePixelRatio||1),R=this.gemCanvas.height/(window.devicePixelRatio||1);let T=0,P=0;P=E.y+E.height+I,T=E.x+E.width/2-f/2,P+m>R&&(P=E.y-m-I,P<0&&(T=E.x+E.width+I,P=E.y+E.height/2-m/2,T+f>S&&(T=E.x-f-I))),T<0&&(T=0),T+f>S&&(T=S-f),P<0&&(P=0),P+m>R&&(P=R-m);const C=T+f/2,M=P+m/2;e.fillStyle="black",e.beginPath(),e.roundRect(T,P,f,m,p),e.fill(),e.fillStyle="white",e.textAlign="center",e.fillText(a,C,M),e.restore()}}document.addEventListener("DOMContentLoaded",()=>{const g=new Q,e=new J(g);window.game=e});
