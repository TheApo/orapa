(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))r(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const n of s.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&r(n)}).observe(document,{childList:!0,subtree:!0});function t(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(i){if(i.ep)return;i.ep=!0;const s=t(i);fetch(i.href,s)}})();const m=8,E=10;var a=(d=>(d[d.EMPTY=0]="EMPTY",d[d.BLOCK=1]="BLOCK",d[d.TRIANGLE_TL=2]="TRIANGLE_TL",d[d.TRIANGLE_TR=3]="TRIANGLE_TR",d[d.TRIANGLE_BR=4]="TRIANGLE_BR",d[d.TRIANGLE_BL=5]="TRIANGLE_BL",d[d.ABSORB=6]="ABSORB",d))(a||{});const S={x:0,y:0,width:2,height:2},R={NORMAL:"Normal",MITTEL:"Mittel",SCHWER:"Schwer"},f={GELB:"#f1c40f",ROT:"#e74c3c",BLAU:"#3498db",WEISS:"#ecf0f1",TRANSPARENT:"#95a5a6",LILA:"#9b59b6",HIMMELBLAU:"#5dade2",GRUEN:"#2ecc71",PINK:"#f06292",ORANGE:"#e67e22",ZITRONE:"#d4e157",HELLLILA:"#ba68c8",SCHWARZ_GEM:"#2c3a47",SCHWARZ_MIX:"#34495e",HELLGRUEN:"#81c784",HELLORANGE:"#ffb74d",GRAU:"#9e9e9e",ABSORBIERT:"#17202a",correct:"#4caf50"},w={BLAU:f.BLAU,GELB:f.GELB,ROT:f.ROT,WEISS:f.WEISS,"BLAU,ROT":f.LILA,"BLAU,WEISS":f.HIMMELBLAU,"BLAU,GELB":f.GRUEN,"ROT,WEISS":f.PINK,"GELB,ROT":f.ORANGE,"GELB,WEISS":f.ZITRONE,"BLAU,ROT,WEISS":f.HELLLILA,"BLAU,GELB,ROT":f.SCHWARZ_MIX,"BLAU,GELB,WEISS":f.HELLGRUEN,"GELB,ROT,WEISS":f.HELLORANGE,"BLAU,GELB,ROT,WEISS":f.GRAU},B={BLAU:"Blau",GELB:"Gelb",ROT:"Rot",WEISS:"Weiss","BLAU,ROT":"Lila","BLAU,WEISS":"Himmelblau","BLAU,GELB":"Grün","ROT,WEISS":"Hellrot","GELB,ROT":"Orange","GELB,WEISS":"Hellgelb","BLAU,ROT,WEISS":"Hell-Lila","BLAU,GELB,ROT":"Dunkelgrau","BLAU,GELB,WEISS":"Hellgrün","GELB,ROT,WEISS":"Hell-Orange","BLAU,GELB,ROT,WEISS":"Grau"},b={GELB:{name:"GELB",color:f.GELB,baseGems:["GELB"],gridPattern:[[a.TRIANGLE_BL,a.EMPTY],[a.BLOCK,a.TRIANGLE_BL]]},ROT:{name:"ROT",color:f.ROT,baseGems:["ROT"],gridPattern:[[a.TRIANGLE_BR,a.BLOCK,a.TRIANGLE_TL]]},BLAU:{name:"BLAU",color:f.BLAU,baseGems:["BLAU"],gridPattern:[[a.EMPTY,a.TRIANGLE_BR,a.TRIANGLE_BL,a.EMPTY],[a.TRIANGLE_BR,a.BLOCK,a.BLOCK,a.TRIANGLE_BL]]},WEISS_RAUTE:{name:"WEISS_RAUTE",color:f.WEISS,baseGems:["WEISS"],gridPattern:[[a.TRIANGLE_BR,a.TRIANGLE_BL],[a.TRIANGLE_TR,a.TRIANGLE_TL]]},WEISS_DREIECK:{name:"WEISS_DREIECK",color:f.WEISS,baseGems:["WEISS"],gridPattern:[[a.EMPTY,a.TRIANGLE_BR,a.TRIANGLE_BL,a.EMPTY],[a.TRIANGLE_BR,a.BLOCK,a.BLOCK,a.TRIANGLE_BL]]},TRANSPARENT:{name:"TRANSPARENT",color:f.TRANSPARENT,baseGems:[],gridPattern:[[a.TRIANGLE_BR,a.TRIANGLE_BL]]},SCHWARZ:{name:"SCHWARZ",color:f.SCHWARZ_GEM,baseGems:[],special:"absorbs",gridPattern:[[a.ABSORB,a.ABSORB]]}},A={[R.NORMAL]:["GELB","ROT","BLAU","WEISS_RAUTE","WEISS_DREIECK"],[R.MITTEL]:["GELB","ROT","BLAU","WEISS_RAUTE","WEISS_DREIECK","TRANSPARENT"],[R.SCHWER]:["GELB","ROT","BLAU","WEISS_RAUTE","WEISS_DREIECK","TRANSPARENT","SCHWARZ"]};var I=(d=>(d[d.MAIN_MENU=0]="MAIN_MENU",d[d.DIFFICULTY_SELECT=1]="DIFFICULTY_SELECT",d[d.PLAYING=2]="PLAYING",d[d.GAME_OVER=3]="GAME_OVER",d))(I||{});const c={status:0,difficulty:null,secretGems:[],playerGems:[],log:[],waveCount:0,debugMode:!1};var T=(d=>(d[d.UP=0]="UP",d[d.RIGHT=1]="RIGHT",d[d.DOWN=2]="DOWN",d[d.LEFT=3]="LEFT",d))(T||{});const C={[a.BLOCK]:{0:2,1:3,2:0,3:1},[a.TRIANGLE_TR]:{0:3,1:2,2:0,3:1},[a.TRIANGLE_BL]:{0:2,1:3,2:1,3:0},[a.TRIANGLE_TL]:{0:1,1:3,2:0,3:2},[a.TRIANGLE_BR]:{0:2,1:0,2:3,3:1}},M={[a.EMPTY]:a.EMPTY,[a.BLOCK]:a.BLOCK,[a.ABSORB]:a.ABSORB,[a.TRIANGLE_TL]:a.TRIANGLE_TR,[a.TRIANGLE_TR]:a.TRIANGLE_BR,[a.TRIANGLE_BR]:a.TRIANGLE_BL,[a.TRIANGLE_BL]:a.TRIANGLE_TL};function _(d,e){var t;return d===a.EMPTY?null:((t=C[d])==null?void 0:t[e])??null}function v(d){const e=d.length,t=d[0].length,r=Array.from({length:t},()=>Array(e).fill(a.EMPTY));for(let i=0;i<e;i++)for(let s=0;s<t;s++)r[s][e-1-i]=M[d[i][s]];return r}const N=100;function O(d){const e=parseInt(d.substring(1))-1;switch(d[0]){case"T":return{pos:{x:e,y:-1},dir:T.DOWN};case"B":return{pos:{x:e,y:E},dir:T.UP};case"L":return{pos:{x:-1,y:e},dir:T.RIGHT};case"R":return{pos:{x:m,y:e},dir:T.LEFT};default:return null}}function W(d){return d.y<0?`T${d.x+1}`:d.y>=E?`B${d.x+1}`:d.x<0?`L${d.y+1}`:d.x>=m?`R${d.y+1}`:"Error"}function x(d,e){switch(e){case T.UP:d.y--;break;case T.DOWN:d.y++;break;case T.LEFT:d.x--;break;case T.RIGHT:d.x++;break}}function k(d,e,t){const r=O(t);if(!r)return{exitId:"Error",colors:[],path:[],absorbed:!1};const i={...r.pos};let s=r.dir;const n=[],o=new Set,l=new Set;for(let h=0;h<N;h++){if(x(i,s),n.length===0&&n.push({x:r.pos.x+(r.dir===T.RIGHT?1:r.dir===T.LEFT?0:.5),y:r.pos.y+(r.dir===T.DOWN?1:r.dir===T.UP?0:.5)}),i.x<0||i.x>=m||i.y<0||i.y>=E)return n.push({x:i.x+(s===T.LEFT?1:s===T.RIGHT?0:.5),y:i.y+(s===T.UP?1:s===T.DOWN?0:.5)}),{exitId:W(i),colors:[...o],path:n,absorbed:!1};const g=d[i.y][i.x];if(g===a.EMPTY)continue;n.push({x:i.x+.5,y:i.y+.5});const u=`${i.y},${i.x}`,p=e.get(u);if(p&&!l.has(p.id)){l.add(p.id);const y=b[p.name];y.baseGems&&y.baseGems.forEach(G=>o.add(G))}if(g===a.ABSORB)return{exitId:"Absorbed",colors:[],path:n,absorbed:!0};const L=_(g,s);L!==null&&(s=L)}return{exitId:"Loop?",colors:[...o],path:n,absorbed:!1}}class H{constructor(e){this.playerGrid=[],this.secretGrid=[],this.secretGemMap=new Map,this.ui=e,this.ui.bindGame(this),this.showMainMenu()}_initGrids(){this.playerGrid=Array.from({length:E},()=>Array(m).fill(a.EMPTY)),this.secretGrid=Array.from({length:E},()=>Array(m).fill(a.EMPTY)),this.secretGemMap.clear()}showMainMenu(){c.status=I.MAIN_MENU,this.ui.showScreen("main")}showDifficultySelect(){c.status=I.DIFFICULTY_SELECT,this.ui.showScreen("difficulty")}showEndScreen(e){c.status=I.GAME_OVER,this.ui.showEndScreen(e,c.waveCount,this.secretGrid,c.secretGems)}start(e){if(c.difficulty=e,c.status=I.PLAYING,this._initGrids(),c.secretGems=this._placeSecretGems(),c.secretGems.length===0){this.showDifficultySelect();return}c.playerGems=[],c.log=[],c.waveCount=0,c.debugMode=!1,this.ui.setupGameUI(),this.ui.showScreen("game"),this.ui.redrawAll()}giveUp(){this.showEndScreen(!1)}toggleDebugMode(){c.debugMode=!c.debugMode,this.ui.redrawAll()}sendWave(e){if(c.status!==I.PLAYING)return;c.waveCount++;const t=k(this.secretGrid,this.secretGemMap,e),r={waveId:e,result:t,path:t.path};c.log.push(r),this.ui.addLogEntry(r,e),this.ui.updateEmitterState(e,t),this.ui.showWavePath(t)}checkSolution(){const e=Array.from({length:E},()=>Array(m).fill(a.EMPTY));for(const r of c.playerGems){const{gridPattern:i,x:s,y:n}=r;for(let o=0;o<i.length;o++)for(let l=0;l<i[0].length;l++){const h=i[o][l];h!==a.EMPTY&&(e[n+o][s+l]=h)}}let t=!0;for(let r=0;r<E;r++){for(let i=0;i<m;i++)if(e[r][i]!==this.secretGrid[r][i]){t=!1;break}if(!t)break}this.showEndScreen(t)}addPlayerGem(e,t,r){const i=b[e];if(!i)return;const s={id:`player_${Date.now()}`,name:e,x:t,y:r,rotation:0,gridPattern:i.gridPattern};this._updatePlayerGem(s),c.playerGems.push(s),this.updateSolutionButtonState(),this.ui.redrawAll()}movePlayerGem(e,t,r){const i=c.playerGems.find(s=>s.id===e);i&&(this._clearGemFromGrid(i,this.playerGrid),i.x=t,i.y=r,this._updatePlayerGem(i))}removePlayerGem(e){const t=c.playerGems.findIndex(r=>r.id===e);if(t>-1){const r=c.playerGems[t];this._clearGemFromGrid(r,this.playerGrid),c.playerGems.splice(t,1),this.updateSolutionButtonState()}}rotatePlayerGem(e){const t=c.playerGems.find(r=>r.id===e);t&&(this._clearGemFromGrid(t,this.playerGrid),t.rotation=(t.rotation+90)%360,t.gridPattern=v(t.gridPattern),this._updatePlayerGem(t),this.ui.redrawAll())}canPlaceGem(e){const t=this.playerGrid.map(l=>[...l]);if(e.id){const l=c.playerGems.find(h=>h.id===e.id);l&&this._clearGemFromGrid(l,t)}const{gridPattern:r,x:i,y:s}=e,n=r.length,o=r[0].length;if(i<0||s<0||i+o>m||s+n>E)return!1;for(let l=0;l<n;l++)for(let h=0;h<o;h++)if(r[l][h]!==a.EMPTY){const g=i+h,u=s+l;if(t[u][g]!==a.EMPTY||this._isInForbiddenZone(g,u))return!1;const p=[{dx:0,dy:-1},{dx:0,dy:1},{dx:-1,dy:0},{dx:1,dy:0}];for(const L of p){const y=g+L.dx,G=u+L.dy;if(y>=0&&y<m&&G>=0&&G<E&&t[G][y]!==a.EMPTY)return!1}}return!0}_updatePlayerGem(e){this._validateGemPlacement(e),this._paintGemOnGrid(e,this.playerGrid),this._checkCorrectPlacement(e)}_validateGemPlacement(e){const{gridPattern:t}=e,r=t.length,i=t[0].length;e.x=Math.max(0,Math.min(e.x,m-i)),e.y=Math.max(0,Math.min(e.y,E-r)),e.isValid=this._isPlacementValid(e,this.playerGrid)}_checkCorrectPlacement(e){if(!e.isValid){e.isCorrectlyPlaced=!1;return}let t=!0;const{gridPattern:r}=e;for(let i=0;i<r.length;i++){for(let s=0;s<r[i].length;s++){const n=r[i][s];if(n===a.EMPTY)continue;const o=e.x+s,l=e.y+i;if(this.secretGrid[l][o]!==n){t=!1;break}}if(!t)break}e.isCorrectlyPlaced=t}_isPlacementValid(e,t,r){const{gridPattern:i,x:s,y:n}=e,o=i.length,l=i[0].length;if(s<0||n<0||s+l>m||n+o>E)return!1;for(let h=0;h<o;h++)for(let g=0;g<l;g++)if(i[h][g]!==a.EMPTY){const u=s+g,p=n+h;if(t[p][u]!==a.EMPTY||this._isInForbiddenZone(u,p))return!1;const L=[{dx:0,dy:-1},{dx:0,dy:1},{dx:-1,dy:0},{dx:1,dy:0}];for(const y of L){const G=u+y.dx,P=p+y.dy;if(G>=0&&G<m&&P>=0&&P<E&&t[P][G]!==a.EMPTY)return!1}}return!0}_isInForbiddenZone(e,t){return e>=S.x&&e<S.x+S.width&&t>=S.y&&t<S.y+S.height}_clearGemFromGrid(e,t){const{gridPattern:r,x:i,y:s}=e;for(let n=0;n<r.length;n++)for(let o=0;o<r[n].length;o++)r[n][o]!==a.EMPTY&&t[s+n]&&t[s+n][i+o]!==void 0&&(t[s+n][i+o]=a.EMPTY)}_paintGemOnGrid(e,t,r){const{gridPattern:i,x:s,y:n}=e;for(let o=0;o<i.length;o++)for(let l=0;l<i[o].length;l++){const h=i[o][l];h!==a.EMPTY&&(t[n+o][s+l]=h,r==null||r.set(`${n+o},${s+l}`,e))}}updateSolutionButtonState(){var i;const e=((i=A[c.difficulty])==null?void 0:i.length)??0,t=c.playerGems.every(s=>s.isValid),r=c.playerGems.length===e;this.ui.checkSolutionBtn.disabled=!(t&&r)}_placeSecretGems(){const e=[],t=Array.from({length:E},()=>Array(m).fill(a.EMPTY)),r=A[c.difficulty];let i=0;for(;e.length<r.length&&i<500;){i++,e.length=0,t.forEach(s=>s.fill(a.EMPTY));for(const s of r){const n=b[s];let o=!1,l=0;for(;!o&&l<200;){l++;let h=n.gridPattern;const g=Math.floor(Math.random()*4);for(let P=0;P<g;P++)h=v(h);const u=h.length,p=h[0].length;if(m<p||E<u)continue;const L=Math.floor(Math.random()*(m-p+1)),y=Math.floor(Math.random()*(E-u+1)),G={id:`secret_${s}_${e.length}`,name:s,x:L,y,rotation:g*90,gridPattern:h};this._isPlacementValid(G,t)&&(this._paintGemOnGrid(G,t),e.push(G),o=!0)}if(!o)break}}return e.length!==r.length?(console.error("Failed to place all secret gems! The difficulty might be too high for the board size."),alert("Fehler bei der Level-Erstellung. Bitte versuchen Sie es erneut."),[]):(e.forEach(s=>this._paintGemOnGrid(s,this.secretGrid,this.secretGemMap)),console.log("Secret gems placed:",e),e)}}class D{constructor(){this.screens={},this.emitterContainers={},this.draggedItemInfo=null,this.lastValidDropTarget={x:-1,y:-1,isValid:!1},this.cellWidth=0,this.cellHeight=0,this.cacheDOMElements(),this.bindGlobalEvents(),this._populateIntroRules()}bindGame(e){this.game=e}cacheDOMElements(){this.screens.main=document.getElementById("screen-main"),this.screens.difficulty=document.getElementById("screen-difficulty"),this.screens.game=document.getElementById("screen-game"),this.screens.end=document.getElementById("screen-end"),this.btnStartGame=document.getElementById("btn-start-game"),this.introRulesEl=document.getElementById("intro-rules"),this.difficultyOptions=document.getElementById("difficulty-options"),this.btnBackToMain1=document.getElementById("btn-back-to-main-1"),this.boardWrapper=document.getElementById("game-board-wrapper"),this.board=document.getElementById("game-board"),this.emitterContainers.top=this.boardWrapper.querySelector(".emitters-top"),this.emitterContainers.bottom=this.boardWrapper.querySelector(".emitters-bottom"),this.emitterContainers.left=this.boardWrapper.querySelector(".emitters-left"),this.emitterContainers.right=this.boardWrapper.querySelector(".emitters-right"),this.gemCanvas=document.getElementById("gem-canvas"),this.gemCtx=this.gemCanvas.getContext("2d"),this.pathOverlay=document.getElementById("path-overlay"),this.pathCtx=this.pathOverlay.getContext("2d"),this.dragPreviewEl=document.getElementById("drag-preview"),this.dragPreviewCanvas=document.createElement("canvas"),this.dragPreviewEl.appendChild(this.dragPreviewCanvas),this.dragPreviewCtx=this.dragPreviewCanvas.getContext("2d"),this.gemToolbar=document.getElementById("gem-toolbar"),this.logList=document.getElementById("log-list"),this.actionsTabBtn=document.getElementById("actions-tab-btn"),this.logTabBtn=document.getElementById("log-tab-btn"),this.checkSolutionBtn=document.getElementById("check-solution-btn"),this.giveUpBtn=document.getElementById("give-up-btn"),this.endTitle=document.getElementById("end-title"),this.endStats=document.getElementById("end-stats"),this.endSolutionCanvas=document.getElementById("end-solution-canvas"),this.endSolutionCtx=this.endSolutionCanvas.getContext("2d"),this.btnNewLevel=document.getElementById("btn-new-level"),this.btnMenu=document.getElementById("btn-menu")}bindGlobalEvents(){this.btnStartGame.addEventListener("click",()=>this.game.showDifficultySelect()),this.btnNewLevel.addEventListener("click",()=>{c.difficulty&&this.game.start(c.difficulty)}),this.btnMenu.addEventListener("click",()=>this.game.showMainMenu()),this.btnBackToMain1.addEventListener("click",()=>this.game.showMainMenu()),this.actionsTabBtn.addEventListener("click",()=>this.switchTab("actions")),this.logTabBtn.addEventListener("click",()=>this.switchTab("log")),this.checkSolutionBtn.addEventListener("click",()=>this.game.checkSolution()),this.giveUpBtn.addEventListener("click",()=>this.game.giveUp()),document.addEventListener("keydown",e=>{if(e.key==="n"&&(c.status===I.PLAYING||c.status===I.GAME_OVER)){c.difficulty&&this.game.start(c.difficulty);return}c.status===I.PLAYING&&(e.key==="Escape"?this.game.showMainMenu():e.key==="d"&&this.game.toggleDebugMode())}),document.addEventListener("dragstart",e=>this.handleDragStart(e)),document.addEventListener("dragover",e=>this.handleDragOver(e)),document.addEventListener("drop",e=>this.handleDrop(e)),document.addEventListener("dragend",e=>this.handleDragEnd(e)),this.board.addEventListener("click",e=>this.handleBoardClick(e)),this.boardWrapper.addEventListener("mouseover",e=>this.handleEmitterHover(e)),this.boardWrapper.addEventListener("mouseout",e=>this.handleEmitterMouseOut(e)),this.logList.addEventListener("mousedown",e=>this.handleLogPress(e)),this.logList.addEventListener("mouseup",()=>this.clearPath()),this.logList.addEventListener("mouseleave",()=>this.clearPath()),this.logList.addEventListener("touchstart",e=>this.handleLogPress(e),{passive:!0}),this.logList.addEventListener("touchend",()=>this.clearPath())}setupGameUI(){this.populateEmitters(),this.updateToolbar(),this.logList.innerHTML="",this.clearPath(),this.game.updateSolutionButtonState(),this.switchTab("actions"),new ResizeObserver(()=>this.onBoardResize()).observe(this.board)}showScreen(e){e==="difficulty"&&this.populateDifficultyOptions(),Object.values(this.screens).forEach(t=>t.classList.add("hidden")),this.screens[e].classList.remove("hidden")}populateDifficultyOptions(){this.difficultyOptions.innerHTML="";const e={[R.NORMAL]:"Die Grundlagen. Lerne die farbigen und weissen Steine kennen.",[R.MITTEL]:"Eine neue Herausforderung. Ein transparenter Prisma-Stein lenkt das Licht ab, ohne es zu färben.",[R.SCHWER]:"Expertenmodus. Neben dem transparenten kommt ein schwarzer, Licht absorbierender Stein in Spiel."};Object.values(R).forEach(t=>{const r=document.createElement("button");r.innerHTML=`${t}<div class="difficulty-desc">${e[t]}</div>`,r.onclick=()=>this.game.start(t),this.difficultyOptions.appendChild(r)})}populateEmitters(){Object.values(this.emitterContainers).forEach(e=>e.innerHTML="");for(let e=0;e<m;e++)this.emitterContainers.top.appendChild(this.createEmitter(`T${e+1}`));for(let e=0;e<m;e++)this.emitterContainers.bottom.appendChild(this.createEmitter(`B${e+1}`));for(let e=0;e<E;e++)this.emitterContainers.left.appendChild(this.createEmitter(`L${e+1}`));for(let e=0;e<E;e++)this.emitterContainers.right.appendChild(this.createEmitter(`R${e+1}`))}onBoardResize(){const e=this.board.getBoundingClientRect();if(e.width===0||e.height===0)return;const t=window.devicePixelRatio||1;this.cellWidth=e.width/m,this.cellHeight=e.height/E,[this.pathOverlay,this.gemCanvas].forEach(r=>{r.width=e.width*t,r.height=e.height*t,r.style.width=`${e.width}px`,r.style.height=`${e.height}px`,r.getContext("2d").scale(t,t)}),this.redrawAll()}createEmitter(e){const t=document.createElement("button");return t.className="emitter",t.dataset.id=e,t.textContent=e,t.addEventListener("click",()=>this.game.sendWave(e)),t}_getGemTooltip(e){var r;const t=b[e];if(!t)return"";switch(e){case"TRANSPARENT":return"Reflektiert nur den Lichtstrahl, aber gibt keine weitere Farbe dazu, der Lichtstrahl behält seine aktuelle Farbe";case"SCHWARZ":return"Absorbiert das Licht, wenn er vom Lichtstrahl getroffen wird. Und es kommt kein Licht zurück.";default:if(t.baseGems&&t.baseGems.length>0){const i=t.baseGems[0],s=(r=B[i])==null?void 0:r.toLowerCase();if(s)return`Fügt dem Lichtstrahl '${s}' hinzu, wenn er getroffen wird.`}return`Edelstein ${e}`}}updateToolbar(){this.gemToolbar.innerHTML="",c.difficulty&&A[c.difficulty].forEach(e=>{const t=b[e],r=document.createElement("div");r.className="toolbar-gem",r.draggable=!0,r.dataset.gemName=e,r.title=this._getGemTooltip(e);const i=document.createElement("canvas");i.className="toolbar-gem-canvas",r.appendChild(i),this.gemToolbar.appendChild(r),setTimeout(()=>this.drawToolbarGem(i,t),0)})}drawToolbarGem(e,t){const r=e.getContext("2d");if(!r)return;const i=window.devicePixelRatio||1;e.width=e.clientWidth*i,e.height=e.clientHeight*i,r.scale(i,i);const s=t.gridPattern,n=s.length,o=s[0].length,l=Math.max(o,n),h=e.clientWidth/l,g=e.clientHeight/l,u=(e.clientWidth-o*h)/2,p=(e.clientHeight-n*g)/2;for(let L=0;L<n;L++)for(let y=0;y<o;y++){const G=s[L][y];G!==a.EMPTY&&this.drawCellShape(r,y*h+u,L*g+p,h,g,G,t.color)}}redrawAll(){this.gemCtx.clearRect(0,0,this.gemCanvas.width,this.gemCanvas.height),this._drawGrid(this.gemCtx),this.board.querySelectorAll(".gem-overlay").forEach(e=>e.remove()),c.status===I.PLAYING&&(c.debugMode?this.drawDebugSolution(this.gemCtx):this.clearPath(),this.drawGemGrid(this.gemCtx,this.game.playerGrid),c.playerGems.forEach(e=>this.addGemOverlay(e)))}_drawGrid(e,t,r){const i=t??e.canvas.clientWidth,s=r??e.canvas.clientHeight,n=i/m,o=s/E;e.strokeStyle="rgba(74, 98, 122, 0.5)",e.lineWidth=1,e.beginPath();for(let l=1;l<m;l++)e.moveTo(l*n,0),e.lineTo(l*n,s);for(let l=1;l<E;l++)e.moveTo(0,l*o),e.lineTo(i,l*o);e.stroke()}drawGemGrid(e,t){for(let r=0;r<E;r++)for(let i=0;i<m;i++){const s=t[r][i];if(s!==a.EMPTY){const n=c.playerGems.find(o=>i>=o.x&&i<o.x+o.gridPattern[0].length&&r>=o.y&&r<o.y+o.gridPattern.length&&o.gridPattern[r-o.y][i-o.x]===s);n&&this.drawCellShape(e,i*this.cellWidth,r*this.cellHeight,this.cellWidth,this.cellHeight,s,b[n.name].color)}}}drawDebugSolution(e){if(!this.game.secretGrid||c.secretGems.length===0)return;const t=this.game.secretGrid;e.save(),e.globalAlpha=.2;for(let i=0;i<E;i++)for(let s=0;s<m;s++){const n=t[i][s];if(n!==a.EMPTY){const o=c.secretGems.find(l=>s>=l.x&&s<l.x+l.gridPattern[0].length&&i>=l.y&&i<l.y+l.gridPattern.length&&l.gridPattern[i-l.y][s-l.x]===n);o&&this.drawCellShape(e,s*this.cellWidth,i*this.cellHeight,this.cellWidth,this.cellHeight,n,b[o.name].color)}}e.restore(),e.save(),e.fillStyle="#000000",e.textAlign="center",e.textBaseline="middle";const r=Math.min(this.cellWidth/3,14);e.font=`bold ${r}px sans-serif`;for(let i=0;i<E;i++)for(let s=0;s<m;s++){const n=t[i][s];let o="";switch(n){case a.TRIANGLE_TL:o="TL";break;case a.TRIANGLE_TR:o="TR";break;case a.TRIANGLE_BL:o="BL";break;case a.TRIANGLE_BR:o="BR";break}if(o){const l=(s+.5)*this.cellWidth,h=(i+.5)*this.cellHeight;e.fillText(o,l,h)}}e.restore()}drawFinalSolution(e,t,r){const i=e.canvas,s=window.devicePixelRatio||1,n=i.getBoundingClientRect();if(n.width===0||n.height===0)return;i.width=n.width*s,i.height=n.height*s,e.scale(s,s),e.clearRect(0,0,n.width,n.height),this._drawGrid(e,n.width,n.height);const o=n.width/m,l=n.height/E;for(let h=0;h<E;h++)for(let g=0;g<m;g++){const u=t[h][g];if(u!==a.EMPTY){const p=r.find(L=>g>=L.x&&g<L.x+L.gridPattern[0].length&&h>=L.y&&h<L.y+L.gridPattern.length&&L.gridPattern[h-L.y][g-L.x]===u);p&&this.drawCellShape(e,g*o,h*l,o,l,u,b[p.name].color,!0)}}}drawCellShape(e,t,r,i,s,n,o,l=!1){switch(o===f.TRANSPARENT?(e.fillStyle="transparent",e.strokeStyle="#a4d4e4",e.lineWidth=2):(e.fillStyle=o,e.strokeStyle=l?f.correct:"rgba(0,0,0,0.4)",e.lineWidth=l?2:1),e.beginPath(),n){case a.BLOCK:case a.ABSORB:e.rect(t,r,i,s);break;case a.TRIANGLE_TL:e.moveTo(t,r),e.lineTo(t+i,r),e.lineTo(t,r+s),e.closePath();break;case a.TRIANGLE_TR:e.moveTo(t,r),e.lineTo(t+i,r),e.lineTo(t+i,r+s),e.closePath();break;case a.TRIANGLE_BR:e.moveTo(t+i,r),e.lineTo(t+i,r+s),e.lineTo(t,r+s),e.closePath();break;case a.TRIANGLE_BL:e.moveTo(t,r),e.lineTo(t,r+s),e.lineTo(t+i,r+s),e.closePath();break}e.fill(),e.stroke()}addGemOverlay(e){if(!this.board.clientWidth)return;const t=document.createElement("div");t.id=e.id,t.className="gem-overlay",t.draggable=!0;const r=e.gridPattern.length,i=e.gridPattern[0].length;t.style.left=`${e.x*this.cellWidth}px`,t.style.top=`${e.y*this.cellHeight}px`,t.style.width=`${i*this.cellWidth}px`,t.style.height=`${r*this.cellHeight}px`,e.isValid||t.classList.add("invalid-pos"),this.board.appendChild(t)}getPathColor(e){if(e.absorbed)return f.ABSORBIERT;if(e.colors.length===0)return"rgba(236, 240, 241, 0.7)";const t=[...e.colors].sort().join(",");return w[t]||"#ccc"}showWavePath(e){if(!c.debugMode)return;const t=this.getPathColor(e);this.drawPath(e.path,t)}drawPath(e,t){if(this.clearPath(),!(e.length<2)){this.pathCtx.strokeStyle=t,this.pathCtx.lineWidth=3,this.pathCtx.lineCap="round",this.pathCtx.lineJoin="round",this.pathCtx.shadowColor="rgba(0,0,0,0.5)",this.pathCtx.shadowBlur=5,this.pathCtx.beginPath(),this.pathCtx.moveTo(e[0].x*this.cellWidth,e[0].y*this.cellHeight);for(let r=1;r<e.length;r++)this.pathCtx.lineTo(e[r].x*this.cellWidth,e[r].y*this.cellHeight);this.pathCtx.stroke()}}clearPath(){this.pathCtx.clearRect(0,0,this.pathOverlay.width,this.pathOverlay.height)}switchTab(e){document.querySelectorAll(".tab-btn, .tab-panel").forEach(t=>t.classList.remove("active")),document.getElementById(`${e}-tab-btn`).classList.add("active"),document.getElementById(`${e}-panel`).classList.add("active")}updateEmitterState(e,t){const r=n=>{if(!n||n.length<7)return"#ffffff";const o=parseInt(n.slice(1,3),16),l=parseInt(n.slice(3,5),16),h=parseInt(n.slice(5,7),16);return o*.299+l*.587+h*.114>186?"#000000":"#ffffff"},i=this.getPathColor(t),s=this.boardWrapper.querySelector(`.emitter[data-id="${e}"]`);if(s&&(s.classList.add("used"),s.style.backgroundColor=i,s.style.color=r(i)),t.exitId){const n=this.boardWrapper.querySelector(`.emitter[data-id="${t.exitId}"]`);n&&(n.style.backgroundColor=i,n.style.color=r(i))}}addLogEntry(e,t){const r=document.createElement("li");r.dataset.waveId=t;const{result:i}=e,s=`${t} ➔ ${i.exitId}`,n=this.getPathColor(i);r.innerHTML=`<span>${s}</span><div class="log-color-box" style="background-color: ${n};"></div>`,this.logList.prepend(r),this.switchTab("log")}showEndScreen(e,t,r,i){this.endTitle.textContent=e?"Gewonnen!":"Verloren!",this.endStats.textContent=e?`Du hast die Mine in ${t} Abfragen gelöst!`:`Du hast ${t} Abfragen gebraucht.`,this.showScreen("end"),requestAnimationFrame(()=>{this.drawFinalSolution(this.endSolutionCtx,r,i)})}handleDragStart(e){const t=e.target;if(!e.dataTransfer||!t.draggable)return;const r=t.closest(".toolbar-gem"),i=t.closest(".gem-overlay");let s;if(r){const g=r.dataset.gemName;s={id:g,name:g,from:"toolbar",gridPattern:b[g].gridPattern,element:r}}else if(i){const g=c.playerGems.find(u=>u.id===i.id);if(!g)return;s={id:g.id,name:g.name,from:"board",gridPattern:g.gridPattern,element:i}}else return;e.dataTransfer.effectAllowed="move",e.dataTransfer.setData("text/plain",s.id),this.draggedItemInfo=s,setTimeout(()=>{s.element.classList.add("dragging")},0),e.dataTransfer.setDragImage(new Image,0,0);const n=s.gridPattern[0].length,o=s.gridPattern.length;this.dragPreviewEl.style.width=`${n*this.cellWidth}px`,this.dragPreviewEl.style.height=`${o*this.cellHeight}px`,this.dragPreviewEl.style.display="block";const l=window.devicePixelRatio||1;this.dragPreviewCanvas.width=n*this.cellWidth*l,this.dragPreviewCanvas.height=o*this.cellHeight*l,this.dragPreviewCtx.scale(l,l);const h=b[s.name];for(let g=0;g<o;g++)for(let u=0;u<n;u++){const p=s.gridPattern[g][u];p!==a.EMPTY&&this.drawCellShape(this.dragPreviewCtx,u*this.cellWidth,g*this.cellHeight,this.cellWidth,this.cellHeight,p,h.color)}}handleDragOver(e){if(!this.draggedItemInfo)return;e.preventDefault();const t=this.board.getBoundingClientRect(),r=e.clientX-t.left,i=e.clientY-t.top,s=Math.round(r/this.cellWidth-.5),n=Math.round(i/this.cellHeight-.5),o=this.board.offsetLeft+s*this.cellWidth,l=this.board.offsetTop+n*this.cellHeight;this.dragPreviewEl.style.transform=`translate(${o}px, ${l}px)`;const h={...this.draggedItemInfo,x:s,y:n},g=this.game.canPlaceGem(h);this.lastValidDropTarget={x:s,y:n,isValid:g},g?(this.dragPreviewEl.classList.add("valid-pos"),this.dragPreviewEl.classList.remove("invalid-pos")):(this.dragPreviewEl.classList.add("invalid-pos"),this.dragPreviewEl.classList.remove("valid-pos"))}handleDrop(e){if(!this.draggedItemInfo)return;e.preventDefault();const t=this.board.getBoundingClientRect();if(e.clientX<t.left||e.clientX>t.right||e.clientY<t.top||e.clientY>t.bottom)this.draggedItemInfo.from==="board"&&this.game.removePlayerGem(this.draggedItemInfo.id);else if(this.lastValidDropTarget.isValid){const{x:i,y:s}=this.lastValidDropTarget;this.draggedItemInfo.from==="toolbar"?this.game.addPlayerGem(this.draggedItemInfo.name,i,s):this.game.movePlayerGem(this.draggedItemInfo.id,i,s)}}handleDragEnd(e){this.draggedItemInfo&&(this.dragPreviewEl.style.display="none",this.dragPreviewEl.classList.remove("valid-pos","invalid-pos"),this.draggedItemInfo=null,this.redrawAll())}handleBoardClick(e){const t=e.target;if(!(t instanceof Element))return;const r=t.closest(".gem-overlay");r&&!this.draggedItemInfo&&this.game.rotatePlayerGem(r.id)}_getPathColorName(e){if(e.absorbed)return"Absorbiert";if(e.colors.length===0)return"Keine Farbe";const t=[...e.colors].sort().join(",");return B[t]||"Unbekannte Mischung"}handleEmitterHover(e){const t=e.target;if(!t.classList.contains("emitter"))return;const r=t.dataset.id;if(!r)return;const i=c.log.find(g=>g.waveId===r||g.result.exitId===r);if(!i)return;const s=this._getPathColorName(i.result),n=i.waveId,o=i.result.exitId,l=this.boardWrapper.querySelector(`.emitter[data-id="${n}"]`),h=this.boardWrapper.querySelector(`.emitter[data-id="${o}"]`);if(l&&h){const u=this.getPathColor(i.result).toLowerCase()===f.ROT.toLowerCase()?"highlight-pair-alt":"highlight-pair";l.classList.add(u),h.classList.add(u),l.title=s,h.title=s}}handleEmitterMouseOut(e){e.target.classList.contains("emitter")&&this.boardWrapper.querySelectorAll(".emitter").forEach(r=>{r.classList.remove("highlight-pair","highlight-pair-alt"),r.title=""})}handleLogPress(e){const t=e.target;if(!(t instanceof Element))return;const r=t.closest("li");if(!r)return;const i=r.dataset.waveId,s=c.log.find(n=>n.waveId===i);if(s){const n=this.getPathColor(s.result);this.drawPath(s.path,n)}}_populateIntroRules(){this.introRulesEl.innerHTML=`
            <h3>Spielanleitung</h3>
            <p><strong>Ziel:</strong> Finde die Position und Ausrichtung der versteckten Edelsteine.</p>
            <ul>
                <li>Sende Lichtwellen von den Rändern in das Spielfeld.</li>
                <li>Die austretende Farbe und Position verraten, welche Steine getroffen wurden.</li>
                <li>Ziehe Edelsteine aus der Werkzeugleiste auf das Feld. Du kannst sie verschieben und drehen.</li>
                <li>Ein Klick auf einen platzierten Stein dreht ihn um 90°.</li>
                <li>Steine dürfen sich nicht überlappen oder Kante an Kante liegen.</li>
                <li>Drücke 'n' für ein neues Level mit der aktuellen Schwierigkeit.</li>
            </ul>
            <p><strong>Farbmischung:</strong></p>
            <ul>
                <li>Rot + Blau = Lila</li>
                <li>Blau + Gelb = Grün</li>
                <li>Rot + Gelb = Orange</li>
                <li>Jede Farbe + Weiss = Hellere Variante</li>
                <li>Alle 3 Grundfarben = Dunkelgrau</li>
            </ul>
        `}}document.addEventListener("DOMContentLoaded",()=>{const d=new D,e=new H(d);window.game=e});
