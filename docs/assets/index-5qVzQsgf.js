(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const n of i)if(n.type==="childList")for(const r of n.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function t(i){const n={};return i.integrity&&(n.integrity=i.integrity),i.referrerPolicy&&(n.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?n.credentials="include":i.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(i){if(i.ep)return;i.ep=!0;const n=t(i);fetch(i.href,n)}})();const T=8,v=10;var a=(c=>(c[c.EMPTY=0]="EMPTY",c[c.BLOCK=1]="BLOCK",c[c.TRIANGLE_TL=2]="TRIANGLE_TL",c[c.TRIANGLE_TR=3]="TRIANGLE_TR",c[c.TRIANGLE_BR=4]="TRIANGLE_BR",c[c.TRIANGLE_BL=5]="TRIANGLE_BL",c[c.ABSORB=6]="ABSORB",c))(a||{});const w={TRAINING:"TRAINING",NORMAL:"NORMAL",MEDIUM:"MEDIUM",HARD:"HARD",CUSTOM:"CUSTOM"},y={GELB:"#f1c40f",ROT:"#e74c3c",BLAU:"#3498db",WEISS:"#ecf0f1",TRANSPARENT:"#95a5a6",LILA:"#9b59b6",HIMMELBLAU:"#5dade2",GRUEN:"#2ecc71",PINK:"#ff8a80",ORANGE:"#e67e22",ZITRONE:"#ffff8d",HELLLILA:"#ba68c8",SCHWARZ_GEM:"#1d1d1d",SCHWARZ_MIX:"#34495e",HELLGRUEN:"#81c784",HELLORANGE:"#ffb74d",GRAU:"#9e9e9e",ABSORBIERT:"#17202a",correct:"#4caf50",INVALID_GEM:"#e74c3c"},Y={ROT:{nameKey:"colors.red",color:y.ROT,baseGems:["ROT"]},GELB:{nameKey:"colors.yellow",color:y.GELB,baseGems:["GELB"]},BLAU:{nameKey:"colors.blue",color:y.BLAU,baseGems:["BLAU"]},WEISS:{nameKey:"colors.white",color:y.WEISS,baseGems:["WEISS"]},TRANSPARENT:{nameKey:"colors.transparent",color:y.TRANSPARENT,baseGems:[]},SCHWARZ:{nameKey:"colors.black",color:y.SCHWARZ_GEM,baseGems:[],special:"absorbs"}},$={BLAU:y.BLAU,GELB:y.GELB,ROT:y.ROT,WEISS:y.WEISS,"BLAU,ROT":y.LILA,"BLAU,WEISS":y.HIMMELBLAU,"BLAU,GELB":y.GRUEN,"ROT,WEISS":y.PINK,"GELB,ROT":y.ORANGE,"GELB,WEISS":y.ZITRONE,"BLAU,ROT,WEISS":y.HELLLILA,"BLAU,GELB,ROT":y.SCHWARZ_MIX,"BLAU,GELB,WEISS":y.HELLGRUEN,"GELB,ROT,WEISS":y.HELLORANGE,"BLAU,GELB,ROT,WEISS":y.GRAU},W={BLAU:"colors.blue",GELB:"colors.yellow",ROT:"colors.red",WEISS:"colors.white",TRANSPARENT:"colors.transparent",SCHWARZ:"colors.black","BLAU,ROT":"colors.purple","BLAU,WEISS":"colors.skyBlue","BLAU,GELB":"colors.green","ROT,WEISS":"colors.lightRed","GELB,ROT":"colors.orange","GELB,WEISS":"colors.lightYellow","BLAU,ROT,WEISS":"colors.lightPurple","BLAU,GELB,ROT":"colors.darkGray","BLAU,GELB,WEISS":"colors.lightGreen","GELB,ROT,WEISS":"colors.lightOrange","BLAU,GELB,ROT,WEISS":"colors.gray"},_={GELB:{name:"GELB",color:y.GELB,baseGems:["GELB"],gridPattern:[[a.TRIANGLE_BL,a.EMPTY],[a.BLOCK,a.TRIANGLE_BL]]},ROT:{name:"ROT",color:y.ROT,baseGems:["ROT"],gridPattern:[[a.TRIANGLE_BR,a.BLOCK,a.TRIANGLE_TL]]},BLAU:{name:"BLAU",color:y.BLAU,baseGems:["BLAU"],gridPattern:[[a.EMPTY,a.TRIANGLE_BR,a.TRIANGLE_BL,a.EMPTY],[a.TRIANGLE_BR,a.BLOCK,a.BLOCK,a.TRIANGLE_BL]]},WEISS_RAUTE:{name:"WEISS_RAUTE",color:y.WEISS,baseGems:["WEISS"],gridPattern:[[a.TRIANGLE_BR,a.TRIANGLE_BL],[a.TRIANGLE_TR,a.TRIANGLE_TL]]},WEISS_DREIECK:{name:"WEISS_DREIECK",color:y.WEISS,baseGems:["WEISS"],gridPattern:[[a.EMPTY,a.TRIANGLE_BR,a.TRIANGLE_BL,a.EMPTY],[a.TRIANGLE_BR,a.BLOCK,a.BLOCK,a.TRIANGLE_BL]]},TRANSPARENT:{name:"TRANSPARENT",color:y.TRANSPARENT,baseGems:[],gridPattern:[[a.TRIANGLE_BR,a.TRIANGLE_BL]]},SCHWARZ:{name:"SCHWARZ",color:y.SCHWARZ_GEM,baseGems:[],special:"absorbs",gridPattern:[[a.ABSORB,a.ABSORB]]}},F={SHAPE_RTRIANGLE:{nameKey:"shapes.rightTriangle",gridPattern:_.GELB.gridPattern},SHAPE_PARALLEL:{nameKey:"shapes.parallelogram",gridPattern:_.ROT.gridPattern},SHAPE_BIG_TRIANGLE:{nameKey:"shapes.bigTriangle",gridPattern:_.BLAU.gridPattern},SHAPE_DIAMOND:{nameKey:"shapes.diamond",gridPattern:_.WEISS_RAUTE.gridPattern},SHAPE_SMALL_TRIANGLE:{nameKey:"shapes.smallTriangle",gridPattern:_.TRANSPARENT.gridPattern},SHAPE_ABSORBER:{nameKey:"shapes.absorber",gridPattern:_.SCHWARZ.gridPattern},SHAPE_L:{nameKey:"shapes.lShape",gridPattern:[[a.TRIANGLE_BR,a.TRIANGLE_BL],[a.BLOCK,a.TRIANGLE_TL]]},SHAPE_T:{nameKey:"shapes.tShape",gridPattern:[[a.TRIANGLE_BR,a.BLOCK,a.TRIANGLE_BL],[a.TRIANGLE_TR,a.BLOCK,a.TRIANGLE_TL]]},SHAPE_SQUARE:{nameKey:"shapes.square",gridPattern:[[a.TRIANGLE_BR,a.BLOCK],[a.BLOCK,a.TRIANGLE_TL]]},SHAPE_BAR:{nameKey:"shapes.bar",gridPattern:[[a.TRIANGLE_BL],[a.BLOCK],[a.TRIANGLE_TL]]},SHAPE_SMALL:{nameKey:"shapes.small",gridPattern:[[a.TRIANGLE_TR,a.TRIANGLE_BL]]},SHAPE_STRANGE:{nameKey:"shapes.strange",gridPattern:[[a.TRIANGLE_BL,a.TRIANGLE_BR],[a.TRIANGLE_TL,a.TRIANGLE_TR]]}},D={[w.TRAINING]:["GELB","ROT","BLAU","WEISS_RAUTE","WEISS_DREIECK"],[w.NORMAL]:["GELB","ROT","BLAU","WEISS_RAUTE","WEISS_DREIECK"],[w.MEDIUM]:["GELB","ROT","BLAU","WEISS_RAUTE","WEISS_DREIECK","TRANSPARENT"],[w.HARD]:["GELB","ROT","BLAU","WEISS_RAUTE","WEISS_DREIECK","TRANSPARENT","SCHWARZ"]},V={[w.TRAINING]:[{limit:8,textKey:"ratings.training.1"},{limit:10,textKey:"ratings.training.2"},{limit:20,textKey:"ratings.training.3"},{limit:1/0,textKey:"ratings.training.4"}],[w.NORMAL]:[{limit:10,textKey:"ratings.normal.1"},{limit:13,textKey:"ratings.normal.2"},{limit:18,textKey:"ratings.normal.3"},{limit:23,textKey:"ratings.normal.4"},{limit:1/0,textKey:"ratings.normal.5"}],[w.MEDIUM]:[{limit:12,textKey:"ratings.medium.1"},{limit:15,textKey:"ratings.medium.2"},{limit:20,textKey:"ratings.medium.3"},{limit:25,textKey:"ratings.medium.4"},{limit:1/0,textKey:"ratings.medium.5"}],[w.HARD]:[{limit:15,textKey:"ratings.hard.1"},{limit:18,textKey:"ratings.hard.2"},{limit:21,textKey:"ratings.hard.3"},{limit:25,textKey:"ratings.hard.4"},{limit:1/0,textKey:"ratings.hard.5"}],[w.CUSTOM]:[{limit:15,textKey:"ratings.hard.1"},{limit:18,textKey:"ratings.hard.2"},{limit:21,textKey:"ratings.hard.3"},{limit:25,textKey:"ratings.hard.4"},{limit:1/0,textKey:"ratings.hard.5"}]};var G=(c=>(c[c.MAIN_MENU=0]="MAIN_MENU",c[c.DIFFICULTY_SELECT=1]="DIFFICULTY_SELECT",c[c.CUSTOM_CREATOR=2]="CUSTOM_CREATOR",c[c.PLAYING=3]="PLAYING",c[c.GAME_OVER=4]="GAME_OVER",c))(G||{});const o={status:0,difficulty:null,secretGems:[],playerGems:[],log:[],waveCount:0,debugMode:!1,showPlayerPathPreview:!1,selectedLogEntryWaveId:null,previewSourceEmitterId:null,activePlayerPath:null,activePlayerResult:null,customGemSet:[],customGemDefinitions:{}};var P=(c=>(c[c.UP=0]="UP",c[c.RIGHT=1]="RIGHT",c[c.DOWN=2]="DOWN",c[c.LEFT=3]="LEFT",c))(P||{});const te={[a.BLOCK]:{0:2,1:3,2:0,3:1},[a.TRIANGLE_TR]:{0:3,1:2,2:0,3:1},[a.TRIANGLE_BL]:{0:2,1:3,2:1,3:0},[a.TRIANGLE_TL]:{0:1,1:3,2:0,3:2},[a.TRIANGLE_BR]:{0:2,1:0,2:3,3:1}},ie={[a.EMPTY]:a.EMPTY,[a.BLOCK]:a.BLOCK,[a.ABSORB]:a.ABSORB,[a.TRIANGLE_TL]:a.TRIANGLE_TR,[a.TRIANGLE_TR]:a.TRIANGLE_BR,[a.TRIANGLE_BR]:a.TRIANGLE_BL,[a.TRIANGLE_BL]:a.TRIANGLE_TL},se={[a.EMPTY]:a.EMPTY,[a.BLOCK]:a.BLOCK,[a.ABSORB]:a.ABSORB,[a.TRIANGLE_TL]:a.TRIANGLE_TR,[a.TRIANGLE_TR]:a.TRIANGLE_TL,[a.TRIANGLE_BR]:a.TRIANGLE_BL,[a.TRIANGLE_BL]:a.TRIANGLE_BR};function ne(c,e){var t;return c===a.EMPTY?null:((t=te[c])==null?void 0:t[e])??null}function H(c){const e=c.length,t=c[0].length,s=Array.from({length:t},()=>Array(e).fill(a.EMPTY));for(let i=0;i<e;i++)for(let n=0;n<t;n++)s[n][e-1-i]=ie[c[i][n]];return s}function U(c){return c.map(e=>e.map(t=>se[t]).reverse())}function z(c){const e=U(c),t=JSON.stringify(e);let s=c;for(let i=0;i<4;i++){if(JSON.stringify(s)===t)return!1;s=H(s)}return!0}const re=100;function ae(c){const e=parseInt(c.substring(1))-1;switch(c[0]){case"T":return{pos:{x:e,y:-1},dir:P.DOWN};case"B":return{pos:{x:e,y:v},dir:P.UP};case"L":return{pos:{x:-1,y:e},dir:P.RIGHT};case"R":return{pos:{x:T,y:e},dir:P.LEFT};default:return null}}function oe(c){return c.y<0?`T${c.x+1}`:c.y>=v?`B${c.x+1}`:c.x<0?`L${c.y+1}`:c.x>=T?`R${c.y+1}`:"Error"}function le(c,e){switch(e){case P.UP:c.y--;break;case P.DOWN:c.y++;break;case P.LEFT:c.x--;break;case P.RIGHT:c.x++;break}}function O(c,e,t,s){const i=ae(t);if(!i)return{exitId:"Error",colors:[],path:[],absorbed:!1};const n={...i.pos};let r=i.dir;const l=[],d=new Set,g=new Set;for(let h=0;h<re;h++){if(le(n,r),l.length===0&&l.push({x:i.pos.x+(i.dir===P.RIGHT?1:i.dir===P.LEFT?0:.5),y:i.pos.y+(i.dir===P.DOWN?1:i.dir===P.UP?0:.5)}),n.x<0||n.x>=T||n.y<0||n.y>=v)return l.push({x:n.x+(r===P.LEFT?1:r===P.RIGHT?0:.5),y:n.y+(r===P.UP?1:r===P.DOWN?0:.5)}),{exitId:oe(n),colors:[...d],path:l,absorbed:!1};const m=c[n.y][n.x];if(m===a.EMPTY)continue;l.push({x:n.x+.5,y:n.y+.5});const u=`${n.y},${n.x}`,f=e.get(u);if(f&&!g.has(f.id)){g.add(f.id);const L=s.getGemDefinition(f.name);L&&L.baseGems&&L.baseGems.forEach(E=>d.add(E))}if(m===a.ABSORB)return{exitId:"Absorbed",colors:[],path:l,absorbed:!0};const S=ne(m,r);S!==null&&(r=S)}return{exitId:"Loop?",colors:[...d],path:l,absorbed:!1}}const q={[a.EMPTY]:[!1,!1,!1,!1],[a.BLOCK]:[!0,!0,!0,!0],[a.ABSORB]:[!0,!0,!0,!0],[a.TRIANGLE_TL]:[!0,!1,!1,!0],[a.TRIANGLE_TR]:[!0,!0,!1,!1],[a.TRIANGLE_BR]:[!1,!0,!0,!1],[a.TRIANGLE_BL]:[!1,!1,!0,!0]};class de{constructor(e){this.secretGrid=[],this.secretGemMap=new Map,this.ui=e,this.ui.bindGame(this),this.showMainMenu()}_initSecretGrid(){this.secretGrid=Array.from({length:v},()=>Array(T).fill(a.EMPTY)),this.secretGemMap.clear()}showMainMenu(){o.status=G.MAIN_MENU,this.ui.showScreen("main")}showDifficultySelect(){o.status=G.DIFFICULTY_SELECT,this.ui.showScreen("difficulty")}showCustomCreator(){o.status=G.CUSTOM_CREATOR,this.ui.showScreen("custom-creator")}showEndScreen(e){o.status=G.GAME_OVER,this.ui.showEndScreen(e,o.waveCount,o.secretGems,o.playerGems)}start(e){if(o.difficulty=e,o.status=G.PLAYING,this._initSecretGrid(),o.secretGems=this._placeSecretGems(),o.secretGems.length===0){this.showDifficultySelect();return}o.playerGems=[],o.log=[],o.waveCount=0,o.debugMode=!1,o.showPlayerPathPreview=!1,o.selectedLogEntryWaveId=null,o.previewSourceEmitterId=null,o.activePlayerPath=null,o.activePlayerResult=null,this.ui.setupGameUI(),this.ui.showScreen("game"),this.ui.redrawAll()}giveUp(){this.showEndScreen(!1)}toggleDebugMode(){o.debugMode=!o.debugMode,this.ui.redrawAll()}togglePlayerPathPreview(){o.showPlayerPathPreview=!o.showPlayerPathPreview,this.ui.updatePreviewToggleState(o.showPlayerPathPreview),this.ui.redrawAll()}getGemDefinition(e){const s=o.difficulty===w.CUSTOM?o.customGemDefinitions[e]:_[e];return s||console.error(`Could not find definition for gem: ${e}`),s}sendWave(e){if(o.status!==G.PLAYING)return;o.waveCount++;const t=O(this.secretGrid,this.secretGemMap,e,this),s=Array.from({length:v},()=>Array(T).fill(a.EMPTY)),i=new Map;o.playerGems.forEach(l=>this._paintGemOnGrid(l,s,i));const n=O(s,i,e,this),r={waveId:e,result:t,path:t.path,playerPath:n.path,playerResult:n};o.log.push(r),this.ui.addLogEntry(r,e),this.setSelectedWave(e,e)}checkSolution(){const e=Array.from({length:v},()=>Array(T).fill(a.EMPTY)),t=new Map;o.playerGems.forEach(n=>this._paintGemOnGrid(n,e,t));const s=[];for(let n=1;n<=T;n++)s.push(`T${n}`,`B${n}`);for(let n=1;n<=v;n++)s.push(`L${n}`,`R${n}`);let i=!0;for(const n of s){const r=O(this.secretGrid,this.secretGemMap,n,this),l=O(e,t,n,this),d=[...r.colors].sort().join(","),g=[...l.colors].sort().join(",");if(r.exitId!==l.exitId||d!==g){i=!1;break}}this.showEndScreen(i)}addPlayerGem(e,t,s){if(o.playerGems.some(g=>g.name===e))return;const n=this.getGemDefinition(e);if(!n)return;const r={id:`player_${Date.now()}`,name:e,x:t,y:s,rotation:0,isFlipped:!1,isFlippable:z(n.gridPattern),gridPattern:n.gridPattern,isValid:!1},l=r.gridPattern.length,d=r.gridPattern[0].length;r.x=Math.max(0,Math.min(t,T-d)),r.y=Math.max(0,Math.min(s,v-l)),o.playerGems.push(r),this._revalidateAllPlayerGems(),this._updateActivePlayerPathPreview(),this.updateSolutionButtonState(),this.ui.updateToolbar(),this.ui.redrawAll()}movePlayerGem(e,t,s){const i=o.playerGems.find(n=>n.id===e);if(i){const n=i.gridPattern.length,r=i.gridPattern[0].length;i.x=Math.max(0,Math.min(t,T-r)),i.y=Math.max(0,Math.min(s,v-n)),this._revalidateAllPlayerGems(),this._updateActivePlayerPathPreview(),this.updateSolutionButtonState(),this.ui.redrawAll()}}removePlayerGem(e){const t=o.playerGems.findIndex(s=>s.id===e);t>-1&&(o.playerGems.splice(t,1),this._revalidateAllPlayerGems(),this._updateActivePlayerPathPreview(),this.updateSolutionButtonState(),this.ui.updateToolbar(),this.ui.redrawAll())}rotatePlayerGem(e){const t=o.playerGems.find(s=>s.id===e);if(t){const s=t.gridPattern[0].length,i=t.gridPattern.length,n=t.x+s/2,r=t.y+i/2;t.rotation=(t.rotation+90)%360,t.gridPattern=H(t.gridPattern);const l=t.gridPattern[0].length,d=t.gridPattern.length;t.x=Math.round(n-l/2),t.y=Math.round(r-d/2),t.x=Math.max(0,Math.min(t.x,T-l)),t.y=Math.max(0,Math.min(t.y,v-d)),this._revalidateAllPlayerGems(),this._updateActivePlayerPathPreview(),this.updateSolutionButtonState(),this.ui.redrawAll()}}flipPlayerGem(e){const t=o.playerGems.find(s=>s.id===e);t&&t.isFlippable&&(t.isFlipped=!t.isFlipped,t.gridPattern=U(t.gridPattern),this._revalidateAllPlayerGems(),this._updateActivePlayerPathPreview(),this.updateSolutionButtonState(),this.ui.redrawAll())}canPlaceGem(e){return this._isPlacementValid(e,o.playerGems)}setSelectedWave(e,t){o.selectedLogEntryWaveId=e,o.previewSourceEmitterId=t,this._updateActivePlayerPathPreview(),this.ui.handleSelectionChange()}_updateActivePlayerPathPreview(){if(!o.previewSourceEmitterId){o.activePlayerPath=null,o.activePlayerResult=null;return}const e=Array.from({length:v},()=>Array(T).fill(a.EMPTY)),t=new Map;o.playerGems.forEach(i=>this._paintGemOnGrid(i,e,t));const s=O(e,t,o.previewSourceEmitterId,this);o.activePlayerPath=s.path,o.activePlayerResult=s}_revalidateAllPlayerGems(){o.playerGems.forEach(e=>{e.isValid=this._isPlacementValid(e,o.playerGems)})}_doGemsCollide(e,t){const s=e.gridPattern.length,i=e.gridPattern[0].length,n=t.gridPattern.length,r=t.gridPattern[0].length,l=this.getGemDefinition(e.name),d=this.getGemDefinition(t.name),g=(l==null?void 0:l.special)==="absorbs"||(d==null?void 0:d.special)==="absorbs";for(let h=0;h<s;h++)for(let m=0;m<i;m++){const u=e.gridPattern[h][m];if(u===a.EMPTY)continue;const f=e.x+m,S=e.y+h;for(let L=0;L<n;L++)for(let E=0;E<r;E++){const b=t.gridPattern[L][E];if(b===a.EMPTY)continue;const A=t.x+E,I=t.y+L,R=Math.abs(f-A),B=Math.abs(S-I);if(g){if(R<=1&&B<=1)return!0}else{if(R===0&&B===0)return!0;if(R+B===1){const M=q[u],C=q[b];if(f<A){if(M[1]&&C[3])return!0}else if(f>A){if(M[3]&&C[1])return!0}else if(S<I){if(M[2]&&C[0])return!0}else if(M[0]&&C[2])return!0}}}}return!1}_isPlacementValid(e,t){const{gridPattern:s,x:i,y:n,id:r}=e,l=s.length,d=s[0].length;if(i<0||n<0||i+d>T||n+l>v)return!1;for(const g of t)if(!(r&&g.id===r)&&this._doGemsCollide(e,g))return!1;return!0}_paintGemOnGrid(e,t,s){const{gridPattern:i,x:n,y:r}=e;for(let l=0;l<i.length;l++)for(let d=0;d<i[l].length;d++){const g=i[l][d];g!==a.EMPTY&&t[r+l]&&t[r+l][n+d]!==void 0&&(t[r+l][n+d]=g,s==null||s.set(`${r+l},${n+d}`,e))}}updateSolutionButtonState(){var n;const t=o.difficulty===w.CUSTOM?o.customGemSet.length:((n=D[o.difficulty])==null?void 0:n.length)??0,s=o.playerGems.every(r=>r.isValid),i=o.playerGems.length===t;this.ui.checkSolutionBtn.disabled=!(s&&i)}_placeSecretGems(){const e=[],s=o.difficulty===w.CUSTOM?o.customGemSet:D[o.difficulty];if(!s||s.length===0)return console.error("Gem set is empty for difficulty:",o.difficulty),[];let i=0;for(;e.length<s.length&&i<500;){i++,e.length=0;for(const n of s){const r=this.getGemDefinition(n);if(!r)continue;let l=!1,d=0;for(;!l&&d<200;){d++;const g=z(r.gridPattern),h=g&&Math.random()<.5;let m=r.gridPattern;h&&(m=U(m));const u=Math.floor(Math.random()*4);for(let A=0;A<u;A++)m=H(m);const f=m.length,S=m[0].length;if(T<S||v<f)continue;const L=Math.floor(Math.random()*(T-S+1)),E=Math.floor(Math.random()*(v-f+1)),b={id:`secret_${n}_${e.length}`,name:n,x:L,y:E,rotation:u*90,isFlipped:h,isFlippable:g,gridPattern:m};this._isPlacementValid(b,e)&&(e.push(b),l=!0)}if(!l)break}}return e.length!==s.length?(console.error("Failed to place all secret gems!"),alert("Fehler bei der Level-Erstellung. Bitte versuchen Sie es erneut."),[]):(e.forEach(n=>this._paintGemOnGrid(n,this.secretGrid,this.secretGemMap)),console.log("Secret gems placed:",e),e)}}class k{constructor(e,t){this.state="normal",this.isUsed=!1,this.usedColor=null,this.cornerRadius=4,this.id=e,this.label=t,this.rect={x:0,y:0,width:0,height:0}}isInside(e,t){return e>=this.rect.x&&e<=this.rect.x+this.rect.width&&t>=this.rect.y&&t<=this.rect.y+this.rect.height}draw(e,t=!1){e.save();const s=this.isUsed&&this.usedColor?this.usedColor:"#4a627a";e.beginPath();const i=new Path2D;i.roundRect(this.rect.x,this.rect.y,this.rect.width,this.rect.height,this.cornerRadius),e.fillStyle=s,e.fill(i),t?(e.strokeStyle="#f1c40f",e.lineWidth=3,e.shadowColor="#f1c40f",e.shadowBlur=8,e.stroke(i),e.shadowColor="transparent",e.shadowBlur=0):this.state==="focused"&&(e.strokeStyle="#3498db",e.lineWidth=2,e.stroke(i));const r=(l=>{if(!l)return"#ecf0f1";let d=0,g=0,h=0;try{if(l.startsWith("#")){let u=l.substring(1);if(u.length===3&&(u=u.split("").map(f=>f+f).join("")),u.length!==6)return"#ecf0f1";d=parseInt(u.substring(0,2),16),g=parseInt(u.substring(2,4),16),h=parseInt(u.substring(4,6),16)}else if(l.startsWith("rgb")){const u=l.substring(l.indexOf("(")+1,l.lastIndexOf(")")).split(/,\s*/);d=parseInt(u[0]),g=parseInt(u[1]),h=parseInt(u[2])}else return"#ecf0f1"}catch{return"#ecf0f1"}return isNaN(d)||isNaN(g)||isNaN(h)?"#ecf0f1":(d*299+g*587+h*114)/1e3>=149?"#2c3e50":"#ecf0f1"})(s);e.fillStyle=r,e.font=`bold ${this.rect.height*.45}px -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif`,e.textAlign="center",e.textBaseline="middle",e.fillText(this.label,this.rect.x+this.rect.width/2,this.rect.y+this.rect.height/2),e.restore()}}const X={de:{lang:{name:"Deutsch",flag:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 5 3"><path d="M0 0h5v3H0z"/><path d="M0 1h5v2H0z" fill="#D00"/><path d="M0 2h5v1H0z" fill="#FFCE00"/></svg>',switch:"Sprache wechseln"},mainMenu:{startGame:"Spiel starten"},difficulty:{title:"Schwierigkeitsgrad",TRAINING:"Training",TRAINING_desc:"Ideal zum Lernen des Spiels, mit dem Verlauf der Lichtstrahlen.",NORMAL:"Normal",NORMAL_desc:"Die Grundlagen. Lerne die farbigen und weissen Steine kennen.",MEDIUM:"Mittel",MEDIUM_desc:"Eine neue Herausforderung. Ein transparenter Prisma-Stein lenkt das Licht ab, ohne es zu färben.",HARD:"Schwer",HARD_desc:"Expertenmodus. Neben dem transparenten kommt ein schwarzer, Licht absorbierender Stein in Spiel.",CUSTOM:"Eigenes Level",CUSTOM_desc:"Wähle deine eigenen Steine und erstelle eine neue Herausforderung."},customCreator:{title:"Eigenes Level erstellen",selectColor:"1. Farbe wählen",selectShape:"2. Form wählen",addGem:"Edelstein hinzufügen +",levelSet:"Level-Set (deine Auswahl)",startLevel:"Level starten",alert:{selectColorAndShape:"Bitte wähle zuerst eine Farbe und eine Form aus."}},gameScreen:{tabs:{actions:"Aktionen",logbook:"Logbuch",rules:"Regeln"},availableGems:"Verfügbare Edelsteine:",showPath:"Aktuellen Lichtweg anzeigen (F)"},endScreen:{winTitle:"Gewonnen!",lossTitle:"Verloren!",stats:"Du hast die Mine in {{count}} Abfragen gelöst.",retry:"Bitte versuche es erneut.",solutionLabel:{correct:"Korrekte Lösung:",alternative:"Alternative Lösung gefunden! Deine Lösung (transparent):",yourInput:"Deine Eingabe (über der korrekten Lösung):"},ratingLegendTitle:"Bewertung für {{difficulty}}",ratingLegend:{upTo:"bis {{end}} Abfragen",range:"{{start}} - {{end}} Abfragen",moreThan:"mehr als {{start}} Abfragen"}},buttons:{back:"Zurück",newLevel:"Neues Level",menu:"Menü",submitSolution:"Lösung einreichen",giveUp:"Aufgeben",remove:"Entfernen"},rules:{title:"Spielanleitung",objectiveTitle:"Ziel:",objective:"Finde die Position und Ausrichtung der versteckten Edelsteine.",item1:"Sende Lichtwellen von den Rändern in das Spielfeld.",item2:"Die austretende Farbe und Position verraten, welche Steine getroffen wurden.",item3:"Ziehe Edelsteine aus der Werkzeugleiste auf das Feld. Du kannst sie verschieben und drehen.",item4:"Ein Klick auf einen platzierten Stein dreht ihn um 90°, ein langes Drücken spiegelt ihn (falls möglich).",item5:"Steine dürfen sich nicht überlappen oder Kante an Kante liegen.",item6:"Drücke 'n' für ein neues Level oder 'esc' um zum Menü zurückzukehren.",colorMixingTitle:"Farbmischung",colorMixingDesc:"Wenn ein Lichtstrahl mehrere farbige Steine durchquert, mischen sich ihre Farben:",basicRules:"Grundregeln",panel:{item1:"Sende Lichtwellen, um zu sehen, wo sie austreten und welche Farbe sie haben.",item2:"Ziehe die Edelsteine auf das Feld, um die Lösung nachzubauen.",item3:"Klicke auf einen platzierten Stein, um ihn zu drehen. Langes Drücken spiegelt ihn.",item4:"Steine dürfen sich nicht überlappen oder Kante an Kante liegen."}},tooltips:{absorbs:"Absorbiert Licht.",reflectsOnly:"Reflektiert nur, färbt nicht.",addsColor:"Fügt Farbe '{{color}}' hinzu."},colors:{red:"Rot",yellow:"Gelb",blue:"Blau",white:"Weiss",transparent:"Transparent",black:"Schwarz",purple:"Lila",skyBlue:"Himmelblau",green:"Grün",lightRed:"Hellrot",orange:"Orange",lightYellow:"Hellgelb",lightPurple:"Hell-Lila",darkGray:"Dunkelgrau",lightGreen:"Hellgrün",lightOrange:"Hell-Orange",gray:"Grau"},shapes:{rightTriangle:"Rechtwinkliges Dreieck",parallelogram:"Parallelogramm",bigTriangle:"Grosses Dreieck",diamond:"Raute",smallTriangle:"Kleines Dreieck",absorber:"Absorber",lShape:"L-Form",tShape:"T-Form",square:"Quadrat",bar:"Stab",small:"Klein",strange:"Seltsam"},log:{absorbed:"Absorbiert",noColor:"Keine Farbe",unknownMix:"Unbekannte Mischung"},validation:{exactOneRed:"Benötigt: <strong>genau 1 roten</strong> Stein",exactOneYellow:"Benötigt: <strong>genau 1 gelben</strong> Stein",exactOneBlue:"Benötigt: <strong>genau 1 blauen</strong> Stein",atLeastOneWhite:"Benötigt: <strong>mindestens 1 weissen</strong> Stein",maxTwoWhite:"Erlaubt: <strong>maximal 2 weisse</strong> Steine",maxTwoTransparent:"Erlaubt: <strong>maximal 2 transparente</strong> Steine",maxOneBlack:"Erlaubt: <strong>maximal 1 schwarzen</strong> Stein",levelIsValid:"Level ist valide"},ratings:{training:{1:"Sehr gut",2:"Gut",3:"Normal",4:"Verbesserungsfähig"},normal:{1:"Ein wahrer Experte bei der Edelsteinsuche",2:"Ein Profi, dem kaum einer was vormacht",3:"Guter Edelsteinsucher",4:"Juhu, alle Edelsteine gefunden!",5:"Immerhin alle Edelsteine gefunden."},medium:{1:"Meisterlich! Kaum eine Abfrage zu viel.",2:"Sehr beeindruckend! Du kennst dich aus.",3:"Starke Leistung! Du hast den Dreh raus.",4:"Gut gemacht! Alle Schätze geborgen.",5:"Geduld und Spucke führen zum Ziel!"},hard:{1:"Legendär! Eine Leistung für die Geschichtsbücher.",2:"Herausragend! Selbst Experten staunen.",3:"Experten-Niveau! Du hast es wirklich drauf.",4:"Ein hartes Stück Arbeit, aber erfolgreich!",5:"Puh, das war knapp, aber gewonnen!"}}},en:{lang:{name:"English",flag:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 60 30"><clipPath id="a"><path d="M0 0v30h60V0z"/></clipPath><clipPath id="b"><path d="M30 15h30v15H30zM0 0v15h30V0z"/></clipPath><g clip-path="url(#a)"><path d="M0 0v30h60V0z" fill="#012169"/><path d="M0 0l60 30m-60 0L60 0" stroke="#fff" stroke-width="6"/><path d="M0 0l60 30m-60 0L60 0" clip-path="url(#b)" stroke="#C8102E" stroke-width="4"/><path d="M0 15h60M30 0v30" stroke="#fff" stroke-width="10"/><path d="M0 15h60M30 0v30" stroke="#C8102E" stroke-width="6"/></g></svg>',switch:"Change language"},mainMenu:{startGame:"Start Game"},difficulty:{title:"Difficulty",TRAINING:"Training",TRAINING_desc:"Ideal for learning the game, shows the path of light rays.",NORMAL:"Normal",NORMAL_desc:"The basics. Get to know the colored and white gems.",MEDIUM:"Medium",MEDIUM_desc:"A new challenge. A transparent prism gem deflects light without coloring it.",HARD:"Hard",HARD_desc:"Expert mode. In addition to the transparent gem, a black, light-absorbing gem comes into play.",CUSTOM:"Custom Level",CUSTOM_desc:"Choose your own gems and create a new challenge."},customCreator:{title:"Create Custom Level",selectColor:"1. Select Color",selectShape:"2. Select Shape",addGem:"Add Gem +",levelSet:"Level Set (Your Selection)",startLevel:"Start Level",alert:{selectColorAndShape:"Please select a color and a shape first."}},gameScreen:{tabs:{actions:"Actions",logbook:"Logbook",rules:"Rules"},availableGems:"Available Gems:",showPath:"Show current light path (F)"},endScreen:{winTitle:"You Win!",lossTitle:"You Lose!",stats:"You solved the mine in {{count}} queries.",retry:"Please try again.",solutionLabel:{correct:"Correct Solution:",alternative:"Alternative solution found! Your solution (transparent):",yourInput:"Your input (over the correct solution):"},ratingLegendTitle:"Rating for {{difficulty}}",ratingLegend:{upTo:"up to {{end}} queries",range:"{{start}} - {{end}} queries",moreThan:"more than {{start}} queries"}},buttons:{back:"Back",newLevel:"New Level",menu:"Menu",submitSolution:"Submit Solution",giveUp:"Give Up",remove:"Remove"},rules:{title:"How to Play",objectiveTitle:"Goal:",objective:"Find the position and orientation of the hidden gems.",item1:"Send light waves from the edges into the game board.",item2:"The exiting color and position reveal which gems were hit.",item3:"Drag gems from the toolbar onto the board. You can move and rotate them.",item4:"Clicking on a placed gem rotates it by 90°. A long press flips it (if possible).",item5:"Gems cannot overlap or be edge-to-edge.",item6:"Press 'n' for a new level or 'esc' to return to the menu.",colorMixingTitle:"Color Mixing",colorMixingDesc:"When a light beam passes through multiple colored gems, their colors mix:",basicRules:"Basic Rules",panel:{item1:"Send light waves to see where they exit and what color they have.",item2:"Drag the gems onto the board to replicate the solution.",item3:"Click on a placed gem to rotate it. A long press flips it.",item4:"Gems cannot overlap or be edge-to-edge."}},tooltips:{absorbs:"Absorbs light.",reflectsOnly:"Only reflects, does not color.",addsColor:"Adds '{{color}}' color."},colors:{red:"Red",yellow:"Yellow",blue:"Blue",white:"White",transparent:"Transparent",black:"Black",purple:"Purple",skyBlue:"Sky Blue",green:"Green",lightRed:"Light Red",orange:"Orange",lightYellow:"Light Yellow",lightPurple:"Light Purple",darkGray:"Dark Gray",lightGreen:"Light Green",lightOrange:"Light Orange",gray:"Gray"},shapes:{rightTriangle:"Right Triangle",parallelogram:"Parallelogram",bigTriangle:"Large Triangle",diamond:"Diamond",smallTriangle:"Small Triangle",absorber:"Absorber",lShape:"L-Shape",tShape:"T-Shape",square:"Square",bar:"Bar",small:"Small",strange:"Strange"},log:{absorbed:"Absorbed",noColor:"No Color",unknownMix:"Unknown Mix"},validation:{exactOneRed:"Requires: <strong>exactly 1 red</strong> gem",exactOneYellow:"Requires: <strong>exactly 1 yellow</strong> gem",exactOneBlue:"Requires: <strong>exactly 1 blue</strong> gem",atLeastOneWhite:"Requires: <strong>at least 1 white</strong> gem",maxTwoWhite:"Allowed: <strong>maximum of 2 white</strong> gems",maxTwoTransparent:"Allowed: <strong>maximum of 2 transparent</strong> gems",maxOneBlack:"Allowed: <strong>maximum of 1 black</strong> gem",levelIsValid:"Level is valid"},ratings:{training:{1:"Very good",2:"Good",3:"Average",4:"Needs improvement"},normal:{1:"A true gem-finding expert",2:"A pro who can't be fooled",3:"Good gem hunter",4:"Yay, all gems found!",5:"At least all gems were found."},medium:{1:"Masterful! Hardly a query wasted.",2:"Very impressive! You know your stuff.",3:"Strong performance! You've got the hang of it.",4:"Well done! All treasures recovered.",5:"Patience and persistence lead to success!"},hard:{1:"Legendary! A performance for the history books.",2:"Outstanding! Even experts are amazed.",3:"Expert level! You've really got it.",4:"A tough job, but successful!",5:"Phew, that was close, but you won!"}}}};function ce(){const c=localStorage.getItem("orapa-lang");return c==="de"||c==="en"?c:navigator.language.slice(0,2).toLowerCase()==="de"?"de":"en"}let N=ce();const j=[];function he(c){j.push(c)}function ge(){j.forEach(c=>c()),document.documentElement.lang=N}function ue(c){c!==N&&(N=c,localStorage.setItem("orapa-lang",c),ge())}function me(){return N}function p(c,e){const t=c.split(".");let s=X[N];for(const i of t)if(s=s==null?void 0:s[i],s===void 0)break;if(s===void 0&&N!=="de"){let i=X.de;for(const n of t)if(i=i==null?void 0:i[n],i===void 0)return c;s=i}else if(s===void 0)return c;return typeof s!="string"?c:(e&&Object.entries(e).forEach(([i,n])=>{const r=new RegExp(`{{${i}}}`,"g");s=s.replace(r,String(n))}),s)}document.documentElement.lang=N;class fe{constructor(){this.screens={},this.emitters=[],this.focusedEmitterId=null,this.dragStartInfo=null,this.isDragging=!1,this.draggedItemInfo=null,this.dragPos={x:0,y:0},this.lastValidDropTarget={x:-1,y:-1,isValid:!1},this.longPressTimeout=null,this.longPressTriggered=!1,this.customCreatorState={selectedColorKey:null,selectedShapeKey:null,gems:[]},this.cellWidth=0,this.cellHeight=0,this.gap=1,this.cacheDOMElements(),this.bindGlobalEvents(),he(()=>this.updateUIText()),this.updateUIText()}bindGame(e){this.game=e}cacheDOMElements(){this.screens.main=document.getElementById("screen-main"),this.screens.difficulty=document.getElementById("screen-difficulty"),this.screens["custom-creator"]=document.getElementById("screen-custom-creator"),this.screens.game=document.getElementById("screen-game"),this.screens.end=document.getElementById("screen-end"),this.langSwitcher=document.getElementById("lang-switcher"),this.btnStartGame=document.getElementById("btn-start-game"),this.introRulesEl=document.getElementById("intro-rules"),this.difficultyOptions=document.getElementById("difficulty-options"),this.btnBackToMain1=document.getElementById("btn-back-to-main-1"),this.customColorSelector=document.getElementById("custom-color-selector"),this.customShapeSelector=document.getElementById("custom-shape-selector"),this.btnAddCustomGem=document.getElementById("btn-add-custom-gem"),this.customGemList=document.getElementById("custom-gem-list"),this.customValidationFeedback=document.getElementById("custom-validation-feedback"),this.btnStartCustomLevel=document.getElementById("btn-start-custom-level"),this.btnBackToDifficulty=document.getElementById("btn-back-to-difficulty"),this.boardWrapper=document.getElementById("game-board-wrapper"),this.gemCanvas=document.getElementById("gem-canvas"),this.gemCtx=this.gemCanvas.getContext("2d"),this.pathOverlay=document.getElementById("path-overlay"),this.pathCtx=this.pathOverlay.getContext("2d"),this.gemToolbar=document.getElementById("gem-toolbar"),this.logList=document.getElementById("log-list"),this.actionsTabBtn=document.getElementById("actions-tab-btn"),this.logTabBtn=document.getElementById("log-tab-btn"),this.rulesTabBtn=document.getElementById("rules-tab-btn"),this.rulesPanel=document.getElementById("rules-panel"),this.checkSolutionBtn=document.getElementById("check-solution-btn"),this.giveUpBtn=document.getElementById("give-up-btn"),this.previewToggle=document.getElementById("preview-toggle"),this.endTitle=document.getElementById("end-title"),this.endRating=document.getElementById("end-rating"),this.endStats=document.getElementById("end-stats"),this.endRetryMessage=document.getElementById("end-retry-message"),this.endSolutionCanvas=document.getElementById("end-solution-canvas"),this.endSolutionCtx=this.endSolutionCanvas.getContext("2d"),this.endSolutionLabel=document.getElementById("end-solution-label"),this.endRatingLegend=document.getElementById("end-rating-legend"),this.btnNewLevel=document.getElementById("btn-new-level"),this.btnMenu=document.getElementById("btn-menu")}bindGlobalEvents(){this.langSwitcher.addEventListener("click",()=>{const e=me()==="de"?"en":"de";ue(e)}),this.btnStartGame.addEventListener("click",()=>this.game.showDifficultySelect()),this.btnNewLevel.addEventListener("click",()=>{o.difficulty&&this.game.start(o.difficulty)}),this.btnMenu.addEventListener("click",()=>this.game.showMainMenu()),this.btnBackToMain1.addEventListener("click",()=>this.game.showMainMenu()),this.btnBackToDifficulty.addEventListener("click",()=>this.game.showDifficultySelect()),this.actionsTabBtn.addEventListener("click",()=>this.switchTab("actions")),this.logTabBtn.addEventListener("click",()=>this.switchTab("log")),this.rulesTabBtn.addEventListener("click",()=>this.switchTab("rules")),this.checkSolutionBtn.addEventListener("click",()=>this.game.checkSolution()),this.giveUpBtn.addEventListener("click",()=>this.game.giveUp()),this.previewToggle.addEventListener("change",()=>this.game.togglePlayerPathPreview()),this.btnAddCustomGem.addEventListener("click",()=>this._handleAddCustomGem()),this.btnStartCustomLevel.addEventListener("click",()=>this._handleStartCustomLevel()),this.gemCanvas.addEventListener("keydown",e=>this.handleCanvasKeyDown(e)),document.addEventListener("keydown",e=>{if(e.key==="n"&&(o.status===G.PLAYING||o.status===G.GAME_OVER)){o.difficulty&&this.game.start(o.difficulty);return}if(e.key==="Escape"&&(o.status===G.PLAYING||o.status===G.GAME_OVER||o.status===G.CUSTOM_CREATOR)){this.game.showMainMenu();return}o.status===G.PLAYING&&(e.key==="d"&&this.game.toggleDebugMode(),e.key==="f"&&this.game.togglePlayerPathPreview())}),document.addEventListener("click",e=>this.handleGlobalClick(e)),this.logList.addEventListener("click",e=>this.handleLogClick(e)),document.addEventListener("mousedown",e=>this.handlePointerDown(e)),document.addEventListener("touchstart",e=>this.handlePointerDown(e),{passive:!1}),document.addEventListener("mousemove",e=>this.handlePointerMove(e)),document.addEventListener("touchmove",e=>this.handlePointerMove(e),{passive:!1}),document.addEventListener("mouseup",e=>this.handlePointerUp(e)),document.addEventListener("touchend",e=>this.handlePointerUp(e)),this.logList.addEventListener("animationend",()=>{this.logList.classList.remove("flash")})}updateUIText(){this.langSwitcher.innerHTML=p("lang.flag"),this.langSwitcher.title=p("lang.switch"),document.querySelectorAll("[data-i18n-key]").forEach(e=>{const t=e.dataset.i18nKey,s=e.dataset.i18nAttr||"textContent";e[s]=p(t)}),o.status===G.MAIN_MENU&&this._populateIntroRules(),o.status===G.DIFFICULTY_SELECT&&this.populateDifficultyOptions(),o.status===G.CUSTOM_CREATOR&&this._setupCustomCreator(),o.status===G.PLAYING&&(this._populateRulesPanel(),this.updateToolbar(),this.updateLogTabCounter(),this.redrawAll())}handleGlobalClick(e){if(!o.selectedLogEntryWaveId)return;const t=e.target;t.closest("#gem-canvas")||t.closest("#log-list li")||t.closest(".preview-toggle-wrapper")||this.game.setSelectedWave(null,null)}setupGameUI(){this._populateRulesPanel(),this.switchTab("actions"),this._createEmitterObjects(),this.updateToolbar(),this.logList.innerHTML="",this.updateLogTabCounter(),this.clearPath(),this.game.updateSolutionButtonState(),this.updatePreviewToggleState(o.showPlayerPathPreview),new ResizeObserver(()=>this.onBoardResize()).observe(this.boardWrapper),this.onBoardResize()}showScreen(e){e==="difficulty"&&this.populateDifficultyOptions(),e==="custom-creator"&&this._setupCustomCreator(),Object.values(this.screens).forEach(t=>t.classList.add("hidden")),this.screens[e].classList.remove("hidden"),e==="game"&&this.gemCanvas.focus()}populateDifficultyOptions(){this.difficultyOptions.innerHTML="",[w.TRAINING,w.NORMAL,w.MEDIUM,w.HARD].forEach(t=>{const s=document.createElement("button");s.innerHTML=`${p("difficulty."+t)}<div class="difficulty-desc">${p("difficulty."+t+"_desc")}</div>`,s.onclick=()=>this.game.start(t),this.difficultyOptions.appendChild(s)});const e=document.createElement("button");e.innerHTML=`${p("difficulty.CUSTOM")}<div class="difficulty-desc">${p("difficulty.CUSTOM_desc")}</div>`,e.onclick=()=>this.game.showCustomCreator(),this.difficultyOptions.appendChild(e)}_setupCustomCreator(){this.customCreatorState={selectedColorKey:null,selectedShapeKey:null,gems:[]},this._populateCreatorSelectors(),this._updateCustomGemList(),this._validateCustomSet()}_populateCreatorSelectors(){this.customColorSelector.innerHTML="",Object.entries(Y).forEach(([e,t])=>{const s=document.createElement("div");s.className="color-choice",s.dataset.colorKey=e,s.style.backgroundColor=t.color,e==="TRANSPARENT"&&(s.style.border=`2px solid ${y.TRANSPARENT}`,s.style.backgroundColor="rgba(164, 212, 228, 0.3)"),s.title=p(t.nameKey),s.onclick=()=>{this.customCreatorState.selectedColorKey=e,this.customColorSelector.querySelectorAll(".color-choice").forEach(i=>i.classList.remove("selected")),s.classList.add("selected")},this.customColorSelector.appendChild(s)}),this.customShapeSelector.innerHTML="",Object.entries(F).forEach(([e,t])=>{const s=document.createElement("div");s.className="shape-choice",s.dataset.shapeKey=e,s.title=p(t.nameKey);const i=document.createElement("canvas");s.appendChild(i),s.onclick=()=>{this.customCreatorState.selectedShapeKey=e,this.customShapeSelector.querySelectorAll(".shape-choice").forEach(n=>n.classList.remove("selected")),s.classList.add("selected")},this.customShapeSelector.appendChild(s),setTimeout(()=>this.drawToolbarGem(i,t),0)})}_handleAddCustomGem(){const{selectedColorKey:e,selectedShapeKey:t}=this.customCreatorState;if(!e||!t){alert(p("customCreator.alert.selectColorAndShape"));return}const s=Y[e],i=F[t];let n=i.gridPattern;e==="SCHWARZ"&&(n=i.gridPattern.map(d=>d.map(g=>g!==a.EMPTY?a.ABSORB:a.EMPTY)));const r=`CUSTOM_${e}_${t}_${Date.now()}`,l={...s,...i,gridPattern:n,name:r,originalColorKey:e};this.customCreatorState.gems.push(l),this._updateCustomGemList(),this._validateCustomSet()}_updateCustomGemList(){this.customGemList.innerHTML="",this.customCreatorState.gems.forEach((e,t)=>{const s=document.createElement("div");s.className="custom-gem-item";const i=document.createElement("canvas");s.appendChild(i);const n=document.createElement("button");n.className="delete-gem-btn",n.innerHTML="&times;",n.title=p("buttons.remove"),n.onclick=()=>{this.customCreatorState.gems.splice(t,1),this._updateCustomGemList(),this._validateCustomSet()},s.appendChild(n),this.customGemList.appendChild(s),setTimeout(()=>this.drawToolbarGem(i,e),0)})}_validateCustomSet(){const e=this.customCreatorState.gems,t={ROT:0,GELB:0,BLAU:0,WEISS:0,TRANSPARENT:0,SCHWARZ:0};e.forEach(n=>{t.hasOwnProperty(n.originalColorKey)&&t[n.originalColorKey]++});const s=[{condition:t.ROT===1,errorKey:"validation.exactOneRed"},{condition:t.GELB===1,errorKey:"validation.exactOneYellow"},{condition:t.BLAU===1,errorKey:"validation.exactOneBlue"},{condition:t.WEISS>=1,errorKey:"validation.atLeastOneWhite"},{condition:t.WEISS<=2,errorKey:"validation.maxTwoWhite"},{condition:t.TRANSPARENT<=2,errorKey:"validation.maxTwoTransparent"},{condition:t.SCHWARZ<=1,errorKey:"validation.maxOneBlack"}];let i=null;for(const n of s)if(!n.condition){i=n.errorKey;break}i?(this.customValidationFeedback.innerHTML=`<div class="invalid">❌ ${p(i)}</div>`,this.btnStartCustomLevel.disabled=!0):(this.customValidationFeedback.innerHTML=`<div class="valid">✅ ${p("validation.levelIsValid")}</div>`,this.btnStartCustomLevel.disabled=!1)}_handleStartCustomLevel(){if(this.btnStartCustomLevel.disabled)return;const e=this.customCreatorState.gems;o.customGemSet=e.map(t=>t.name),o.customGemDefinitions=Object.fromEntries(e.map(t=>[t.name,t])),this.game.start(w.CUSTOM)}_createEmitterObjects(){this.emitters=[];for(let e=0;e<T;e++)this.emitters.push(new k(`T${e+1}`,`T${e+1}`));for(let e=0;e<T;e++)this.emitters.push(new k(`B${e+1}`,`B${e+1}`));for(let e=0;e<v;e++)this.emitters.push(new k(`L${e+1}`,`L${e+1}`));for(let e=0;e<v;e++)this.emitters.push(new k(`R${e+1}`,`R${e+1}`));this.emitters.length>0&&(this.focusedEmitterId=this.emitters[0].id)}onBoardResize(){const e=this.boardWrapper.getBoundingClientRect();if(e.width===0||e.height===0)return;const t=T+2,s=v+2;this.cellWidth=(e.width-(t-1)*this.gap)/t,this.cellHeight=(e.height-(s-1)*this.gap)/s;const i=window.devicePixelRatio||1;[this.pathOverlay,this.gemCanvas].forEach(n=>{n.width=e.width*i,n.height=e.height*i,n.style.width=`${e.width}px`,n.style.height=`${e.height}px`,n.getContext("2d").scale(i,i)}),this.emitters.forEach(n=>{const r=n.id,l=parseInt(r.substring(1))-1;let d=0,g=0;switch(r[0]){case"T":d=l+1,g=0;break;case"B":d=l+1,g=s-1;break;case"L":d=0,g=l+1;break;case"R":d=t-1,g=l+1;break}n.rect.x=d*(this.cellWidth+this.gap),n.rect.y=g*(this.cellHeight+this.gap),n.rect.width=this.cellWidth,n.rect.height=this.cellHeight}),this.redrawAll()}getGemDefinition(e){return o.difficulty===w.CUSTOM?o.customGemDefinitions[e]:_[e]}_getGemTooltip(e){const t=this.getGemDefinition(e);if(!t)return"";if(t.special==="absorbs")return p("tooltips.absorbs");if(t.baseGems.length===0)return p("tooltips.reflectsOnly");const s=t.baseGems[0],i=W[s],n=p(i).toLowerCase();return p("tooltips.addsColor",{color:n})}updateToolbar(){if(this.gemToolbar.innerHTML="",!o.difficulty)return;const t=o.difficulty===w.CUSTOM?o.customGemSet:D[o.difficulty];if(!t)return;const s=new Set(o.playerGems.map(i=>i.name));t.forEach(i=>{const n=this.getGemDefinition(i);if(!n)return;const r=document.createElement("div");r.className="toolbar-gem",s.has(i)&&r.classList.add("placed"),r.dataset.gemName=i,r.title=this._getGemTooltip(i);const l=document.createElement("canvas");l.className="toolbar-gem-canvas",r.appendChild(l),this.gemToolbar.appendChild(r),setTimeout(()=>this.drawToolbarGem(l,n),0)})}drawToolbarGem(e,t){const s=e.getContext("2d");if(!s)return;const i=window.devicePixelRatio||1,n=e.getBoundingClientRect();if(n.width===0||n.height===0)return;e.width=n.width*i,e.height=n.height*i,s.scale(i,i),s.clearRect(0,0,n.width,n.height);const r=t.gridPattern,l=r.length,d=r[0].length,h=Math.min(n.width/d,n.height/l),m=d*h,u=l*h,f=(n.width-m)/2,S=(n.height-u)/2,L=t.color||"#bdc3c7";for(let E=0;E<l;E++)for(let b=0;b<d;b++){const A=r[E][b];A!==a.EMPTY&&this.drawCellShape(s,b*h+f,E*h+S,h,h,A,L)}}handleSelectionChange(){this.redrawAll(),this.updateLogHighlight()}redrawAll(){if(this.gemCanvas.width===0)return;const e=this.gemCtx;this._clearCanvas(e),this._drawBoardBackgroundAndGrid(e);const t=o.selectedLogEntryWaveId?o.log.find(s=>s.waveId===o.selectedLogEntryWaveId):null;if(this.emitters.forEach(s=>{let i=!1;t&&(i=s.id===t.waveId||s.id===t.result.exitId),s.draw(e,i)}),this.clearPath(),t&&(o.difficulty===w.TRAINING||o.debugMode)&&t.path){const i=this.getPathColor(t.result);this.drawPath(t.path,i,!1)}if(o.showPlayerPathPreview&&o.activePlayerPath&&o.activePlayerResult){const s=this.getPathColor(o.activePlayerResult);this.drawPath(o.activePlayerPath,s,!0)}o.status===G.PLAYING&&(o.debugMode&&this.drawDebugSolution(e),this.drawPlayerGems(e),this._drawSelectedWaveTooltip(e),this.isDragging&&this.draggedItemInfo&&this.drawDragPreview(e))}drawDragPreview(e){if(!this.draggedItemInfo)return;const{gridPattern:t,name:s,id:i}=this.draggedItemInfo,n=this.getGemDefinition(s);if(!n)return;const r=t[0].length,l=t.length,d=this.dragPos.x/(this.cellWidth+this.gap)-1-r/2+.5,g=this.dragPos.y/(this.cellHeight+this.gap)-1-l/2+.5,h=Math.round(d),m=Math.round(g),u={id:i,name:s,x:h,y:m,gridPattern:t};this.lastValidDropTarget.isValid=this.game.canPlaceGem(u),this.lastValidDropTarget.x=h,this.lastValidDropTarget.y=m,e.save(),e.globalAlpha=.7;for(let f=0;f<l;f++)for(let S=0;S<r;S++)if(t[f][S]!==a.EMPTY){const L=this._gridToCanvasCoords(h+S,m+f);this.drawCellShape(e,L.x,L.y,this.cellWidth,this.cellHeight,t[f][S],n.color,!this.lastValidDropTarget.isValid)}e.restore()}drawPlayerGems(e){var t,s;for(const i of o.playerGems){if(this.isDragging&&((t=this.draggedItemInfo)==null?void 0:t.from)==="board"&&this.draggedItemInfo.id===i.id)continue;const{gridPattern:n,x:r,y:l,name:d}=i,g=this.getGemDefinition(d);if(!g)continue;const h=g.color,m=!i.isValid;let u=!1;this.isDragging||(u=((s=this.getGemAtCanvasPos(this.dragPos.x,this.dragPos.y))==null?void 0:s.id)===i.id);for(let f=0;f<n.length;f++)for(let S=0;S<n[f].length;S++){const L=n[f][S];if(L!==a.EMPTY){const E=this._gridToCanvasCoords(r+S,l+f);this.drawCellShape(e,E.x,E.y,this.cellWidth,this.cellHeight,L,h,m,u)}}}}_drawBoardBackgroundAndGrid(e){e.save();const t=getComputedStyle(document.documentElement).getPropertyValue("--surface-color"),s=getComputedStyle(document.documentElement).getPropertyValue("--border-color");e.fillStyle=t,e.fillRect(0,0,e.canvas.width,e.canvas.height),e.fillStyle=s,e.fillRect(this.cellWidth+this.gap/2,this.cellHeight+this.gap/2,T*this.cellWidth+(T+1)*this.gap,v*this.cellHeight+(v+1)*this.gap),e.fillStyle=t,e.fillRect(this.cellWidth+this.gap,this.cellHeight+this.gap,T*this.cellWidth+(T-1)*this.gap,v*this.cellHeight+(v-1)*this.gap),e.strokeStyle=s,e.lineWidth=this.gap,e.beginPath();for(let i=1;i<T;i++){const n=(i+1)*(this.cellWidth+this.gap)-this.gap/2;e.moveTo(n,this.cellHeight+this.gap),e.lineTo(n,(v+1)*(this.cellHeight+this.gap))}for(let i=1;i<v;i++){const n=(i+1)*(this.cellHeight+this.gap)-this.gap/2;e.moveTo(this.cellWidth+this.gap,n),e.lineTo((T+1)*(this.cellWidth+this.gap),n)}e.stroke(),e.restore()}drawDebugSolution(e){if(!(!this.game.secretGrid||o.secretGems.length===0)){e.save();for(const t of o.secretGems){const{gridPattern:s,x:i,y:n,name:r}=t,l=this.getGemDefinition(r);if(!l)continue;const d=l.color;e.globalAlpha=.2;for(let g=0;g<s.length;g++)for(let h=0;h<s[g].length;h++){const m=s[g][h];if(m!==a.EMPTY){const u=this._gridToCanvasCoords(i+h,n+g);this.drawCellShape(e,u.x,u.y,this.cellWidth,this.cellHeight,m,d)}}}e.restore()}}drawCellShape(e,t,s,i,n,r,l,d=!1,g=!1){e.save(),l===y.TRANSPARENT?(e.fillStyle="rgba(164, 212, 228, 0.3)",e.strokeStyle="#a4d4e4",e.lineWidth=2):l===y.SCHWARZ_GEM?(e.fillStyle=l,e.strokeStyle="#555",e.lineWidth=1):(e.fillStyle=l,e.strokeStyle="rgba(0,0,0,0.4)",e.lineWidth=1),d&&(e.fillStyle="rgba(231, 76, 60, 0.5)",e.strokeStyle=y.INVALID_GEM,e.lineWidth=2),g&&!d&&(e.shadowColor="white",e.shadowBlur=10),e.beginPath();const h=new Path2D;switch(r){case a.BLOCK:case a.ABSORB:h.rect(t,s,i,n);break;case a.TRIANGLE_TL:h.moveTo(t,s),h.lineTo(t+i,s),h.lineTo(t,s+n),h.closePath();break;case a.TRIANGLE_TR:h.moveTo(t,s),h.lineTo(t+i,s),h.lineTo(t+i,s+n),h.closePath();break;case a.TRIANGLE_BR:h.moveTo(t+i,s),h.lineTo(t+i,s+n),h.lineTo(t,s+n),h.closePath();break;case a.TRIANGLE_BL:h.moveTo(t,s),h.lineTo(t,s+n),h.lineTo(t+i,s+n),h.closePath();break}e.fill(h),e.stroke(h),e.restore()}_gridToCanvasCoords(e,t){return{x:(e+1)*(this.cellWidth+this.gap),y:(t+1)*(this.cellHeight+this.gap)}}_canvasToGridCoords(e,t){return{x:Math.floor(e/(this.cellWidth+this.gap))-1,y:Math.floor(t/(this.cellHeight+this.gap))-1}}getPathColor(e){if(e.absorbed)return y.ABSORBIERT;if(e.colors.length===0)return"rgba(236, 240, 241, 0.7)";const t=[...e.colors].sort().join(",");return $[t]||"#ccc"}drawPath(e,t,s=!1){if(e.length<2)return;const i=this.pathCtx;i.save(),i.strokeStyle=t,i.lineWidth=3,i.lineCap="round",i.lineJoin="round",i.shadowColor="rgba(0,0,0,0.5)",i.shadowBlur=5,s&&(i.globalAlpha=.6,i.setLineDash([8,6])),i.beginPath();const n=this.cellWidth+this.gap,r=this.cellHeight+this.gap,l=this.cellWidth+this.gap,d=this.cellHeight+this.gap,g=m=>{const u=n+m.x*l,f=r+m.y*d;return{x:u,y:f}},h=g(e[0]);i.moveTo(h.x,h.y);for(let m=1;m<e.length;m++)i.lineTo(g(e[m]).x,g(e[m]).y);i.stroke(),i.restore()}_clearCanvas(e){e.save(),e.setTransform(1,0,0,1,0,0),e.clearRect(0,0,e.canvas.width,e.canvas.height),e.restore()}clearPath(){this._clearCanvas(this.pathCtx)}switchTab(e){document.querySelectorAll(".tab-btn, .tab-panel").forEach(t=>t.classList.remove("active")),document.getElementById(`${e}-tab-btn`).classList.add("active"),document.getElementById(`${e}-panel`).classList.add("active")}addLogEntry(e,t){const s=document.createElement("li");s.dataset.waveId=t;const{result:i}=e,n=`${t} ➔ ${i.exitId}`,r=this.getPathColor(i),l=this._getPathColorName(i);s.innerHTML=`<span>${n}</span><div class="log-entry-result"><span class="log-color-name">${l}</span><div class="log-color-box" style="background-color: ${r};"></div></div>`,this.logList.prepend(s),this.updateLogTabCounter();const d=this.emitters.find(g=>g.id===t);if(d&&(d.isUsed=!0,d.usedColor=r),i.exitId&&i.exitId!=="Loop?"){const g=this.emitters.find(h=>h.id===i.exitId);g&&(g.isUsed=!0,g.usedColor=r)}}updateLogTabCounter(){const e=o.log.length,t=p("gameScreen.tabs.logbook");e>0?this.logTabBtn.textContent=`${t} (${e})`:this.logTabBtn.textContent=t}_areGemSetsIdentical(e,t){if(e.length!==t.length)return!1;const s=r=>`${r.name},${r.x},${r.y},${JSON.stringify(r.gridPattern)}`,i=new Set(e.map(s)),n=new Set(t.map(s));if(i.size!==n.size)return!1;for(const r of i)if(!n.has(r))return!1;return!0}showEndScreen(e,t,s,i){this.endTitle.classList.remove("win","loss"),this.endRetryMessage.textContent="",this.endRating.textContent="",this.endRatingLegend.innerHTML="",this.endRating.style.display="none",this.endRatingLegend.style.display="none";let n=[];if(e){this.endTitle.textContent=p("endScreen.winTitle"),this.endTitle.classList.add("win"),this.endStats.textContent=p("endScreen.stats",{count:t}),this._areGemSetsIdentical(s,i)?(this.endSolutionLabel.textContent=p("endScreen.solutionLabel.correct"),n=[]):(this.endSolutionLabel.textContent=p("endScreen.solutionLabel.alternative"),n=i);const l=o.difficulty;if(l&&V[l]){const d=V[l];let g="";for(const h of d)if(t<=h.limit){g=p(h.textKey);break}if(g){this.endRating.textContent=g,this.endRating.style.display="block",this.endRatingLegend.style.display="block";let h=`<h5>${p("endScreen.ratingLegendTitle",{difficulty:p("difficulty."+l)})}</h5><ul>`,m=0;d.forEach(u=>{const f=m===0?"endScreen.ratingLegend.upTo":u.limit===1/0?"endScreen.ratingLegend.moreThan":"endScreen.ratingLegend.range",S=p(f,{start:m+1,end:u.limit});h+=`<li><strong>${p(u.textKey)}:</strong> ${S}</li>`,m=u.limit}),h+="</ul>",this.endRatingLegend.innerHTML=h}}}else this.endTitle.textContent=p("endScreen.lossTitle"),this.endTitle.classList.add("loss"),this.endStats.textContent=p("endScreen.stats",{count:t}),this.endRetryMessage.textContent=p("endScreen.retry"),this.endSolutionLabel.textContent=p("endScreen.solutionLabel.yourInput"),n=i;this.showScreen("end"),requestAnimationFrame(()=>{this.drawEndScreenSolution(this.endSolutionCtx,s,n,this.emitters)})}drawEndScreenSolution(e,t,s,i){const n=e.canvas,r=window.devicePixelRatio||1,l=n.getBoundingClientRect();if(l.width===0||l.height===0)return;n.width=l.width*r,n.height=l.height*r,e.scale(r,r),e.clearRect(0,0,l.width,l.height);const d=1,g=T+2,h=v+2,m=(l.width-(g-1)*d)/g,u=(l.height-(h-1)*d)/h,f=(E,b,A)=>{e.save(),e.globalAlpha=b;for(const I of E){const R=this.getGemDefinition(I.name);if(!R)continue;const B=R.color,M=A?!I.isValid:!1;for(let C=0;C<I.gridPattern.length;C++)for(let x=0;x<I.gridPattern[C].length;x++){const K=I.gridPattern[C][x];if(K!==a.EMPTY){const Z=I.x+x,J=I.y+C,Q=(Z+1)*(m+d),ee=(J+1)*(u+d);this.drawCellShape(e,Q,ee,m,u,K,B,M)}}}e.restore()};e.save();const S=getComputedStyle(document.documentElement).getPropertyValue("--surface-color"),L=getComputedStyle(document.documentElement).getPropertyValue("--border-color");e.fillStyle=S,e.fillRect(0,0,l.width,l.height),e.fillStyle=L,e.fillRect(m+d/2,u+d/2,T*m+(T+1)*d,v*u+(v+1)*d),e.fillStyle=S,e.fillRect(m+d,u+d,T*(m+d)-d,v*(u+d)-d),e.strokeStyle=L,e.lineWidth=d,e.beginPath();for(let E=1;E<T;E++){const b=(E+1)*(m+d)-d/2;e.moveTo(b,u+d),e.lineTo(b,(v+1)*(u+d))}for(let E=1;E<v;E++){const b=(E+1)*(u+d)-d/2;e.moveTo(m+d,b),e.lineTo((T+1)*(m+d),b)}e.stroke(),e.restore(),i.forEach(E=>{const b=E.id,A=parseInt(b.substring(1))-1;let I=0,R=0;switch(b[0]){case"T":I=A+1,R=0;break;case"B":I=A+1,R=h-1;break;case"L":I=0,R=A+1;break;case"R":I=g-1,R=A+1;break}const B=Object.assign(new k(E.id,E.label),E);B.rect={x:I*(m+d),y:R*(u+d),width:m,height:u},B.state="normal",B.draw(e,!1)}),f(t,1,!1),s.length>0&&f(s,.55,!0)}handleLogClick(e){const t=e.target.closest("li");if(t&&t.dataset.waveId){const s=t.dataset.waveId;o.selectedLogEntryWaveId===s?this.game.setSelectedWave(null,null):this.game.setSelectedWave(s,s)}}handleCanvasHover(e,t){if(this.isDragging)return;const s=this.gemCanvas.getBoundingClientRect(),i=e-s.left,n=t-s.top;this.dragPos={x:i,y:n},this.redrawAll()}handleCanvasMouseLeave(){this.dragPos={x:-1,y:-1},this.redrawAll()}updatePreviewToggleState(e){this.previewToggle.checked=e}updateLogHighlight(){this.logList.querySelectorAll("li").forEach(e=>{const t=e;t.dataset.waveId===o.selectedLogEntryWaveId?(t.classList.add("selected"),t.scrollIntoView({behavior:"smooth",block:"nearest"})):t.classList.remove("selected")})}handleCanvasKeyDown(e){if(!["ArrowUp","ArrowDown","ArrowLeft","ArrowRight","Enter"," "].includes(e.key))return;e.preventDefault();const t=this.emitters.find(n=>n.id===this.focusedEmitterId);if(t&&(t.state="normal"),e.key==="Enter"||e.key===" "){if(this.focusedEmitterId){const n=this.emitters.find(r=>r.id===this.focusedEmitterId);if(n&&!n.isUsed)this.game.sendWave(this.focusedEmitterId);else if(n!=null&&n.isUsed){const r=o.log.find(l=>l.waveId===n.id||l.result.exitId===n.id);r&&(o.selectedLogEntryWaveId===r.waveId&&o.previewSourceEmitterId===n.id?this.game.setSelectedWave(null,null):this.game.setSelectedWave(r.waveId,n.id))}}t&&(t.state="focused"),this.redrawAll(),this.updateLogHighlight();return}const s=this.emitters.findIndex(n=>n.id===this.focusedEmitterId);if(s===-1)return;let i=-1;switch(e.key){case"ArrowRight":i=(s+1)%this.emitters.length;break;case"ArrowLeft":i=(s-1+this.emitters.length)%this.emitters.length;break;case"ArrowUp":i=(s-1+this.emitters.length)%this.emitters.length;break;case"ArrowDown":i=(s+1)%this.emitters.length;break}if(i!==-1){this.focusedEmitterId=this.emitters[i].id;const n=this.emitters[i];n&&(n.state="focused"),this.redrawAll()}}getPointerCoordinates(e){return e instanceof MouseEvent?{clientX:e.clientX,clientY:e.clientY}:e.changedTouches&&e.changedTouches.length>0?{clientX:e.changedTouches[0].clientX,clientY:e.changedTouches[0].clientY}:null}handlePointerDown(e){if(e instanceof MouseEvent&&e.button!==0)return;const t=this.getPointerCoordinates(e);if(!t)return;const{clientX:s,clientY:i}=t,n=e.target,r=n.closest(".toolbar-gem:not(.placed)"),l=n.closest("#gem-canvas");e instanceof TouchEvent&&(l||r)&&e.preventDefault();let d=null;if(r){const g=r.getBoundingClientRect(),h=r.dataset.gemName,m=this.getGemDefinition(h);m&&(d={name:h,from:"toolbar",gridPattern:m.gridPattern,element:r,offsetX:s-g.left,offsetY:i-g.top})}else if(l){const g=this.gemCanvas.getBoundingClientRect(),h=s-g.left,m=i-g.top,u=this.getGemAtCanvasPos(h,m);if(u){const f=this._canvasToGridCoords(h,m);d={id:u.id,name:u.name,from:"board",gridPattern:u.gridPattern,offsetX:(f.x-u.x)*this.cellWidth,offsetY:(f.y-u.y)*this.cellHeight},u.isFlippable&&(this.longPressTimeout=window.setTimeout(()=>{this.game.flipPlayerGem(u.id),this.longPressTriggered=!0,this.dragStartInfo=null,this.isDragging=!1},400))}}(l||r)&&(this.dragStartInfo={item:d,startX:s,startY:i})}handlePointerMove(e){const t=this.getPointerCoordinates(e);if(!t)return;const{clientX:s,clientY:i}=t;if(this.dragStartInfo){e instanceof TouchEvent&&e.preventDefault();const n=s-this.dragStartInfo.startX,r=i-this.dragStartInfo.startY;if(!this.isDragging&&Math.sqrt(n*n+r*r)>10&&(this.longPressTimeout&&(clearTimeout(this.longPressTimeout),this.longPressTimeout=null),this.dragStartInfo.item?(this.isDragging=!0,this.draggedItemInfo=this.dragStartInfo.item,this.draggedItemInfo.element&&this.draggedItemInfo.element.classList.add("dragging")):this.dragStartInfo=null),this.isDragging){const l=this.gemCanvas.getBoundingClientRect();this.dragPos={x:s-l.left,y:i-l.top},this.redrawAll()}}else e.target.closest("#gem-canvas")?this.handleCanvasHover(s,i):this.handleCanvasMouseLeave()}handlePointerUp(e){var r,l;if(this.longPressTimeout&&(clearTimeout(this.longPressTimeout),this.longPressTimeout=null),this.longPressTriggered){this.longPressTriggered=!1,this.dragStartInfo=null,this.isDragging=!1,this.redrawAll();return}const t=this.getPointerCoordinates(e);if(!t){this.dragStartInfo=null,this.isDragging=!1;return}const{clientX:s,clientY:i}=t;if(this.isDragging&&this.draggedItemInfo){const d=this.gemCanvas.getBoundingClientRect();if(s>=d.left&&s<=d.right&&i>=d.top&&i<=d.bottom&&this.lastValidDropTarget.isValid){const{x:h,y:m}=this.lastValidDropTarget;this.draggedItemInfo.from==="toolbar"?this.game.addPlayerGem(this.draggedItemInfo.name,h,m):this.draggedItemInfo.id&&this.game.movePlayerGem(this.draggedItemInfo.id,h,m)}else this.draggedItemInfo.from==="board"&&this.draggedItemInfo.id&&this.game.removePlayerGem(this.draggedItemInfo.id)}else if(this.dragStartInfo&&e.target.closest("#gem-canvas")){const g=this.gemCanvas.getBoundingClientRect(),h=s-g.left,m=i-g.top,u=this.emitters.find(f=>f.isInside(h,m));if(u)if(!u.isUsed)this.game.sendWave(u.id);else{const f=o.log.find(S=>S.waveId===u.id||S.result.exitId===u.id);f?o.selectedLogEntryWaveId===f.waveId&&o.previewSourceEmitterId===u.id?this.game.setSelectedWave(null,null):this.game.setSelectedWave(f.waveId,u.id):this.game.setSelectedWave(null,null)}else{const f=this.getGemAtCanvasPos(h,m);f&&((r=this.dragStartInfo.item)==null?void 0:r.id)===f.id?(this.game.setSelectedWave(null,null),this.game.rotatePlayerGem(f.id)):this.game.setSelectedWave(null,null)}}(l=this.draggedItemInfo)!=null&&l.element&&this.draggedItemInfo.element.classList.remove("dragging"),this.dragStartInfo=null,this.isDragging=!1,this.draggedItemInfo=null,this.redrawAll(),this.updateToolbar()}getGemAtCanvasPos(e,t){if(e<0||t<0)return null;const{x:s,y:i}=this._canvasToGridCoords(e,t);for(let n=o.playerGems.length-1;n>=0;n--){const r=o.playerGems[n],l=r.gridPattern.length,d=r.gridPattern[0].length;if(s>=r.x&&s<r.x+d&&i>=r.y&&i<r.y+l&&r.gridPattern[i-r.y][s-r.x]!==a.EMPTY)return r}return null}_getPathColorName(e){if(e.absorbed)return p("log.absorbed");if(e.colors.length===0)return p("log.noColor");const t=[...e.colors].sort().join(","),s=W[t];return p(s||"log.unknownMix")}_createColorMixEntry(e){const t=$[e],s=e.split(","),i=document.createElement("div");i.className="color-mix-entry";let n="";s.forEach((l,d)=>{const g=y[l];n+=`<div class="color-mix-box" style="background-color: ${g}"></div>`,d<s.length-1&&(n+="<span>+</span>")});const r=p(W[e]||"log.unknownMix");return n+=`<span>=</span> <div class="color-mix-box" style="background-color: ${t}"></div> <span>${r}</span>`,i.innerHTML=n,i}_populateColorMixColumns(e){if(!e)return;e.innerHTML="";const t=document.createElement("div");t.className="color-mix-column";const s=document.createElement("div");s.className="color-mix-column";const i=["BLAU,ROT","BLAU,GELB","GELB,ROT","BLAU,ROT,WEISS","BLAU,GELB,WEISS","BLAU,GELB,ROT,WEISS"],n=["BLAU,WEISS","ROT,WEISS","GELB,WEISS","BLAU,GELB,ROT","GELB,ROT,WEISS"];i.forEach(r=>t.appendChild(this._createColorMixEntry(r))),n.forEach(r=>s.appendChild(this._createColorMixEntry(r))),e.appendChild(t),e.appendChild(s)}_populateIntroRules(){this.introRulesEl.innerHTML=`
            <h3 data-i18n-key="rules.title"></h3>
            <p><strong data-i18n-key="rules.objectiveTitle"></strong> <span data-i18n-key="rules.objective"></span></p>
            <ul>
                <li data-i18n-key="rules.item1"></li>
                <li data-i18n-key="rules.item2"></li>
                <li data-i18n-key="rules.item3"></li>
                <li data-i18n-key="rules.item4"></li>
                <li data-i18n-key="rules.item5"></li>
                <li data-i18n-key="rules.item6"></li>
            </ul>
            <h4 data-i18n-key="rules.colorMixingTitle"></h4>
            <p data-i18n-key="rules.colorMixingDesc"></p>
            <div class="color-mix-container"></div>
        `,this.introRulesEl.querySelectorAll("[data-i18n-key]").forEach(t=>{t.textContent=p(t.dataset.i18nKey)});const e=this.introRulesEl.querySelector(".color-mix-container");this._populateColorMixColumns(e)}_populateRulesPanel(){this.rulesPanel.innerHTML=`
            <h4 data-i18n-key="rules.basicRules"></h4>
            <ul>
                <li><strong data-i18n-key="rules.objectiveTitle"></strong> <span data-i18n-key="rules.objective"></span></li>
                <li data-i18n-key="rules.panel.item1"></li>
                <li data-i18n-key="rules.panel.item2"></li>
                <li data-i18n-key="rules.panel.item3"></li>
                <li data-i18n-key="rules.panel.item4"></li>
            </ul>
            <h4 data-i18n-key="rules.colorMixingTitle"></h4>
            <p data-i18n-key="rules.colorMixingDesc"></p>
            <div class="color-mix-container"></div>
        `,this.rulesPanel.querySelectorAll("[data-i18n-key]").forEach(t=>{t.textContent=p(t.dataset.i18nKey)});const e=this.rulesPanel.querySelector(".color-mix-container");this._populateColorMixColumns(e)}_drawSelectedWaveTooltip(e){if(!o.selectedLogEntryWaveId)return;const t=o.log.find(C=>C.waveId===o.selectedLogEntryWaveId);if(!t)return;const s=o.previewSourceEmitterId||t.waveId,i=this.emitters.find(C=>C.id===s);if(!i)return;const n=t.waveId,r=t.result.exitId,l=this._getPathColorName(t.result),d=s===n?`${n} ➔ ${l} ➔ ${r}`:`${r} ➔ ${l} ➔ ${n}`;e.save();const g=this.cellHeight*.35;e.font=`bold ${g}px -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif`,e.textBaseline="middle";const h=e.measureText(d),m={x:8,y:5},u=h.width+m.x*2,f=g+m.y*2,S=6,L=i.rect,E=5,b=this.gemCanvas.width/(window.devicePixelRatio||1),A=this.gemCanvas.height/(window.devicePixelRatio||1);let I=0,R=0;R=L.y+L.height+E,I=L.x+L.width/2-u/2,R+f>A&&(R=L.y-f-E,R<0&&(I=L.x+L.width+E,R=L.y+L.height/2-f/2,I+u>b&&(I=L.x-u-E))),I<0&&(I=0),I+u>b&&(I=b-u),R<0&&(R=0),R+f>A&&(R=A-f);const B=I+u/2,M=R+f/2;e.fillStyle="black",e.beginPath(),e.roundRect(I,R,u,f,S),e.fill(),e.fillStyle="white",e.textAlign="center",e.fillText(d,B,M),e.restore()}}document.addEventListener("DOMContentLoaded",()=>{const c=new fe,e=new de(c);window.game=e});
